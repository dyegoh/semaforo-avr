
GccApplication10.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000054  00800100  000029d2  00002a66  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000029d2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000021a  00800154  00800154  00002aba  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002aba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002b18  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00002b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fdb  00000000  00000000  00002c30  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000093f  00000000  00000000  00003c0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010ad  00000000  00000000  0000454a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000498  00000000  00000000  000055f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00008f21  00000000  00000000  00005a90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a35  00000000  00000000  0000e9b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  0000f3e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003170  00000000  00000000  0000f49e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__ctors_end>
       4:	0c 94 f4 01 	jmp	0x3e8	; 0x3e8 <__vector_1>
       8:	0c 94 07 02 	jmp	0x40e	; 0x40e <__vector_2>
       c:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      10:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      14:	0c 94 27 02 	jmp	0x44e	; 0x44e <__vector_5>
      18:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      1c:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      20:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      24:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      28:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      2c:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      30:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      34:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      38:	0c 94 84 01 	jmp	0x308	; 0x308 <__vector_14>
      3c:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      40:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      44:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      48:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      4c:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      50:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      54:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      58:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      5c:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      60:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      64:	0c 94 82 01 	jmp	0x304	; 0x304 <__bad_interrupt>
      68:	08 00       	.word	0x0008	; ????
      6a:	00 00       	nop
      6c:	be 92       	st	-X, r11
      6e:	24 49       	sbci	r18, 0x94	; 148
      70:	12 3e       	cpi	r17, 0xE2	; 226
      72:	ab aa       	std	Y+51, r10	; 0x33
      74:	aa 2a       	or	r10, r26
      76:	be cd       	rjmp	.-1156   	; 0xfffffbf4 <__eeprom_end+0xff7efbf4>
      78:	cc cc       	rjmp	.-1640   	; 0xfffffa12 <__eeprom_end+0xff7efa12>
      7a:	4c 3e       	cpi	r20, 0xEC	; 236
      7c:	00 00       	nop
      7e:	00 80       	ld	r0, Z
      80:	be ab       	std	Y+54, r27	; 0x36
      82:	aa aa       	std	Y+50, r10	; 0x32
      84:	aa 3e       	cpi	r26, 0xEA	; 234
      86:	00 00       	nop
      88:	00 00       	nop
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	00 00       	nop
      92:	00 00       	nop
      94:	00 08       	sbc	r0, r0
      96:	41 78       	andi	r20, 0x81	; 129
      98:	d3 bb       	out	0x13, r29	; 19
      9a:	43 87       	std	Z+11, r20	; 0x0b
      9c:	d1 13       	cpse	r29, r17
      9e:	3d 19       	sub	r19, r13
      a0:	0e 3c       	cpi	r16, 0xCE	; 206
      a2:	c3 bd       	out	0x23, r28	; 35
      a4:	42 82       	std	Z+2, r4	; 0x02
      a6:	ad 2b       	or	r26, r29
      a8:	3e 68       	ori	r19, 0x8E	; 142
      aa:	ec 82       	std	Y+4, r14	; 0x04
      ac:	76 be       	out	0x36, r7	; 54
      ae:	d9 8f       	std	Y+25, r29	; 0x19
      b0:	e1 a9       	ldd	r30, Z+49	; 0x31
      b2:	3e 4c       	sbci	r19, 0xCE	; 206
      b4:	80 ef       	ldi	r24, 0xF0	; 240
      b6:	ff be       	out	0x3f, r15	; 63
      b8:	01 c4       	rjmp	.+2050   	; 0x8bc <__DATA_REGION_LENGTH__+0xbc>
      ba:	ff 7f       	andi	r31, 0xFF	; 255
      bc:	3f 00       	.word	0x003f	; ????
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	07 63       	ori	r16, 0x37	; 55
      c4:	42 36       	cpi	r20, 0x62	; 98
      c6:	b7 9b       	sbis	0x16, 7	; 22
      c8:	d8 a7       	std	Y+40, r29	; 0x28
      ca:	1a 39       	cpi	r17, 0x9A	; 154
      cc:	68 56       	subi	r22, 0x68	; 104
      ce:	18 ae       	std	Y+56, r1	; 0x38
      d0:	ba ab       	std	Y+50, r27	; 0x32
      d2:	55 8c       	ldd	r5, Z+29	; 0x1d
      d4:	1d 3c       	cpi	r17, 0xCD	; 205
      d6:	b7 cc       	rjmp	.-1682   	; 0xfffffa46 <__eeprom_end+0xff7efa46>
      d8:	57 63       	ori	r21, 0x37	; 55
      da:	bd 6d       	ori	r27, 0xDD	; 221
      dc:	ed fd       	.word	0xfded	; ????
      de:	75 3e       	cpi	r23, 0xE5	; 229
      e0:	f6 17       	cp	r31, r22
      e2:	72 31       	cpi	r23, 0x12	; 18
      e4:	bf 00       	.word	0x00bf	; ????
      e6:	00 00       	nop
      e8:	80 3f       	cpi	r24, 0xF0	; 240

000000ea <CHARSET>:
      ea:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      fa:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     10a:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     11a:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
     12a:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     13a:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     14a:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     15a:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     16a:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     17a:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     18a:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     19a:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     1aa:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     1ba:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     1ca:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     1da:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     1ea:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1fa:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     20a:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     21a:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     22a:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     23a:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     24a:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     25a:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     26a:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     27a:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     28a:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     29a:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     2aa:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     2ba:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

000002ca <__ctors_end>:
     2ca:	11 24       	eor	r1, r1
     2cc:	1f be       	out	0x3f, r1	; 63
     2ce:	cf ef       	ldi	r28, 0xFF	; 255
     2d0:	d8 e0       	ldi	r29, 0x08	; 8
     2d2:	de bf       	out	0x3e, r29	; 62
     2d4:	cd bf       	out	0x3d, r28	; 61

000002d6 <__do_copy_data>:
     2d6:	11 e0       	ldi	r17, 0x01	; 1
     2d8:	a0 e0       	ldi	r26, 0x00	; 0
     2da:	b1 e0       	ldi	r27, 0x01	; 1
     2dc:	e2 ed       	ldi	r30, 0xD2	; 210
     2de:	f9 e2       	ldi	r31, 0x29	; 41
     2e0:	02 c0       	rjmp	.+4      	; 0x2e6 <__do_copy_data+0x10>
     2e2:	05 90       	lpm	r0, Z+
     2e4:	0d 92       	st	X+, r0
     2e6:	a4 35       	cpi	r26, 0x54	; 84
     2e8:	b1 07       	cpc	r27, r17
     2ea:	d9 f7       	brne	.-10     	; 0x2e2 <__do_copy_data+0xc>

000002ec <__do_clear_bss>:
     2ec:	23 e0       	ldi	r18, 0x03	; 3
     2ee:	a4 e5       	ldi	r26, 0x54	; 84
     2f0:	b1 e0       	ldi	r27, 0x01	; 1
     2f2:	01 c0       	rjmp	.+2      	; 0x2f6 <.do_clear_bss_start>

000002f4 <.do_clear_bss_loop>:
     2f4:	1d 92       	st	X+, r1

000002f6 <.do_clear_bss_start>:
     2f6:	ae 36       	cpi	r26, 0x6E	; 110
     2f8:	b2 07       	cpc	r27, r18
     2fa:	e1 f7       	brne	.-8      	; 0x2f4 <.do_clear_bss_loop>
     2fc:	0e 94 0b 09 	call	0x1216	; 0x1216 <main>
     300:	0c 94 e7 14 	jmp	0x29ce	; 0x29ce <_exit>

00000304 <__bad_interrupt>:
     304:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000308 <__vector_14>:
void leituraADC_sensor_LUX(uint8_t *flag_disparo);
void leituraADC_sensor_TEMP(uint8_t *flag_disparo);

//Tratamento de interrupções
ISR(TIMER0_COMPA_vect) //interrupção DO tc0 A CADA 1MS = (64*(249+1)/16mHZ
{
     308:	1f 92       	push	r1
     30a:	0f 92       	push	r0
     30c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     310:	0f 92       	push	r0
     312:	11 24       	eor	r1, r1
     314:	2f 93       	push	r18
     316:	3f 93       	push	r19
     318:	4f 93       	push	r20
     31a:	5f 93       	push	r21
     31c:	6f 93       	push	r22
     31e:	7f 93       	push	r23
     320:	8f 93       	push	r24
     322:	9f 93       	push	r25
     324:	af 93       	push	r26
     326:	bf 93       	push	r27
     328:	ef 93       	push	r30
     32a:	ff 93       	push	r31
     32c:	cf 93       	push	r28
     32e:	df 93       	push	r29
     330:	cd b7       	in	r28, 0x3d	; 61
     332:	de b7       	in	r29, 0x3e	; 62
	tempo_ms++;
     334:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <tempo_ms>
     338:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <tempo_ms+0x1>
     33c:	a0 91 59 01 	lds	r26, 0x0159	; 0x800159 <tempo_ms+0x2>
     340:	b0 91 5a 01 	lds	r27, 0x015A	; 0x80015a <tempo_ms+0x3>
     344:	01 96       	adiw	r24, 0x01	; 1
     346:	a1 1d       	adc	r26, r1
     348:	b1 1d       	adc	r27, r1
     34a:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <tempo_ms>
     34e:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <tempo_ms+0x1>
     352:	a0 93 59 01 	sts	0x0159, r26	; 0x800159 <tempo_ms+0x2>
     356:	b0 93 5a 01 	sts	0x015A, r27	; 0x80015a <tempo_ms+0x3>
	//PORTD ^= 0b01000000;
	if((tempo_ms % 5000)==0)//true a cada 5000ms
     35a:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <tempo_ms>
     35e:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <tempo_ms+0x1>
     362:	a0 91 59 01 	lds	r26, 0x0159	; 0x800159 <tempo_ms+0x2>
     366:	b0 91 5a 01 	lds	r27, 0x015A	; 0x80015a <tempo_ms+0x3>
     36a:	28 e8       	ldi	r18, 0x88	; 136
     36c:	33 e1       	ldi	r19, 0x13	; 19
     36e:	40 e0       	ldi	r20, 0x00	; 0
     370:	50 e0       	ldi	r21, 0x00	; 0
     372:	bc 01       	movw	r22, r24
     374:	cd 01       	movw	r24, r26
     376:	0e 94 ad 11 	call	0x235a	; 0x235a <__udivmodsi4>
     37a:	dc 01       	movw	r26, r24
     37c:	cb 01       	movw	r24, r22
     37e:	89 2b       	or	r24, r25
     380:	8a 2b       	or	r24, r26
     382:	8b 2b       	or	r24, r27
     384:	19 f4       	brne	.+6      	; 0x38c <__vector_14+0x84>
		flag_5000ms = 1;
     386:	81 e0       	ldi	r24, 0x01	; 1
     388:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <flag_5000ms>
	if((tempo_ms % 500)==0)//true a cada 5000ms
     38c:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <tempo_ms>
     390:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <tempo_ms+0x1>
     394:	a0 91 59 01 	lds	r26, 0x0159	; 0x800159 <tempo_ms+0x2>
     398:	b0 91 5a 01 	lds	r27, 0x015A	; 0x80015a <tempo_ms+0x3>
     39c:	24 ef       	ldi	r18, 0xF4	; 244
     39e:	31 e0       	ldi	r19, 0x01	; 1
     3a0:	40 e0       	ldi	r20, 0x00	; 0
     3a2:	50 e0       	ldi	r21, 0x00	; 0
     3a4:	bc 01       	movw	r22, r24
     3a6:	cd 01       	movw	r24, r26
     3a8:	0e 94 ad 11 	call	0x235a	; 0x235a <__udivmodsi4>
     3ac:	dc 01       	movw	r26, r24
     3ae:	cb 01       	movw	r24, r22
     3b0:	89 2b       	or	r24, r25
     3b2:	8a 2b       	or	r24, r26
     3b4:	8b 2b       	or	r24, r27
     3b6:	19 f4       	brne	.+6      	; 0x3be <__vector_14+0xb6>
		flag_500ms = 1;
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <flag_500ms>
}
     3be:	00 00       	nop
     3c0:	df 91       	pop	r29
     3c2:	cf 91       	pop	r28
     3c4:	ff 91       	pop	r31
     3c6:	ef 91       	pop	r30
     3c8:	bf 91       	pop	r27
     3ca:	af 91       	pop	r26
     3cc:	9f 91       	pop	r25
     3ce:	8f 91       	pop	r24
     3d0:	7f 91       	pop	r23
     3d2:	6f 91       	pop	r22
     3d4:	5f 91       	pop	r21
     3d6:	4f 91       	pop	r20
     3d8:	3f 91       	pop	r19
     3da:	2f 91       	pop	r18
     3dc:	0f 90       	pop	r0
     3de:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     3e2:	0f 90       	pop	r0
     3e4:	1f 90       	pop	r1
     3e6:	18 95       	reti

000003e8 <__vector_1>:

ISR(INT0_vect) //interrupção pino D2
{
     3e8:	1f 92       	push	r1
     3ea:	0f 92       	push	r0
     3ec:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     3f0:	0f 92       	push	r0
     3f2:	11 24       	eor	r1, r1
     3f4:	cf 93       	push	r28
     3f6:	df 93       	push	r29
     3f8:	cd b7       	in	r28, 0x3d	; 61
     3fa:	de b7       	in	r29, 0x3e	; 62
	//anima_LCD(semaforo);
}
     3fc:	00 00       	nop
     3fe:	df 91       	pop	r29
     400:	cf 91       	pop	r28
     402:	0f 90       	pop	r0
     404:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     408:	0f 90       	pop	r0
     40a:	1f 90       	pop	r1
     40c:	18 95       	reti

0000040e <__vector_2>:
{
	leitura_ADC = ADC;
}*/

ISR(INT1_vect) //interrupção externa 1, PIN D3, Sensor de presença de carros
{
     40e:	1f 92       	push	r1
     410:	0f 92       	push	r0
     412:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     416:	0f 92       	push	r0
     418:	11 24       	eor	r1, r1
     41a:	8f 93       	push	r24
     41c:	9f 93       	push	r25
     41e:	cf 93       	push	r28
     420:	df 93       	push	r29
     422:	cd b7       	in	r28, 0x3d	; 61
     424:	de b7       	in	r29, 0x3e	; 62
	num_carros++;
     426:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <num_carros>
     42a:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <num_carros+0x1>
     42e:	01 96       	adiw	r24, 0x01	; 1
     430:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <num_carros+0x1>
     434:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <num_carros>
}
     438:	00 00       	nop
     43a:	df 91       	pop	r29
     43c:	cf 91       	pop	r28
     43e:	9f 91       	pop	r25
     440:	8f 91       	pop	r24
     442:	0f 90       	pop	r0
     444:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     448:	0f 90       	pop	r0
     44a:	1f 90       	pop	r1
     44c:	18 95       	reti

0000044e <__vector_5>:

ISR(PCINT2_vect){//interupção 2 por mudança de pino na porta D (PD4, PD5, PD6) - BOTÃO "+", "-", E "S"
     44e:	1f 92       	push	r1
     450:	0f 92       	push	r0
     452:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     456:	0f 92       	push	r0
     458:	11 24       	eor	r1, r1
     45a:	cf 92       	push	r12
     45c:	df 92       	push	r13
     45e:	ef 92       	push	r14
     460:	ff 92       	push	r15
     462:	0f 93       	push	r16
     464:	1f 93       	push	r17
     466:	2f 93       	push	r18
     468:	3f 93       	push	r19
     46a:	4f 93       	push	r20
     46c:	5f 93       	push	r21
     46e:	6f 93       	push	r22
     470:	7f 93       	push	r23
     472:	8f 93       	push	r24
     474:	9f 93       	push	r25
     476:	af 93       	push	r26
     478:	bf 93       	push	r27
     47a:	ef 93       	push	r30
     47c:	ff 93       	push	r31
     47e:	cf 93       	push	r28
     480:	df 93       	push	r29
     482:	cd b7       	in	r28, 0x3d	; 61
     484:	de b7       	in	r29, 0x3e	; 62
	
	if((PIND&0b00010000)==0)// BOTÃO "+" PD4
     486:	89 e2       	ldi	r24, 0x29	; 41
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	fc 01       	movw	r30, r24
     48c:	80 81       	ld	r24, Z
     48e:	88 2f       	mov	r24, r24
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	80 71       	andi	r24, 0x10	; 16
     494:	99 27       	eor	r25, r25
     496:	89 2b       	or	r24, r25
     498:	09 f0       	breq	.+2      	; 0x49c <__vector_5+0x4e>
     49a:	57 c0       	rjmp	.+174    	; 0x54a <__vector_5+0xfc>
	{
		
		switch (selecao_parametro)
     49c:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__data_end>
     4a0:	88 2f       	mov	r24, r24
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	81 30       	cpi	r24, 0x01	; 1
     4a6:	91 05       	cpc	r25, r1
     4a8:	a9 f0       	breq	.+42     	; 0x4d4 <__vector_5+0x86>
     4aa:	82 30       	cpi	r24, 0x02	; 2
     4ac:	91 05       	cpc	r25, r1
     4ae:	1c f4       	brge	.+6      	; 0x4b6 <__vector_5+0x68>
     4b0:	89 2b       	or	r24, r25
     4b2:	39 f0       	breq	.+14     	; 0x4c2 <__vector_5+0x74>
     4b4:	4a c0       	rjmp	.+148    	; 0x54a <__vector_5+0xfc>
     4b6:	82 30       	cpi	r24, 0x02	; 2
     4b8:	91 05       	cpc	r25, r1
     4ba:	f1 f0       	breq	.+60     	; 0x4f8 <__vector_5+0xaa>
     4bc:	03 97       	sbiw	r24, 0x03	; 3
     4be:	71 f1       	breq	.+92     	; 0x51c <__vector_5+0xce>
     4c0:	44 c0       	rjmp	.+136    	; 0x54a <__vector_5+0xfc>
		{
			case Sel_modo:
				semaforo.modo = !semaforo.modo;
     4c2:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <semaforo>
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	99 23       	and	r25, r25
     4ca:	09 f0       	breq	.+2      	; 0x4ce <__vector_5+0x80>
     4cc:	80 e0       	ldi	r24, 0x00	; 0
     4ce:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <semaforo>
				break;
     4d2:	3b c0       	rjmp	.+118    	; 0x54a <__vector_5+0xfc>
			case Sel_tempo_verde:
				if(semaforo.tempo_verde_ms <= 8000)
     4d4:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <semaforo+0x1>
     4d8:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <semaforo+0x2>
     4dc:	81 34       	cpi	r24, 0x41	; 65
     4de:	9f 41       	sbci	r25, 0x1F	; 31
     4e0:	78 f5       	brcc	.+94     	; 0x540 <__vector_5+0xf2>
					semaforo.tempo_verde_ms += 1000;
     4e2:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <semaforo+0x1>
     4e6:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <semaforo+0x2>
     4ea:	88 51       	subi	r24, 0x18	; 24
     4ec:	9c 4f       	sbci	r25, 0xFC	; 252
     4ee:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <semaforo+0x2>
     4f2:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <semaforo+0x1>
				break;
     4f6:	24 c0       	rjmp	.+72     	; 0x540 <__vector_5+0xf2>
			case Sel_tempo_vermelho:
				if(semaforo.tempo_vermelho_ms <= 8000)
     4f8:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <semaforo+0x3>
     4fc:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <semaforo+0x4>
     500:	81 34       	cpi	r24, 0x41	; 65
     502:	9f 41       	sbci	r25, 0x1F	; 31
     504:	f8 f4       	brcc	.+62     	; 0x544 <__vector_5+0xf6>
					semaforo.tempo_vermelho_ms += 1000;
     506:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <semaforo+0x3>
     50a:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <semaforo+0x4>
     50e:	88 51       	subi	r24, 0x18	; 24
     510:	9c 4f       	sbci	r25, 0xFC	; 252
     512:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <semaforo+0x4>
     516:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <semaforo+0x3>
				break;
     51a:	14 c0       	rjmp	.+40     	; 0x544 <__vector_5+0xf6>
			case Sel_tempo_amarelo:
				if(semaforo.tempo_amarelo_ms <= 8000)
     51c:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <semaforo+0x5>
     520:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <semaforo+0x6>
     524:	81 34       	cpi	r24, 0x41	; 65
     526:	9f 41       	sbci	r25, 0x1F	; 31
     528:	78 f4       	brcc	.+30     	; 0x548 <__vector_5+0xfa>
					semaforo.tempo_amarelo_ms += 1000;
     52a:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <semaforo+0x5>
     52e:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <semaforo+0x6>
     532:	88 51       	subi	r24, 0x18	; 24
     534:	9c 4f       	sbci	r25, 0xFC	; 252
     536:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <semaforo+0x6>
     53a:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <semaforo+0x5>
				break;			
     53e:	04 c0       	rjmp	.+8      	; 0x548 <__vector_5+0xfa>
				semaforo.modo = !semaforo.modo;
				break;
			case Sel_tempo_verde:
				if(semaforo.tempo_verde_ms <= 8000)
					semaforo.tempo_verde_ms += 1000;
				break;
     540:	00 00       	nop
     542:	03 c0       	rjmp	.+6      	; 0x54a <__vector_5+0xfc>
			case Sel_tempo_vermelho:
				if(semaforo.tempo_vermelho_ms <= 8000)
					semaforo.tempo_vermelho_ms += 1000;
				break;
     544:	00 00       	nop
     546:	01 c0       	rjmp	.+2      	; 0x54a <__vector_5+0xfc>
			case Sel_tempo_amarelo:
				if(semaforo.tempo_amarelo_ms <= 8000)
					semaforo.tempo_amarelo_ms += 1000;
				break;			
     548:	00 00       	nop
		}
	}
			
	if((PIND&0b00100000)==0)// BOTÃO "-" PD5
     54a:	89 e2       	ldi	r24, 0x29	; 41
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	fc 01       	movw	r30, r24
     550:	80 81       	ld	r24, Z
     552:	88 2f       	mov	r24, r24
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	80 72       	andi	r24, 0x20	; 32
     558:	99 27       	eor	r25, r25
     55a:	89 2b       	or	r24, r25
     55c:	09 f0       	breq	.+2      	; 0x560 <__vector_5+0x112>
     55e:	57 c0       	rjmp	.+174    	; 0x60e <__vector_5+0x1c0>
	{
		
		switch(selecao_parametro){
     560:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__data_end>
     564:	88 2f       	mov	r24, r24
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	81 30       	cpi	r24, 0x01	; 1
     56a:	91 05       	cpc	r25, r1
     56c:	a9 f0       	breq	.+42     	; 0x598 <__vector_5+0x14a>
     56e:	82 30       	cpi	r24, 0x02	; 2
     570:	91 05       	cpc	r25, r1
     572:	1c f4       	brge	.+6      	; 0x57a <__vector_5+0x12c>
     574:	89 2b       	or	r24, r25
     576:	39 f0       	breq	.+14     	; 0x586 <__vector_5+0x138>
     578:	4a c0       	rjmp	.+148    	; 0x60e <__vector_5+0x1c0>
     57a:	82 30       	cpi	r24, 0x02	; 2
     57c:	91 05       	cpc	r25, r1
     57e:	f1 f0       	breq	.+60     	; 0x5bc <__vector_5+0x16e>
     580:	03 97       	sbiw	r24, 0x03	; 3
     582:	71 f1       	breq	.+92     	; 0x5e0 <__vector_5+0x192>
     584:	44 c0       	rjmp	.+136    	; 0x60e <__vector_5+0x1c0>
			
			case Sel_modo:
				semaforo.modo = !semaforo.modo;
     586:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <semaforo>
     58a:	81 e0       	ldi	r24, 0x01	; 1
     58c:	99 23       	and	r25, r25
     58e:	09 f0       	breq	.+2      	; 0x592 <__vector_5+0x144>
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <semaforo>
				break;
     596:	3b c0       	rjmp	.+118    	; 0x60e <__vector_5+0x1c0>
			case Sel_tempo_verde:
				if(semaforo.tempo_verde_ms >= 2000)
     598:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <semaforo+0x1>
     59c:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <semaforo+0x2>
     5a0:	80 3d       	cpi	r24, 0xD0	; 208
     5a2:	97 40       	sbci	r25, 0x07	; 7
     5a4:	78 f1       	brcs	.+94     	; 0x604 <__vector_5+0x1b6>
					semaforo.tempo_verde_ms -= 1000;
     5a6:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <semaforo+0x1>
     5aa:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <semaforo+0x2>
     5ae:	88 5e       	subi	r24, 0xE8	; 232
     5b0:	93 40       	sbci	r25, 0x03	; 3
     5b2:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <semaforo+0x2>
     5b6:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <semaforo+0x1>
				break;
     5ba:	24 c0       	rjmp	.+72     	; 0x604 <__vector_5+0x1b6>
			case Sel_tempo_vermelho:
				if(semaforo.tempo_vermelho_ms >= 2000)
     5bc:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <semaforo+0x3>
     5c0:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <semaforo+0x4>
     5c4:	80 3d       	cpi	r24, 0xD0	; 208
     5c6:	97 40       	sbci	r25, 0x07	; 7
     5c8:	f8 f0       	brcs	.+62     	; 0x608 <__vector_5+0x1ba>
					semaforo.tempo_vermelho_ms -= 1000;
     5ca:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <semaforo+0x3>
     5ce:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <semaforo+0x4>
     5d2:	88 5e       	subi	r24, 0xE8	; 232
     5d4:	93 40       	sbci	r25, 0x03	; 3
     5d6:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <semaforo+0x4>
     5da:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <semaforo+0x3>
				break;
     5de:	14 c0       	rjmp	.+40     	; 0x608 <__vector_5+0x1ba>
			case Sel_tempo_amarelo:
				if(semaforo.tempo_amarelo_ms >= 2000)
     5e0:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <semaforo+0x5>
     5e4:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <semaforo+0x6>
     5e8:	80 3d       	cpi	r24, 0xD0	; 208
     5ea:	97 40       	sbci	r25, 0x07	; 7
     5ec:	78 f0       	brcs	.+30     	; 0x60c <__vector_5+0x1be>
					semaforo.tempo_amarelo_ms -= 1000;
     5ee:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <semaforo+0x5>
     5f2:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <semaforo+0x6>
     5f6:	88 5e       	subi	r24, 0xE8	; 232
     5f8:	93 40       	sbci	r25, 0x03	; 3
     5fa:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <semaforo+0x6>
     5fe:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <semaforo+0x5>
				break;
     602:	04 c0       	rjmp	.+8      	; 0x60c <__vector_5+0x1be>
				semaforo.modo = !semaforo.modo;
				break;
			case Sel_tempo_verde:
				if(semaforo.tempo_verde_ms >= 2000)
					semaforo.tempo_verde_ms -= 1000;
				break;
     604:	00 00       	nop
     606:	03 c0       	rjmp	.+6      	; 0x60e <__vector_5+0x1c0>
			case Sel_tempo_vermelho:
				if(semaforo.tempo_vermelho_ms >= 2000)
					semaforo.tempo_vermelho_ms -= 1000;
				break;
     608:	00 00       	nop
     60a:	01 c0       	rjmp	.+2      	; 0x60e <__vector_5+0x1c0>
			case Sel_tempo_amarelo:
				if(semaforo.tempo_amarelo_ms >= 2000)
					semaforo.tempo_amarelo_ms -= 1000;
				break;
     60c:	00 00       	nop
		}
	}

	if((PIND&0b01000000)==0)// BOTÃO "S" PD6
     60e:	89 e2       	ldi	r24, 0x29	; 41
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	fc 01       	movw	r30, r24
     614:	80 81       	ld	r24, Z
     616:	88 2f       	mov	r24, r24
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	80 74       	andi	r24, 0x40	; 64
     61c:	99 27       	eor	r25, r25
     61e:	89 2b       	or	r24, r25
     620:	61 f4       	brne	.+24     	; 0x63a <__vector_5+0x1ec>
	{
		if(selecao_parametro < (Size_enum_parametros-1))
     622:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__data_end>
     626:	83 30       	cpi	r24, 0x03	; 3
     628:	30 f4       	brcc	.+12     	; 0x636 <__vector_5+0x1e8>
			selecao_parametro++;
     62a:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__data_end>
     62e:	8f 5f       	subi	r24, 0xFF	; 255
     630:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <__data_end>
     634:	02 c0       	rjmp	.+4      	; 0x63a <__vector_5+0x1ec>
		else
			selecao_parametro = Sel_modo;
     636:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <__data_end>
	}
	
	anima_LCD(semaforo);
     63a:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <semaforo>
     63e:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <semaforo+0x1>
     642:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <semaforo+0x2>
     646:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <semaforo+0x3>
     64a:	00 91 10 01 	lds	r16, 0x0110	; 0x800110 <semaforo+0x4>
     64e:	10 91 11 01 	lds	r17, 0x0111	; 0x800111 <semaforo+0x5>
     652:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <semaforo+0x6>
     656:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <semaforo+0x7>
     65a:	40 91 14 01 	lds	r20, 0x0114	; 0x800114 <semaforo+0x8>
     65e:	50 91 15 01 	lds	r21, 0x0115	; 0x800115 <semaforo+0x9>
     662:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <semaforo+0xa>
     666:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <semaforo+0xb>
     66a:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <semaforo+0xc>
     66e:	0e 94 a9 04 	call	0x952	; 0x952 <anima_LCD>
	
}
     672:	00 00       	nop
     674:	df 91       	pop	r29
     676:	cf 91       	pop	r28
     678:	ff 91       	pop	r31
     67a:	ef 91       	pop	r30
     67c:	bf 91       	pop	r27
     67e:	af 91       	pop	r26
     680:	9f 91       	pop	r25
     682:	8f 91       	pop	r24
     684:	7f 91       	pop	r23
     686:	6f 91       	pop	r22
     688:	5f 91       	pop	r21
     68a:	4f 91       	pop	r20
     68c:	3f 91       	pop	r19
     68e:	2f 91       	pop	r18
     690:	1f 91       	pop	r17
     692:	0f 91       	pop	r16
     694:	ff 90       	pop	r15
     696:	ef 90       	pop	r14
     698:	df 90       	pop	r13
     69a:	cf 90       	pop	r12
     69c:	0f 90       	pop	r0
     69e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     6a2:	0f 90       	pop	r0
     6a4:	1f 90       	pop	r1
     6a6:	18 95       	reti

000006a8 <anima_semaforo>:

void anima_semaforo(stc_semaforo semaforo, uint32_t tempo_ms )
{
     6a8:	8f 92       	push	r8
     6aa:	9f 92       	push	r9
     6ac:	af 92       	push	r10
     6ae:	bf 92       	push	r11
     6b0:	cf 92       	push	r12
     6b2:	df 92       	push	r13
     6b4:	ef 92       	push	r14
     6b6:	ff 92       	push	r15
     6b8:	0f 93       	push	r16
     6ba:	1f 93       	push	r17
     6bc:	cf 93       	push	r28
     6be:	df 93       	push	r29
     6c0:	cd b7       	in	r28, 0x3d	; 61
     6c2:	de b7       	in	r29, 0x3e	; 62
     6c4:	a3 97       	sbiw	r28, 0x23	; 35
     6c6:	0f b6       	in	r0, 0x3f	; 63
     6c8:	f8 94       	cli
     6ca:	de bf       	out	0x3e, r29	; 62
     6cc:	0f be       	out	0x3f, r0	; 63
     6ce:	cd bf       	out	0x3d, r28	; 61
     6d0:	cb 8a       	std	Y+19, r12	; 0x13
     6d2:	dc 8a       	std	Y+20, r13	; 0x14
     6d4:	ed 8a       	std	Y+21, r14	; 0x15
     6d6:	fe 8a       	std	Y+22, r15	; 0x16
     6d8:	0f 8b       	std	Y+23, r16	; 0x17
     6da:	18 8f       	std	Y+24, r17	; 0x18
     6dc:	29 8f       	std	Y+25, r18	; 0x19
     6de:	3a 8f       	std	Y+26, r19	; 0x1a
     6e0:	4b 8f       	std	Y+27, r20	; 0x1b
     6e2:	5c 8f       	std	Y+28, r21	; 0x1c
     6e4:	6d 8f       	std	Y+29, r22	; 0x1d
     6e6:	7e 8f       	std	Y+30, r23	; 0x1e
     6e8:	8f 8f       	std	Y+31, r24	; 0x1f
     6ea:	88 a2       	std	Y+32, r8	; 0x20
     6ec:	99 a2       	std	Y+33, r9	; 0x21
     6ee:	aa a2       	std	Y+34, r10	; 0x22
     6f0:	bb a2       	std	Y+35, r11	; 0x23
	const uint16_t estados[9]={0b000001111, 0b000000111, 0b000000011, 0b000000001, 0b100000000, 0b011110000, 0b001110000, 0b000110000, 0b000010000};
     6f2:	22 e1       	ldi	r18, 0x12	; 18
     6f4:	e9 e1       	ldi	r30, 0x19	; 25
     6f6:	f1 e0       	ldi	r31, 0x01	; 1
     6f8:	ce 01       	movw	r24, r28
     6fa:	01 96       	adiw	r24, 0x01	; 1
     6fc:	dc 01       	movw	r26, r24
     6fe:	01 90       	ld	r0, Z+
     700:	0d 92       	st	X+, r0
     702:	2a 95       	dec	r18
     704:	e1 f7       	brne	.-8      	; 0x6fe <anima_semaforo+0x56>
	static int8_t i=0;
	static uint32_t tempo_anterior_ms=0;
	
	PORTB = estados[i] & 0b011111111;
     706:	85 e2       	ldi	r24, 0x25	; 37
     708:	90 e0       	ldi	r25, 0x00	; 0
     70a:	20 91 5d 01 	lds	r18, 0x015D	; 0x80015d <i.2230>
     70e:	02 2e       	mov	r0, r18
     710:	00 0c       	add	r0, r0
     712:	33 0b       	sbc	r19, r19
     714:	22 0f       	add	r18, r18
     716:	33 1f       	adc	r19, r19
     718:	ae 01       	movw	r20, r28
     71a:	4f 5f       	subi	r20, 0xFF	; 255
     71c:	5f 4f       	sbci	r21, 0xFF	; 255
     71e:	24 0f       	add	r18, r20
     720:	35 1f       	adc	r19, r21
     722:	f9 01       	movw	r30, r18
     724:	20 81       	ld	r18, Z
     726:	31 81       	ldd	r19, Z+1	; 0x01
     728:	fc 01       	movw	r30, r24
     72a:	20 83       	st	Z, r18
	if(estados[i] & 0b100000000)
     72c:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <i.2230>
     730:	08 2e       	mov	r0, r24
     732:	00 0c       	add	r0, r0
     734:	99 0b       	sbc	r25, r25
     736:	88 0f       	add	r24, r24
     738:	99 1f       	adc	r25, r25
     73a:	9e 01       	movw	r18, r28
     73c:	2f 5f       	subi	r18, 0xFF	; 255
     73e:	3f 4f       	sbci	r19, 0xFF	; 255
     740:	82 0f       	add	r24, r18
     742:	93 1f       	adc	r25, r19
     744:	fc 01       	movw	r30, r24
     746:	80 81       	ld	r24, Z
     748:	91 81       	ldd	r25, Z+1	; 0x01
     74a:	88 27       	eor	r24, r24
     74c:	91 70       	andi	r25, 0x01	; 1
     74e:	89 2b       	or	r24, r25
     750:	51 f0       	breq	.+20     	; 0x766 <anima_semaforo+0xbe>
		PORTD |= 0b10000000;
     752:	8b e2       	ldi	r24, 0x2B	; 43
     754:	90 e0       	ldi	r25, 0x00	; 0
     756:	2b e2       	ldi	r18, 0x2B	; 43
     758:	30 e0       	ldi	r19, 0x00	; 0
     75a:	f9 01       	movw	r30, r18
     75c:	20 81       	ld	r18, Z
     75e:	20 68       	ori	r18, 0x80	; 128
     760:	fc 01       	movw	r30, r24
     762:	20 83       	st	Z, r18
     764:	09 c0       	rjmp	.+18     	; 0x778 <anima_semaforo+0xd0>
	else
		PORTD &= 0b01111111;
     766:	8b e2       	ldi	r24, 0x2B	; 43
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	2b e2       	ldi	r18, 0x2B	; 43
     76c:	30 e0       	ldi	r19, 0x00	; 0
     76e:	f9 01       	movw	r30, r18
     770:	20 81       	ld	r18, Z
     772:	2f 77       	andi	r18, 0x7F	; 127
     774:	fc 01       	movw	r30, r24
     776:	20 83       	st	Z, r18
	
	if(i<=3)
     778:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <i.2230>
     77c:	84 30       	cpi	r24, 0x04	; 4
     77e:	0c f0       	brlt	.+2      	; 0x782 <anima_semaforo+0xda>
     780:	42 c0       	rjmp	.+132    	; 0x806 <__DATA_REGION_LENGTH__+0x6>
	{
		//_delay_ms(Tempo_verde_ms/4);
		if((tempo_ms - tempo_anterior_ms)>= (semaforo.tempo_verde_ms/4))
     782:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <tempo_anterior_ms.2231>
     786:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <tempo_anterior_ms.2231+0x1>
     78a:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <tempo_anterior_ms.2231+0x2>
     78e:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <tempo_anterior_ms.2231+0x3>
     792:	28 a1       	ldd	r18, Y+32	; 0x20
     794:	39 a1       	ldd	r19, Y+33	; 0x21
     796:	4a a1       	ldd	r20, Y+34	; 0x22
     798:	5b a1       	ldd	r21, Y+35	; 0x23
     79a:	28 1b       	sub	r18, r24
     79c:	39 0b       	sbc	r19, r25
     79e:	4a 0b       	sbc	r20, r26
     7a0:	5b 0b       	sbc	r21, r27
     7a2:	8c 89       	ldd	r24, Y+20	; 0x14
     7a4:	9d 89       	ldd	r25, Y+21	; 0x15
     7a6:	96 95       	lsr	r25
     7a8:	87 95       	ror	r24
     7aa:	96 95       	lsr	r25
     7ac:	87 95       	ror	r24
     7ae:	cc 01       	movw	r24, r24
     7b0:	a0 e0       	ldi	r26, 0x00	; 0
     7b2:	b0 e0       	ldi	r27, 0x00	; 0
     7b4:	28 17       	cp	r18, r24
     7b6:	39 07       	cpc	r19, r25
     7b8:	4a 07       	cpc	r20, r26
     7ba:	5b 07       	cpc	r21, r27
     7bc:	08 f4       	brcc	.+2      	; 0x7c0 <anima_semaforo+0x118>
     7be:	b5 c0       	rjmp	.+362    	; 0x92a <__stack+0x2b>
		{
			i++;
     7c0:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <i.2230>
     7c4:	8f 5f       	subi	r24, 0xFF	; 255
     7c6:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <i.2230>
			tempo_anterior_ms += (semaforo.tempo_verde_ms/4);
     7ca:	8c 89       	ldd	r24, Y+20	; 0x14
     7cc:	9d 89       	ldd	r25, Y+21	; 0x15
     7ce:	96 95       	lsr	r25
     7d0:	87 95       	ror	r24
     7d2:	96 95       	lsr	r25
     7d4:	87 95       	ror	r24
     7d6:	9c 01       	movw	r18, r24
     7d8:	40 e0       	ldi	r20, 0x00	; 0
     7da:	50 e0       	ldi	r21, 0x00	; 0
     7dc:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <tempo_anterior_ms.2231>
     7e0:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <tempo_anterior_ms.2231+0x1>
     7e4:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <tempo_anterior_ms.2231+0x2>
     7e8:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <tempo_anterior_ms.2231+0x3>
     7ec:	82 0f       	add	r24, r18
     7ee:	93 1f       	adc	r25, r19
     7f0:	a4 1f       	adc	r26, r20
     7f2:	b5 1f       	adc	r27, r21
     7f4:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <tempo_anterior_ms.2231>
     7f8:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <tempo_anterior_ms.2231+0x1>
     7fc:	a0 93 60 01 	sts	0x0160, r26	; 0x800160 <tempo_anterior_ms.2231+0x2>
     800:	b0 93 61 01 	sts	0x0161, r27	; 0x800161 <tempo_anterior_ms.2231+0x3>
				i=0;
				tempo_anterior_ms = tempo_ms;
			}
		}
	}
}
     804:	92 c0       	rjmp	.+292    	; 0x92a <__stack+0x2b>
			tempo_anterior_ms += (semaforo.tempo_verde_ms/4);
		}
	}
	else
	{
		if(i<=4)
     806:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <i.2230>
     80a:	85 30       	cpi	r24, 0x05	; 5
     80c:	d4 f5       	brge	.+116    	; 0x882 <__DATA_REGION_LENGTH__+0x82>
		{
			
			if((tempo_ms - tempo_anterior_ms) >= (semaforo.tempo_amarelo_ms))
     80e:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <tempo_anterior_ms.2231>
     812:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <tempo_anterior_ms.2231+0x1>
     816:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <tempo_anterior_ms.2231+0x2>
     81a:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <tempo_anterior_ms.2231+0x3>
     81e:	28 a1       	ldd	r18, Y+32	; 0x20
     820:	39 a1       	ldd	r19, Y+33	; 0x21
     822:	4a a1       	ldd	r20, Y+34	; 0x22
     824:	5b a1       	ldd	r21, Y+35	; 0x23
     826:	28 1b       	sub	r18, r24
     828:	39 0b       	sbc	r19, r25
     82a:	4a 0b       	sbc	r20, r26
     82c:	5b 0b       	sbc	r21, r27
     82e:	88 8d       	ldd	r24, Y+24	; 0x18
     830:	99 8d       	ldd	r25, Y+25	; 0x19
     832:	cc 01       	movw	r24, r24
     834:	a0 e0       	ldi	r26, 0x00	; 0
     836:	b0 e0       	ldi	r27, 0x00	; 0
     838:	28 17       	cp	r18, r24
     83a:	39 07       	cpc	r19, r25
     83c:	4a 07       	cpc	r20, r26
     83e:	5b 07       	cpc	r21, r27
     840:	08 f4       	brcc	.+2      	; 0x844 <__DATA_REGION_LENGTH__+0x44>
     842:	73 c0       	rjmp	.+230    	; 0x92a <__stack+0x2b>
			{
				i++;
     844:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <i.2230>
     848:	8f 5f       	subi	r24, 0xFF	; 255
     84a:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <i.2230>
				tempo_anterior_ms += (semaforo.tempo_amarelo_ms);
     84e:	88 8d       	ldd	r24, Y+24	; 0x18
     850:	99 8d       	ldd	r25, Y+25	; 0x19
     852:	9c 01       	movw	r18, r24
     854:	40 e0       	ldi	r20, 0x00	; 0
     856:	50 e0       	ldi	r21, 0x00	; 0
     858:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <tempo_anterior_ms.2231>
     85c:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <tempo_anterior_ms.2231+0x1>
     860:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <tempo_anterior_ms.2231+0x2>
     864:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <tempo_anterior_ms.2231+0x3>
     868:	82 0f       	add	r24, r18
     86a:	93 1f       	adc	r25, r19
     86c:	a4 1f       	adc	r26, r20
     86e:	b5 1f       	adc	r27, r21
     870:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <tempo_anterior_ms.2231>
     874:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <tempo_anterior_ms.2231+0x1>
     878:	a0 93 60 01 	sts	0x0160, r26	; 0x800160 <tempo_anterior_ms.2231+0x2>
     87c:	b0 93 61 01 	sts	0x0161, r27	; 0x800161 <tempo_anterior_ms.2231+0x3>
				i=0;
				tempo_anterior_ms = tempo_ms;
			}
		}
	}
}
     880:	54 c0       	rjmp	.+168    	; 0x92a <__stack+0x2b>
				tempo_anterior_ms += (semaforo.tempo_amarelo_ms);
			}
		}
		else
		{
			if(i<=8)
     882:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <i.2230>
     886:	89 30       	cpi	r24, 0x09	; 9
     888:	0c f0       	brlt	.+2      	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
     88a:	41 c0       	rjmp	.+130    	; 0x90e <__stack+0xf>
			{
				
				if((tempo_ms - tempo_anterior_ms) >= (semaforo.tempo_vermelho_ms/4))
     88c:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <tempo_anterior_ms.2231>
     890:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <tempo_anterior_ms.2231+0x1>
     894:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <tempo_anterior_ms.2231+0x2>
     898:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <tempo_anterior_ms.2231+0x3>
     89c:	28 a1       	ldd	r18, Y+32	; 0x20
     89e:	39 a1       	ldd	r19, Y+33	; 0x21
     8a0:	4a a1       	ldd	r20, Y+34	; 0x22
     8a2:	5b a1       	ldd	r21, Y+35	; 0x23
     8a4:	28 1b       	sub	r18, r24
     8a6:	39 0b       	sbc	r19, r25
     8a8:	4a 0b       	sbc	r20, r26
     8aa:	5b 0b       	sbc	r21, r27
     8ac:	8e 89       	ldd	r24, Y+22	; 0x16
     8ae:	9f 89       	ldd	r25, Y+23	; 0x17
     8b0:	96 95       	lsr	r25
     8b2:	87 95       	ror	r24
     8b4:	96 95       	lsr	r25
     8b6:	87 95       	ror	r24
     8b8:	cc 01       	movw	r24, r24
     8ba:	a0 e0       	ldi	r26, 0x00	; 0
     8bc:	b0 e0       	ldi	r27, 0x00	; 0
     8be:	28 17       	cp	r18, r24
     8c0:	39 07       	cpc	r19, r25
     8c2:	4a 07       	cpc	r20, r26
     8c4:	5b 07       	cpc	r21, r27
     8c6:	88 f1       	brcs	.+98     	; 0x92a <__stack+0x2b>
				{
					i++;
     8c8:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <i.2230>
     8cc:	8f 5f       	subi	r24, 0xFF	; 255
     8ce:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <i.2230>
					tempo_anterior_ms +=(semaforo.tempo_vermelho_ms/4);
     8d2:	8e 89       	ldd	r24, Y+22	; 0x16
     8d4:	9f 89       	ldd	r25, Y+23	; 0x17
     8d6:	96 95       	lsr	r25
     8d8:	87 95       	ror	r24
     8da:	96 95       	lsr	r25
     8dc:	87 95       	ror	r24
     8de:	9c 01       	movw	r18, r24
     8e0:	40 e0       	ldi	r20, 0x00	; 0
     8e2:	50 e0       	ldi	r21, 0x00	; 0
     8e4:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <tempo_anterior_ms.2231>
     8e8:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <tempo_anterior_ms.2231+0x1>
     8ec:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <tempo_anterior_ms.2231+0x2>
     8f0:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <tempo_anterior_ms.2231+0x3>
     8f4:	82 0f       	add	r24, r18
     8f6:	93 1f       	adc	r25, r19
     8f8:	a4 1f       	adc	r26, r20
     8fa:	b5 1f       	adc	r27, r21
     8fc:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <tempo_anterior_ms.2231>
     900:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <tempo_anterior_ms.2231+0x1>
     904:	a0 93 60 01 	sts	0x0160, r26	; 0x800160 <tempo_anterior_ms.2231+0x2>
     908:	b0 93 61 01 	sts	0x0161, r27	; 0x800161 <tempo_anterior_ms.2231+0x3>
				i=0;
				tempo_anterior_ms = tempo_ms;
			}
		}
	}
}
     90c:	0e c0       	rjmp	.+28     	; 0x92a <__stack+0x2b>
					tempo_anterior_ms +=(semaforo.tempo_vermelho_ms/4);
				}
			}
			else
			{				
				i=0;
     90e:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <i.2230>
				tempo_anterior_ms = tempo_ms;
     912:	88 a1       	ldd	r24, Y+32	; 0x20
     914:	99 a1       	ldd	r25, Y+33	; 0x21
     916:	aa a1       	ldd	r26, Y+34	; 0x22
     918:	bb a1       	ldd	r27, Y+35	; 0x23
     91a:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <tempo_anterior_ms.2231>
     91e:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <tempo_anterior_ms.2231+0x1>
     922:	a0 93 60 01 	sts	0x0160, r26	; 0x800160 <tempo_anterior_ms.2231+0x2>
     926:	b0 93 61 01 	sts	0x0161, r27	; 0x800161 <tempo_anterior_ms.2231+0x3>
			}
		}
	}
}
     92a:	00 00       	nop
     92c:	a3 96       	adiw	r28, 0x23	; 35
     92e:	0f b6       	in	r0, 0x3f	; 63
     930:	f8 94       	cli
     932:	de bf       	out	0x3e, r29	; 62
     934:	0f be       	out	0x3f, r0	; 63
     936:	cd bf       	out	0x3d, r28	; 61
     938:	df 91       	pop	r29
     93a:	cf 91       	pop	r28
     93c:	1f 91       	pop	r17
     93e:	0f 91       	pop	r16
     940:	ff 90       	pop	r15
     942:	ef 90       	pop	r14
     944:	df 90       	pop	r13
     946:	cf 90       	pop	r12
     948:	bf 90       	pop	r11
     94a:	af 90       	pop	r10
     94c:	9f 90       	pop	r9
     94e:	8f 90       	pop	r8
     950:	08 95       	ret

00000952 <anima_LCD>:


void anima_LCD(stc_semaforo semaforo)
{
     952:	cf 92       	push	r12
     954:	df 92       	push	r13
     956:	ef 92       	push	r14
     958:	ff 92       	push	r15
     95a:	0f 93       	push	r16
     95c:	1f 93       	push	r17
     95e:	cf 93       	push	r28
     960:	df 93       	push	r29
     962:	cd b7       	in	r28, 0x3d	; 61
     964:	de b7       	in	r29, 0x3e	; 62
     966:	a3 97       	sbiw	r28, 0x23	; 35
     968:	0f b6       	in	r0, 0x3f	; 63
     96a:	f8 94       	cli
     96c:	de bf       	out	0x3e, r29	; 62
     96e:	0f be       	out	0x3f, r0	; 63
     970:	cd bf       	out	0x3d, r28	; 61
     972:	cf 8a       	std	Y+23, r12	; 0x17
     974:	d8 8e       	std	Y+24, r13	; 0x18
     976:	e9 8e       	std	Y+25, r14	; 0x19
     978:	fa 8e       	std	Y+26, r15	; 0x1a
     97a:	0b 8f       	std	Y+27, r16	; 0x1b
     97c:	1c 8f       	std	Y+28, r17	; 0x1c
     97e:	2d 8f       	std	Y+29, r18	; 0x1d
     980:	3e 8f       	std	Y+30, r19	; 0x1e
     982:	4f 8f       	std	Y+31, r20	; 0x1f
     984:	58 a3       	std	Y+32, r21	; 0x20
     986:	69 a3       	std	Y+33, r22	; 0x21
     988:	7a a3       	std	Y+34, r23	; 0x22
     98a:	8b a3       	std	Y+35, r24	; 0x23
	unsigned char tempo_vermelho_s_string[2];
	unsigned char tempo_amarelo_s_string[2];
	unsigned char carros_por_min_string[4];
	unsigned char sensor_lux_string[5];
	unsigned char sensor_temp_string[5];
	modo_string[0] = (semaforo.modo) ? 'A' : 'M'; modo_string[1]='\0';
     98c:	8f 89       	ldd	r24, Y+23	; 0x17
     98e:	88 23       	and	r24, r24
     990:	11 f0       	breq	.+4      	; 0x996 <anima_LCD+0x44>
     992:	81 e4       	ldi	r24, 0x41	; 65
     994:	01 c0       	rjmp	.+2      	; 0x998 <anima_LCD+0x46>
     996:	8d e4       	ldi	r24, 0x4D	; 77
     998:	89 83       	std	Y+1, r24	; 0x01
     99a:	1a 82       	std	Y+2, r1	; 0x02
	sprintf(tempo_verde_s_string, "%u", semaforo.tempo_verde_ms/1000);
     99c:	88 8d       	ldd	r24, Y+24	; 0x18
     99e:	99 8d       	ldd	r25, Y+25	; 0x19
     9a0:	96 95       	lsr	r25
     9a2:	87 95       	ror	r24
     9a4:	96 95       	lsr	r25
     9a6:	87 95       	ror	r24
     9a8:	96 95       	lsr	r25
     9aa:	87 95       	ror	r24
     9ac:	9c 01       	movw	r18, r24
     9ae:	a5 ec       	ldi	r26, 0xC5	; 197
     9b0:	b0 e2       	ldi	r27, 0x20	; 32
     9b2:	0e 94 ee 11 	call	0x23dc	; 0x23dc <__umulhisi3>
     9b6:	92 95       	swap	r25
     9b8:	82 95       	swap	r24
     9ba:	8f 70       	andi	r24, 0x0F	; 15
     9bc:	89 27       	eor	r24, r25
     9be:	9f 70       	andi	r25, 0x0F	; 15
     9c0:	89 27       	eor	r24, r25
     9c2:	29 2f       	mov	r18, r25
     9c4:	2f 93       	push	r18
     9c6:	8f 93       	push	r24
     9c8:	8b e2       	ldi	r24, 0x2B	; 43
     9ca:	91 e0       	ldi	r25, 0x01	; 1
     9cc:	89 2f       	mov	r24, r25
     9ce:	8f 93       	push	r24
     9d0:	8b e2       	ldi	r24, 0x2B	; 43
     9d2:	91 e0       	ldi	r25, 0x01	; 1
     9d4:	8f 93       	push	r24
     9d6:	ce 01       	movw	r24, r28
     9d8:	03 96       	adiw	r24, 0x03	; 3
     9da:	29 2f       	mov	r18, r25
     9dc:	2f 93       	push	r18
     9de:	8f 93       	push	r24
     9e0:	0e 94 fd 11 	call	0x23fa	; 0x23fa <sprintf>
     9e4:	0f 90       	pop	r0
     9e6:	0f 90       	pop	r0
     9e8:	0f 90       	pop	r0
     9ea:	0f 90       	pop	r0
     9ec:	0f 90       	pop	r0
     9ee:	0f 90       	pop	r0
	sprintf(tempo_vermelho_s_string, "%u", semaforo.tempo_vermelho_ms/1000);
     9f0:	8a 8d       	ldd	r24, Y+26	; 0x1a
     9f2:	9b 8d       	ldd	r25, Y+27	; 0x1b
     9f4:	96 95       	lsr	r25
     9f6:	87 95       	ror	r24
     9f8:	96 95       	lsr	r25
     9fa:	87 95       	ror	r24
     9fc:	96 95       	lsr	r25
     9fe:	87 95       	ror	r24
     a00:	9c 01       	movw	r18, r24
     a02:	a5 ec       	ldi	r26, 0xC5	; 197
     a04:	b0 e2       	ldi	r27, 0x20	; 32
     a06:	0e 94 ee 11 	call	0x23dc	; 0x23dc <__umulhisi3>
     a0a:	92 95       	swap	r25
     a0c:	82 95       	swap	r24
     a0e:	8f 70       	andi	r24, 0x0F	; 15
     a10:	89 27       	eor	r24, r25
     a12:	9f 70       	andi	r25, 0x0F	; 15
     a14:	89 27       	eor	r24, r25
     a16:	29 2f       	mov	r18, r25
     a18:	2f 93       	push	r18
     a1a:	8f 93       	push	r24
     a1c:	8b e2       	ldi	r24, 0x2B	; 43
     a1e:	91 e0       	ldi	r25, 0x01	; 1
     a20:	89 2f       	mov	r24, r25
     a22:	8f 93       	push	r24
     a24:	8b e2       	ldi	r24, 0x2B	; 43
     a26:	91 e0       	ldi	r25, 0x01	; 1
     a28:	8f 93       	push	r24
     a2a:	ce 01       	movw	r24, r28
     a2c:	05 96       	adiw	r24, 0x05	; 5
     a2e:	29 2f       	mov	r18, r25
     a30:	2f 93       	push	r18
     a32:	8f 93       	push	r24
     a34:	0e 94 fd 11 	call	0x23fa	; 0x23fa <sprintf>
     a38:	0f 90       	pop	r0
     a3a:	0f 90       	pop	r0
     a3c:	0f 90       	pop	r0
     a3e:	0f 90       	pop	r0
     a40:	0f 90       	pop	r0
     a42:	0f 90       	pop	r0
	sprintf(tempo_amarelo_s_string, "%u", semaforo.tempo_amarelo_ms/1000);
     a44:	8c 8d       	ldd	r24, Y+28	; 0x1c
     a46:	9d 8d       	ldd	r25, Y+29	; 0x1d
     a48:	96 95       	lsr	r25
     a4a:	87 95       	ror	r24
     a4c:	96 95       	lsr	r25
     a4e:	87 95       	ror	r24
     a50:	96 95       	lsr	r25
     a52:	87 95       	ror	r24
     a54:	9c 01       	movw	r18, r24
     a56:	a5 ec       	ldi	r26, 0xC5	; 197
     a58:	b0 e2       	ldi	r27, 0x20	; 32
     a5a:	0e 94 ee 11 	call	0x23dc	; 0x23dc <__umulhisi3>
     a5e:	92 95       	swap	r25
     a60:	82 95       	swap	r24
     a62:	8f 70       	andi	r24, 0x0F	; 15
     a64:	89 27       	eor	r24, r25
     a66:	9f 70       	andi	r25, 0x0F	; 15
     a68:	89 27       	eor	r24, r25
     a6a:	29 2f       	mov	r18, r25
     a6c:	2f 93       	push	r18
     a6e:	8f 93       	push	r24
     a70:	8b e2       	ldi	r24, 0x2B	; 43
     a72:	91 e0       	ldi	r25, 0x01	; 1
     a74:	89 2f       	mov	r24, r25
     a76:	8f 93       	push	r24
     a78:	8b e2       	ldi	r24, 0x2B	; 43
     a7a:	91 e0       	ldi	r25, 0x01	; 1
     a7c:	8f 93       	push	r24
     a7e:	ce 01       	movw	r24, r28
     a80:	07 96       	adiw	r24, 0x07	; 7
     a82:	29 2f       	mov	r18, r25
     a84:	2f 93       	push	r18
     a86:	8f 93       	push	r24
     a88:	0e 94 fd 11 	call	0x23fa	; 0x23fa <sprintf>
     a8c:	0f 90       	pop	r0
     a8e:	0f 90       	pop	r0
     a90:	0f 90       	pop	r0
     a92:	0f 90       	pop	r0
     a94:	0f 90       	pop	r0
     a96:	0f 90       	pop	r0
	sprintf(carros_por_min_string, "%u", semaforo.carros_por_min/500);
     a98:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a9a:	9f 8d       	ldd	r25, Y+31	; 0x1f
     a9c:	96 95       	lsr	r25
     a9e:	87 95       	ror	r24
     aa0:	96 95       	lsr	r25
     aa2:	87 95       	ror	r24
     aa4:	9c 01       	movw	r18, r24
     aa6:	a5 ec       	ldi	r26, 0xC5	; 197
     aa8:	b0 e2       	ldi	r27, 0x20	; 32
     aaa:	0e 94 ee 11 	call	0x23dc	; 0x23dc <__umulhisi3>
     aae:	92 95       	swap	r25
     ab0:	82 95       	swap	r24
     ab2:	8f 70       	andi	r24, 0x0F	; 15
     ab4:	89 27       	eor	r24, r25
     ab6:	9f 70       	andi	r25, 0x0F	; 15
     ab8:	89 27       	eor	r24, r25
     aba:	29 2f       	mov	r18, r25
     abc:	2f 93       	push	r18
     abe:	8f 93       	push	r24
     ac0:	8b e2       	ldi	r24, 0x2B	; 43
     ac2:	91 e0       	ldi	r25, 0x01	; 1
     ac4:	89 2f       	mov	r24, r25
     ac6:	8f 93       	push	r24
     ac8:	8b e2       	ldi	r24, 0x2B	; 43
     aca:	91 e0       	ldi	r25, 0x01	; 1
     acc:	8f 93       	push	r24
     ace:	ce 01       	movw	r24, r28
     ad0:	09 96       	adiw	r24, 0x09	; 9
     ad2:	29 2f       	mov	r18, r25
     ad4:	2f 93       	push	r18
     ad6:	8f 93       	push	r24
     ad8:	0e 94 fd 11 	call	0x23fa	; 0x23fa <sprintf>
     adc:	0f 90       	pop	r0
     ade:	0f 90       	pop	r0
     ae0:	0f 90       	pop	r0
     ae2:	0f 90       	pop	r0
     ae4:	0f 90       	pop	r0
     ae6:	0f 90       	pop	r0
	sprintf(sensor_lux_string, "%u", semaforo.sensor_lux );
     ae8:	88 a1       	ldd	r24, Y+32	; 0x20
     aea:	99 a1       	ldd	r25, Y+33	; 0x21
     aec:	29 2f       	mov	r18, r25
     aee:	2f 93       	push	r18
     af0:	8f 93       	push	r24
     af2:	8b e2       	ldi	r24, 0x2B	; 43
     af4:	91 e0       	ldi	r25, 0x01	; 1
     af6:	89 2f       	mov	r24, r25
     af8:	8f 93       	push	r24
     afa:	8b e2       	ldi	r24, 0x2B	; 43
     afc:	91 e0       	ldi	r25, 0x01	; 1
     afe:	8f 93       	push	r24
     b00:	ce 01       	movw	r24, r28
     b02:	0d 96       	adiw	r24, 0x0d	; 13
     b04:	29 2f       	mov	r18, r25
     b06:	2f 93       	push	r18
     b08:	8f 93       	push	r24
     b0a:	0e 94 fd 11 	call	0x23fa	; 0x23fa <sprintf>
     b0e:	0f 90       	pop	r0
     b10:	0f 90       	pop	r0
     b12:	0f 90       	pop	r0
     b14:	0f 90       	pop	r0
     b16:	0f 90       	pop	r0
     b18:	0f 90       	pop	r0
	sprintf(sensor_temp_string, "%u", semaforo.sensor_temp );
     b1a:	8a a1       	ldd	r24, Y+34	; 0x22
     b1c:	9b a1       	ldd	r25, Y+35	; 0x23
     b1e:	29 2f       	mov	r18, r25
     b20:	2f 93       	push	r18
     b22:	8f 93       	push	r24
     b24:	8b e2       	ldi	r24, 0x2B	; 43
     b26:	91 e0       	ldi	r25, 0x01	; 1
     b28:	89 2f       	mov	r24, r25
     b2a:	8f 93       	push	r24
     b2c:	8b e2       	ldi	r24, 0x2B	; 43
     b2e:	91 e0       	ldi	r25, 0x01	; 1
     b30:	8f 93       	push	r24
     b32:	ce 01       	movw	r24, r28
     b34:	42 96       	adiw	r24, 0x12	; 18
     b36:	29 2f       	mov	r18, r25
     b38:	2f 93       	push	r18
     b3a:	8f 93       	push	r24
     b3c:	0e 94 fd 11 	call	0x23fa	; 0x23fa <sprintf>
     b40:	0f 90       	pop	r0
     b42:	0f 90       	pop	r0
     b44:	0f 90       	pop	r0
     b46:	0f 90       	pop	r0
     b48:	0f 90       	pop	r0
     b4a:	0f 90       	pop	r0
	
	nokia_lcd_clear();
     b4c:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <nokia_lcd_clear>
	
	nokia_lcd_set_cursor(0,5);
     b50:	65 e0       	ldi	r22, 0x05	; 5
     b52:	80 e0       	ldi	r24, 0x00	; 0
     b54:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Modo", 1);
     b58:	61 e0       	ldi	r22, 0x01	; 1
     b5a:	8e e2       	ldi	r24, 0x2E	; 46
     b5c:	91 e0       	ldi	r25, 0x01	; 1
     b5e:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	nokia_lcd_set_cursor(30, 5);
     b62:	65 e0       	ldi	r22, 0x05	; 5
     b64:	8e e1       	ldi	r24, 0x1E	; 30
     b66:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(modo_string, 1);
     b6a:	61 e0       	ldi	r22, 0x01	; 1
     b6c:	ce 01       	movw	r24, r28
     b6e:	01 96       	adiw	r24, 0x01	; 1
     b70:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 15);
     b74:	6f e0       	ldi	r22, 0x0F	; 15
     b76:	80 e0       	ldi	r24, 0x00	; 0
     b78:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("T.Vd", 1);
     b7c:	61 e0       	ldi	r22, 0x01	; 1
     b7e:	83 e3       	ldi	r24, 0x33	; 51
     b80:	91 e0       	ldi	r25, 0x01	; 1
     b82:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	nokia_lcd_set_cursor(30, 15);
     b86:	6f e0       	ldi	r22, 0x0F	; 15
     b88:	8e e1       	ldi	r24, 0x1E	; 30
     b8a:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(tempo_verde_s_string, 1); nokia_lcd_write_string("s", 1);
     b8e:	ce 01       	movw	r24, r28
     b90:	03 96       	adiw	r24, 0x03	; 3
     b92:	61 e0       	ldi	r22, 0x01	; 1
     b94:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
     b98:	61 e0       	ldi	r22, 0x01	; 1
     b9a:	88 e3       	ldi	r24, 0x38	; 56
     b9c:	91 e0       	ldi	r25, 0x01	; 1
     b9e:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 25);
     ba2:	69 e1       	ldi	r22, 0x19	; 25
     ba4:	80 e0       	ldi	r24, 0x00	; 0
     ba6:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("T.Vm", 1);
     baa:	61 e0       	ldi	r22, 0x01	; 1
     bac:	8a e3       	ldi	r24, 0x3A	; 58
     bae:	91 e0       	ldi	r25, 0x01	; 1
     bb0:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	nokia_lcd_set_cursor(30,25);
     bb4:	69 e1       	ldi	r22, 0x19	; 25
     bb6:	8e e1       	ldi	r24, 0x1E	; 30
     bb8:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(tempo_vermelho_s_string, 1); nokia_lcd_write_string("s", 1);
     bbc:	ce 01       	movw	r24, r28
     bbe:	05 96       	adiw	r24, 0x05	; 5
     bc0:	61 e0       	ldi	r22, 0x01	; 1
     bc2:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
     bc6:	61 e0       	ldi	r22, 0x01	; 1
     bc8:	88 e3       	ldi	r24, 0x38	; 56
     bca:	91 e0       	ldi	r25, 0x01	; 1
     bcc:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	nokia_lcd_set_cursor(0, 35);
     bd0:	63 e2       	ldi	r22, 0x23	; 35
     bd2:	80 e0       	ldi	r24, 0x00	; 0
     bd4:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("T.AM", 1);
     bd8:	61 e0       	ldi	r22, 0x01	; 1
     bda:	8f e3       	ldi	r24, 0x3F	; 63
     bdc:	91 e0       	ldi	r25, 0x01	; 1
     bde:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	nokia_lcd_set_cursor(30, 35);
     be2:	63 e2       	ldi	r22, 0x23	; 35
     be4:	8e e1       	ldi	r24, 0x1E	; 30
     be6:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(tempo_amarelo_s_string, 1); nokia_lcd_write_string("s", 1);
     bea:	ce 01       	movw	r24, r28
     bec:	07 96       	adiw	r24, 0x07	; 7
     bee:	61 e0       	ldi	r22, 0x01	; 1
     bf0:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
     bf4:	61 e0       	ldi	r22, 0x01	; 1
     bf6:	88 e3       	ldi	r24, 0x38	; 56
     bf8:	91 e0       	ldi	r25, 0x01	; 1
     bfa:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(42, 5 + selecao_parametro*10);
     bfe:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__data_end>
     c02:	88 0f       	add	r24, r24
     c04:	98 2f       	mov	r25, r24
     c06:	99 0f       	add	r25, r25
     c08:	99 0f       	add	r25, r25
     c0a:	89 0f       	add	r24, r25
     c0c:	8b 5f       	subi	r24, 0xFB	; 251
     c0e:	68 2f       	mov	r22, r24
     c10:	8a e2       	ldi	r24, 0x2A	; 42
     c12:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("<", 1);
     c16:	61 e0       	ldi	r22, 0x01	; 1
     c18:	84 e4       	ldi	r24, 0x44	; 68
     c1a:	91 e0       	ldi	r25, 0x01	; 1
     c1c:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	
	//nokia_lcd_draw_Vline(50, 2, 47);
	
	nokia_lcd_set_cursor(52,20);	
     c20:	64 e1       	ldi	r22, 0x14	; 20
     c22:	84 e3       	ldi	r24, 0x34	; 52
     c24:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(carros_por_min_string, 1);
     c28:	ce 01       	movw	r24, r28
     c2a:	09 96       	adiw	r24, 0x09	; 9
     c2c:	61 e0       	ldi	r22, 0x01	; 1
     c2e:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	nokia_lcd_set_cursor(55, 30);
     c32:	6e e1       	ldi	r22, 0x1E	; 30
     c34:	87 e3       	ldi	r24, 0x37	; 55
     c36:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("c/min", 1);
     c3a:	61 e0       	ldi	r22, 0x01	; 1
     c3c:	86 e4       	ldi	r24, 0x46	; 70
     c3e:	91 e0       	ldi	r25, 0x01	; 1
     c40:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(52, 0);
     c44:	60 e0       	ldi	r22, 0x00	; 0
     c46:	84 e3       	ldi	r24, 0x34	; 52
     c48:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(sensor_lux_string, 1);
     c4c:	ce 01       	movw	r24, r28
     c4e:	0d 96       	adiw	r24, 0x0d	; 13
     c50:	61 e0       	ldi	r22, 0x01	; 1
     c52:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	nokia_lcd_set_cursor(55, 10);
     c56:	6a e0       	ldi	r22, 0x0A	; 10
     c58:	87 e3       	ldi	r24, 0x37	; 55
     c5a:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("lux", 1);
     c5e:	61 e0       	ldi	r22, 0x01	; 1
     c60:	8c e4       	ldi	r24, 0x4C	; 76
     c62:	91 e0       	ldi	r25, 0x01	; 1
     c64:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	
	nokia_lcd_set_cursor(52, 40);
     c68:	68 e2       	ldi	r22, 0x28	; 40
     c6a:	84 e3       	ldi	r24, 0x34	; 52
     c6c:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(sensor_temp_string, 1);
     c70:	ce 01       	movw	r24, r28
     c72:	42 96       	adiw	r24, 0x12	; 18
     c74:	61 e0       	ldi	r22, 0x01	; 1
     c76:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	nokia_lcd_set_cursor(65, 40);
     c7a:	68 e2       	ldi	r22, 0x28	; 40
     c7c:	81 e4       	ldi	r24, 0x41	; 65
     c7e:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("*C", 1);
     c82:	61 e0       	ldi	r22, 0x01	; 1
     c84:	80 e5       	ldi	r24, 0x50	; 80
     c86:	91 e0       	ldi	r25, 0x01	; 1
     c88:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <nokia_lcd_write_string>
	
	nokia_lcd_render();
     c8c:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <nokia_lcd_render>

}
     c90:	00 00       	nop
     c92:	a3 96       	adiw	r28, 0x23	; 35
     c94:	0f b6       	in	r0, 0x3f	; 63
     c96:	f8 94       	cli
     c98:	de bf       	out	0x3e, r29	; 62
     c9a:	0f be       	out	0x3f, r0	; 63
     c9c:	cd bf       	out	0x3d, r28	; 61
     c9e:	df 91       	pop	r29
     ca0:	cf 91       	pop	r28
     ca2:	1f 91       	pop	r17
     ca4:	0f 91       	pop	r16
     ca6:	ff 90       	pop	r15
     ca8:	ef 90       	pop	r14
     caa:	df 90       	pop	r13
     cac:	cf 90       	pop	r12
     cae:	08 95       	ret

00000cb0 <estima_carros_por_min>:

void estima_carros_por_min(uint8_t *flag_disparo)
{
     cb0:	cf 93       	push	r28
     cb2:	df 93       	push	r29
     cb4:	00 d0       	rcall	.+0      	; 0xcb6 <estima_carros_por_min+0x6>
     cb6:	cd b7       	in	r28, 0x3d	; 61
     cb8:	de b7       	in	r29, 0x3e	; 62
     cba:	9a 83       	std	Y+2, r25	; 0x02
     cbc:	89 83       	std	Y+1, r24	; 0x01
	static uint16_t aux = 0;
	
	if(*flag_disparo)
     cbe:	89 81       	ldd	r24, Y+1	; 0x01
     cc0:	9a 81       	ldd	r25, Y+2	; 0x02
     cc2:	fc 01       	movw	r30, r24
     cc4:	80 81       	ld	r24, Z
     cc6:	88 23       	and	r24, r24
     cc8:	09 f4       	brne	.+2      	; 0xccc <estima_carros_por_min+0x1c>
     cca:	c0 c0       	rjmp	.+384    	; 0xe4c <estima_carros_por_min+0x19c>
	{
		*flag_disparo = 0;
     ccc:	89 81       	ldd	r24, Y+1	; 0x01
     cce:	9a 81       	ldd	r25, Y+2	; 0x02
     cd0:	fc 01       	movw	r30, r24
     cd2:	10 82       	st	Z, r1
		aux = num_carros;
     cd4:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <num_carros>
     cd8:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <num_carros+0x1>
     cdc:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <aux.2245+0x1>
     ce0:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <aux.2245>
		num_carros = 0;
     ce4:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <num_carros+0x1>
     ce8:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <num_carros>
		semaforo.carros_por_min = aux*12; // *60/5  -> converter de carros/seg para carros/min
     cec:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <aux.2245>
     cf0:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <aux.2245+0x1>
     cf4:	c9 01       	movw	r24, r18
     cf6:	88 0f       	add	r24, r24
     cf8:	99 1f       	adc	r25, r25
     cfa:	82 0f       	add	r24, r18
     cfc:	93 1f       	adc	r25, r19
     cfe:	88 0f       	add	r24, r24
     d00:	99 1f       	adc	r25, r25
     d02:	88 0f       	add	r24, r24
     d04:	99 1f       	adc	r25, r25
     d06:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <semaforo+0x8>
     d0a:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <semaforo+0x7>
		
		if(semaforo.modo)
     d0e:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <semaforo>
     d12:	88 23       	and	r24, r24
     d14:	09 f4       	brne	.+2      	; 0xd18 <estima_carros_por_min+0x68>
     d16:	9a c0       	rjmp	.+308    	; 0xe4c <estima_carros_por_min+0x19c>
		{
			semaforo.tempo_verde_ms = 1000 + ((uint16_t)(semaforo.carros_por_min*16.7)/1000)*1000;
     d18:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <semaforo+0x7>
     d1c:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <semaforo+0x8>
     d20:	cc 01       	movw	r24, r24
     d22:	a0 e0       	ldi	r26, 0x00	; 0
     d24:	b0 e0       	ldi	r27, 0x00	; 0
     d26:	bc 01       	movw	r22, r24
     d28:	cd 01       	movw	r24, r26
     d2a:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <__floatunsisf>
     d2e:	dc 01       	movw	r26, r24
     d30:	cb 01       	movw	r24, r22
     d32:	2a e9       	ldi	r18, 0x9A	; 154
     d34:	39 e9       	ldi	r19, 0x99	; 153
     d36:	45 e8       	ldi	r20, 0x85	; 133
     d38:	51 e4       	ldi	r21, 0x41	; 65
     d3a:	bc 01       	movw	r22, r24
     d3c:	cd 01       	movw	r24, r26
     d3e:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
     d42:	dc 01       	movw	r26, r24
     d44:	cb 01       	movw	r24, r22
     d46:	bc 01       	movw	r22, r24
     d48:	cd 01       	movw	r24, r26
     d4a:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <__fixunssfsi>
     d4e:	dc 01       	movw	r26, r24
     d50:	cb 01       	movw	r24, r22
     d52:	96 95       	lsr	r25
     d54:	87 95       	ror	r24
     d56:	96 95       	lsr	r25
     d58:	87 95       	ror	r24
     d5a:	96 95       	lsr	r25
     d5c:	87 95       	ror	r24
     d5e:	9c 01       	movw	r18, r24
     d60:	a5 ec       	ldi	r26, 0xC5	; 197
     d62:	b0 e2       	ldi	r27, 0x20	; 32
     d64:	0e 94 ee 11 	call	0x23dc	; 0x23dc <__umulhisi3>
     d68:	92 95       	swap	r25
     d6a:	82 95       	swap	r24
     d6c:	8f 70       	andi	r24, 0x0F	; 15
     d6e:	89 27       	eor	r24, r25
     d70:	9f 70       	andi	r25, 0x0F	; 15
     d72:	89 27       	eor	r24, r25
     d74:	ac 01       	movw	r20, r24
     d76:	4f 5f       	subi	r20, 0xFF	; 255
     d78:	5f 4f       	sbci	r21, 0xFF	; 255
     d7a:	28 ee       	ldi	r18, 0xE8	; 232
     d7c:	33 e0       	ldi	r19, 0x03	; 3
     d7e:	42 9f       	mul	r20, r18
     d80:	c0 01       	movw	r24, r0
     d82:	43 9f       	mul	r20, r19
     d84:	90 0d       	add	r25, r0
     d86:	52 9f       	mul	r21, r18
     d88:	90 0d       	add	r25, r0
     d8a:	11 24       	eor	r1, r1
     d8c:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <semaforo+0x2>
     d90:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <semaforo+0x1>
			if(semaforo.tempo_verde_ms > 9000)
     d94:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <semaforo+0x1>
     d98:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <semaforo+0x2>
     d9c:	89 32       	cpi	r24, 0x29	; 41
     d9e:	93 42       	sbci	r25, 0x23	; 35
     da0:	30 f0       	brcs	.+12     	; 0xdae <estima_carros_por_min+0xfe>
				semaforo.tempo_verde_ms = 9000;
     da2:	88 e2       	ldi	r24, 0x28	; 40
     da4:	93 e2       	ldi	r25, 0x23	; 35
     da6:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <semaforo+0x2>
     daa:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <semaforo+0x1>
			semaforo.tempo_vermelho_ms = 9000 -  ((uint16_t)(semaforo.carros_por_min*16.7)/1000)*1000;
     dae:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <semaforo+0x7>
     db2:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <semaforo+0x8>
     db6:	cc 01       	movw	r24, r24
     db8:	a0 e0       	ldi	r26, 0x00	; 0
     dba:	b0 e0       	ldi	r27, 0x00	; 0
     dbc:	bc 01       	movw	r22, r24
     dbe:	cd 01       	movw	r24, r26
     dc0:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <__floatunsisf>
     dc4:	dc 01       	movw	r26, r24
     dc6:	cb 01       	movw	r24, r22
     dc8:	2a e9       	ldi	r18, 0x9A	; 154
     dca:	39 e9       	ldi	r19, 0x99	; 153
     dcc:	45 e8       	ldi	r20, 0x85	; 133
     dce:	51 e4       	ldi	r21, 0x41	; 65
     dd0:	bc 01       	movw	r22, r24
     dd2:	cd 01       	movw	r24, r26
     dd4:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
     dd8:	dc 01       	movw	r26, r24
     dda:	cb 01       	movw	r24, r22
     ddc:	bc 01       	movw	r22, r24
     dde:	cd 01       	movw	r24, r26
     de0:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <__fixunssfsi>
     de4:	dc 01       	movw	r26, r24
     de6:	cb 01       	movw	r24, r22
     de8:	96 95       	lsr	r25
     dea:	87 95       	ror	r24
     dec:	96 95       	lsr	r25
     dee:	87 95       	ror	r24
     df0:	96 95       	lsr	r25
     df2:	87 95       	ror	r24
     df4:	9c 01       	movw	r18, r24
     df6:	a5 ec       	ldi	r26, 0xC5	; 197
     df8:	b0 e2       	ldi	r27, 0x20	; 32
     dfa:	0e 94 ee 11 	call	0x23dc	; 0x23dc <__umulhisi3>
     dfe:	ac 01       	movw	r20, r24
     e00:	52 95       	swap	r21
     e02:	42 95       	swap	r20
     e04:	4f 70       	andi	r20, 0x0F	; 15
     e06:	45 27       	eor	r20, r21
     e08:	5f 70       	andi	r21, 0x0F	; 15
     e0a:	45 27       	eor	r20, r21
     e0c:	28 ee       	ldi	r18, 0xE8	; 232
     e0e:	33 e0       	ldi	r19, 0x03	; 3
     e10:	42 9f       	mul	r20, r18
     e12:	c0 01       	movw	r24, r0
     e14:	43 9f       	mul	r20, r19
     e16:	90 0d       	add	r25, r0
     e18:	52 9f       	mul	r21, r18
     e1a:	90 0d       	add	r25, r0
     e1c:	11 24       	eor	r1, r1
     e1e:	28 e2       	ldi	r18, 0x28	; 40
     e20:	33 e2       	ldi	r19, 0x23	; 35
     e22:	a9 01       	movw	r20, r18
     e24:	48 1b       	sub	r20, r24
     e26:	59 0b       	sbc	r21, r25
     e28:	ca 01       	movw	r24, r20
     e2a:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <semaforo+0x4>
     e2e:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <semaforo+0x3>
			if(semaforo.tempo_vermelho_ms > 32000)
     e32:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <semaforo+0x3>
     e36:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <semaforo+0x4>
     e3a:	81 30       	cpi	r24, 0x01	; 1
     e3c:	9d 47       	sbci	r25, 0x7D	; 125
     e3e:	30 f0       	brcs	.+12     	; 0xe4c <estima_carros_por_min+0x19c>
				semaforo.tempo_vermelho_ms =  1000;
     e40:	88 ee       	ldi	r24, 0xE8	; 232
     e42:	93 e0       	ldi	r25, 0x03	; 3
     e44:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <semaforo+0x4>
     e48:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <semaforo+0x3>
		}
		
		//anima_LCD(semaforo);
	}
}
     e4c:	00 00       	nop
     e4e:	0f 90       	pop	r0
     e50:	0f 90       	pop	r0
     e52:	df 91       	pop	r29
     e54:	cf 91       	pop	r28
     e56:	08 95       	ret

00000e58 <leituraADC_sensor_LUX>:

void leituraADC_sensor_LUX(uint8_t *flag_disparo)
{
     e58:	cf 92       	push	r12
     e5a:	df 92       	push	r13
     e5c:	ef 92       	push	r14
     e5e:	ff 92       	push	r15
     e60:	0f 93       	push	r16
     e62:	1f 93       	push	r17
     e64:	cf 93       	push	r28
     e66:	df 93       	push	r29
     e68:	00 d0       	rcall	.+0      	; 0xe6a <leituraADC_sensor_LUX+0x12>
     e6a:	cd b7       	in	r28, 0x3d	; 61
     e6c:	de b7       	in	r29, 0x3e	; 62
     e6e:	9a 83       	std	Y+2, r25	; 0x02
     e70:	89 83       	std	Y+1, r24	; 0x01
	if(*flag_disparo)
     e72:	89 81       	ldd	r24, Y+1	; 0x01
     e74:	9a 81       	ldd	r25, Y+2	; 0x02
     e76:	fc 01       	movw	r30, r24
     e78:	80 81       	ld	r24, Z
     e7a:	88 23       	and	r24, r24
     e7c:	09 f4       	brne	.+2      	; 0xe80 <leituraADC_sensor_LUX+0x28>
     e7e:	77 c0       	rjmp	.+238    	; 0xf6e <leituraADC_sensor_LUX+0x116>
	{
		semaforo.sensor_lux = (1023000/ADC - 1000)*3.16;
     e80:	88 e7       	ldi	r24, 0x78	; 120
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	fc 01       	movw	r30, r24
     e86:	80 81       	ld	r24, Z
     e88:	91 81       	ldd	r25, Z+1	; 0x01
     e8a:	9c 01       	movw	r18, r24
     e8c:	40 e0       	ldi	r20, 0x00	; 0
     e8e:	50 e0       	ldi	r21, 0x00	; 0
     e90:	88 e1       	ldi	r24, 0x18	; 24
     e92:	9c e9       	ldi	r25, 0x9C	; 156
     e94:	af e0       	ldi	r26, 0x0F	; 15
     e96:	b0 e0       	ldi	r27, 0x00	; 0
     e98:	bc 01       	movw	r22, r24
     e9a:	cd 01       	movw	r24, r26
     e9c:	0e 94 cf 11 	call	0x239e	; 0x239e <__divmodsi4>
     ea0:	da 01       	movw	r26, r20
     ea2:	c9 01       	movw	r24, r18
     ea4:	88 5e       	subi	r24, 0xE8	; 232
     ea6:	93 40       	sbci	r25, 0x03	; 3
     ea8:	a1 09       	sbc	r26, r1
     eaa:	b1 09       	sbc	r27, r1
     eac:	bc 01       	movw	r22, r24
     eae:	cd 01       	movw	r24, r26
     eb0:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__floatsisf>
     eb4:	dc 01       	movw	r26, r24
     eb6:	cb 01       	movw	r24, r22
     eb8:	21 e7       	ldi	r18, 0x71	; 113
     eba:	3d e3       	ldi	r19, 0x3D	; 61
     ebc:	4a e4       	ldi	r20, 0x4A	; 74
     ebe:	50 e4       	ldi	r21, 0x40	; 64
     ec0:	bc 01       	movw	r22, r24
     ec2:	cd 01       	movw	r24, r26
     ec4:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
     ec8:	dc 01       	movw	r26, r24
     eca:	cb 01       	movw	r24, r22
     ecc:	bc 01       	movw	r22, r24
     ece:	cd 01       	movw	r24, r26
     ed0:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <__fixunssfsi>
     ed4:	dc 01       	movw	r26, r24
     ed6:	cb 01       	movw	r24, r22
     ed8:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <semaforo+0xa>
     edc:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <semaforo+0x9>
		if (semaforo.sensor_lux > 300) // liga a luminária caso a medição seja menor que 300 lux
     ee0:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <semaforo+0x9>
     ee4:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <semaforo+0xa>
     ee8:	8d 32       	cpi	r24, 0x2D	; 45
     eea:	91 40       	sbci	r25, 0x01	; 1
     eec:	28 f0       	brcs	.+10     	; 0xef8 <leituraADC_sensor_LUX+0xa0>
		{
			//PORTC |= 0b1000000;
			OCR2B = 0;
     eee:	84 eb       	ldi	r24, 0xB4	; 180
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	fc 01       	movw	r30, r24
     ef4:	10 82       	st	Z, r1
     ef6:	1b c0       	rjmp	.+54     	; 0xf2e <leituraADC_sensor_LUX+0xd6>
		}
		else
		{
			if(((PINC & 0b1000000)==0)  || (semaforo.carros_por_min > 0))
     ef8:	86 e2       	ldi	r24, 0x26	; 38
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	fc 01       	movw	r30, r24
     efe:	80 81       	ld	r24, Z
     f00:	88 2f       	mov	r24, r24
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	80 74       	andi	r24, 0x40	; 64
     f06:	99 27       	eor	r25, r25
     f08:	89 2b       	or	r24, r25
     f0a:	31 f0       	breq	.+12     	; 0xf18 <leituraADC_sensor_LUX+0xc0>
     f0c:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <semaforo+0x7>
     f10:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <semaforo+0x8>
     f14:	89 2b       	or	r24, r25
     f16:	31 f0       	breq	.+12     	; 0xf24 <leituraADC_sensor_LUX+0xcc>
			{
				
				OCR2B = 255;
     f18:	84 eb       	ldi	r24, 0xB4	; 180
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	2f ef       	ldi	r18, 0xFF	; 255
     f1e:	fc 01       	movw	r30, r24
     f20:	20 83       	st	Z, r18
     f22:	05 c0       	rjmp	.+10     	; 0xf2e <leituraADC_sensor_LUX+0xd6>
			}
			else
			{
				OCR2B = 85;
     f24:	84 eb       	ldi	r24, 0xB4	; 180
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	25 e5       	ldi	r18, 0x55	; 85
     f2a:	fc 01       	movw	r30, r24
     f2c:	20 83       	st	Z, r18
				//PORTC &= 0b0111111;
			}
		}
		
		*flag_disparo = 0;
     f2e:	89 81       	ldd	r24, Y+1	; 0x01
     f30:	9a 81       	ldd	r25, Y+2	; 0x02
     f32:	fc 01       	movw	r30, r24
     f34:	10 82       	st	Z, r1
		anima_LCD(semaforo);
     f36:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <semaforo>
     f3a:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <semaforo+0x1>
     f3e:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <semaforo+0x2>
     f42:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <semaforo+0x3>
     f46:	00 91 10 01 	lds	r16, 0x0110	; 0x800110 <semaforo+0x4>
     f4a:	10 91 11 01 	lds	r17, 0x0111	; 0x800111 <semaforo+0x5>
     f4e:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <semaforo+0x6>
     f52:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <semaforo+0x7>
     f56:	40 91 14 01 	lds	r20, 0x0114	; 0x800114 <semaforo+0x8>
     f5a:	50 91 15 01 	lds	r21, 0x0115	; 0x800115 <semaforo+0x9>
     f5e:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <semaforo+0xa>
     f62:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <semaforo+0xb>
     f66:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <semaforo+0xc>
     f6a:	0e 94 a9 04 	call	0x952	; 0x952 <anima_LCD>
	}
}
     f6e:	00 00       	nop
     f70:	0f 90       	pop	r0
     f72:	0f 90       	pop	r0
     f74:	df 91       	pop	r29
     f76:	cf 91       	pop	r28
     f78:	1f 91       	pop	r17
     f7a:	0f 91       	pop	r16
     f7c:	ff 90       	pop	r15
     f7e:	ef 90       	pop	r14
     f80:	df 90       	pop	r13
     f82:	cf 90       	pop	r12
     f84:	08 95       	ret

00000f86 <leituraADC_sensor_TEMP>:

void leituraADC_sensor_TEMP(uint8_t *flag_disparo)
{
     f86:	8f 92       	push	r8
     f88:	9f 92       	push	r9
     f8a:	af 92       	push	r10
     f8c:	bf 92       	push	r11
     f8e:	cf 92       	push	r12
     f90:	df 92       	push	r13
     f92:	ef 92       	push	r14
     f94:	ff 92       	push	r15
     f96:	0f 93       	push	r16
     f98:	1f 93       	push	r17
     f9a:	cf 93       	push	r28
     f9c:	df 93       	push	r29
     f9e:	00 d0       	rcall	.+0      	; 0xfa0 <leituraADC_sensor_TEMP+0x1a>
     fa0:	cd b7       	in	r28, 0x3d	; 61
     fa2:	de b7       	in	r29, 0x3e	; 62
     fa4:	9a 83       	std	Y+2, r25	; 0x02
     fa6:	89 83       	std	Y+1, r24	; 0x01
	if(*flag_disparo)
     fa8:	89 81       	ldd	r24, Y+1	; 0x01
     faa:	9a 81       	ldd	r25, Y+2	; 0x02
     fac:	fc 01       	movw	r30, r24
     fae:	80 81       	ld	r24, Z
     fb0:	88 23       	and	r24, r24
     fb2:	09 f4       	brne	.+2      	; 0xfb6 <leituraADC_sensor_TEMP+0x30>
     fb4:	20 c1       	rjmp	.+576    	; 0x11f6 <leituraADC_sensor_TEMP+0x270>
	{
		Vntc = ((5.0*ADC)/1023);
     fb6:	88 e7       	ldi	r24, 0x78	; 120
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	fc 01       	movw	r30, r24
     fbc:	80 81       	ld	r24, Z
     fbe:	91 81       	ldd	r25, Z+1	; 0x01
     fc0:	cc 01       	movw	r24, r24
     fc2:	a0 e0       	ldi	r26, 0x00	; 0
     fc4:	b0 e0       	ldi	r27, 0x00	; 0
     fc6:	bc 01       	movw	r22, r24
     fc8:	cd 01       	movw	r24, r26
     fca:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <__floatunsisf>
     fce:	dc 01       	movw	r26, r24
     fd0:	cb 01       	movw	r24, r22
     fd2:	20 e0       	ldi	r18, 0x00	; 0
     fd4:	30 e0       	ldi	r19, 0x00	; 0
     fd6:	40 ea       	ldi	r20, 0xA0	; 160
     fd8:	50 e4       	ldi	r21, 0x40	; 64
     fda:	bc 01       	movw	r22, r24
     fdc:	cd 01       	movw	r24, r26
     fde:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
     fe2:	dc 01       	movw	r26, r24
     fe4:	cb 01       	movw	r24, r22
     fe6:	20 e0       	ldi	r18, 0x00	; 0
     fe8:	30 ec       	ldi	r19, 0xC0	; 192
     fea:	4f e7       	ldi	r20, 0x7F	; 127
     fec:	54 e4       	ldi	r21, 0x44	; 68
     fee:	bc 01       	movw	r22, r24
     ff0:	cd 01       	movw	r24, r26
     ff2:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__divsf3>
     ff6:	dc 01       	movw	r26, r24
     ff8:	cb 01       	movw	r24, r22
     ffa:	80 93 62 03 	sts	0x0362, r24	; 0x800362 <Vntc>
     ffe:	90 93 63 03 	sts	0x0363, r25	; 0x800363 <Vntc+0x1>
    1002:	a0 93 64 03 	sts	0x0364, r26	; 0x800364 <Vntc+0x2>
    1006:	b0 93 65 03 	sts	0x0365, r27	; 0x800365 <Vntc+0x3>
		Rntc = (Vntc*(10000.0/(5.0-Vntc)));
    100a:	80 91 62 03 	lds	r24, 0x0362	; 0x800362 <Vntc>
    100e:	90 91 63 03 	lds	r25, 0x0363	; 0x800363 <Vntc+0x1>
    1012:	a0 91 64 03 	lds	r26, 0x0364	; 0x800364 <Vntc+0x2>
    1016:	b0 91 65 03 	lds	r27, 0x0365	; 0x800365 <Vntc+0x3>
    101a:	9c 01       	movw	r18, r24
    101c:	ad 01       	movw	r20, r26
    101e:	60 e0       	ldi	r22, 0x00	; 0
    1020:	70 e0       	ldi	r23, 0x00	; 0
    1022:	80 ea       	ldi	r24, 0xA0	; 160
    1024:	90 e4       	ldi	r25, 0x40	; 64
    1026:	0e 94 e5 0d 	call	0x1bca	; 0x1bca <__subsf3>
    102a:	dc 01       	movw	r26, r24
    102c:	cb 01       	movw	r24, r22
    102e:	9c 01       	movw	r18, r24
    1030:	ad 01       	movw	r20, r26
    1032:	60 e0       	ldi	r22, 0x00	; 0
    1034:	70 e4       	ldi	r23, 0x40	; 64
    1036:	8c e1       	ldi	r24, 0x1C	; 28
    1038:	96 e4       	ldi	r25, 0x46	; 70
    103a:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__divsf3>
    103e:	dc 01       	movw	r26, r24
    1040:	cb 01       	movw	r24, r22
    1042:	7c 01       	movw	r14, r24
    1044:	8d 01       	movw	r16, r26
    1046:	80 91 62 03 	lds	r24, 0x0362	; 0x800362 <Vntc>
    104a:	90 91 63 03 	lds	r25, 0x0363	; 0x800363 <Vntc+0x1>
    104e:	a0 91 64 03 	lds	r26, 0x0364	; 0x800364 <Vntc+0x2>
    1052:	b0 91 65 03 	lds	r27, 0x0365	; 0x800365 <Vntc+0x3>
    1056:	9c 01       	movw	r18, r24
    1058:	ad 01       	movw	r20, r26
    105a:	c8 01       	movw	r24, r16
    105c:	b7 01       	movw	r22, r14
    105e:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    1062:	dc 01       	movw	r26, r24
    1064:	cb 01       	movw	r24, r22
    1066:	80 93 5e 03 	sts	0x035E, r24	; 0x80035e <Rntc>
    106a:	90 93 5f 03 	sts	0x035F, r25	; 0x80035f <Rntc+0x1>
    106e:	a0 93 60 03 	sts	0x0360, r26	; 0x800360 <Rntc+0x2>
    1072:	b0 93 61 03 	sts	0x0361, r27	; 0x800361 <Rntc+0x3>
		
		T_Kelvin = 1/(a+b*log(Rntc)+c*pow(log(Rntc), 3));
    1076:	80 91 5e 03 	lds	r24, 0x035E	; 0x80035e <Rntc>
    107a:	90 91 5f 03 	lds	r25, 0x035F	; 0x80035f <Rntc+0x1>
    107e:	a0 91 60 03 	lds	r26, 0x0360	; 0x800360 <Rntc+0x2>
    1082:	b0 91 61 03 	lds	r27, 0x0361	; 0x800361 <Rntc+0x3>
    1086:	bc 01       	movw	r22, r24
    1088:	cd 01       	movw	r24, r26
    108a:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <log>
    108e:	7b 01       	movw	r14, r22
    1090:	8c 01       	movw	r16, r24
    1092:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <b>
    1096:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <b+0x1>
    109a:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <b+0x2>
    109e:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <b+0x3>
    10a2:	9c 01       	movw	r18, r24
    10a4:	ad 01       	movw	r20, r26
    10a6:	c8 01       	movw	r24, r16
    10a8:	b7 01       	movw	r22, r14
    10aa:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    10ae:	dc 01       	movw	r26, r24
    10b0:	cb 01       	movw	r24, r22
    10b2:	7c 01       	movw	r14, r24
    10b4:	8d 01       	movw	r16, r26
    10b6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    10ba:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    10be:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    10c2:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    10c6:	9c 01       	movw	r18, r24
    10c8:	ad 01       	movw	r20, r26
    10ca:	c8 01       	movw	r24, r16
    10cc:	b7 01       	movw	r22, r14
    10ce:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__addsf3>
    10d2:	dc 01       	movw	r26, r24
    10d4:	cb 01       	movw	r24, r22
    10d6:	6c 01       	movw	r12, r24
    10d8:	7d 01       	movw	r14, r26
    10da:	80 91 5e 03 	lds	r24, 0x035E	; 0x80035e <Rntc>
    10de:	90 91 5f 03 	lds	r25, 0x035F	; 0x80035f <Rntc+0x1>
    10e2:	a0 91 60 03 	lds	r26, 0x0360	; 0x800360 <Rntc+0x2>
    10e6:	b0 91 61 03 	lds	r27, 0x0361	; 0x800361 <Rntc+0x3>
    10ea:	bc 01       	movw	r22, r24
    10ec:	cd 01       	movw	r24, r26
    10ee:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <log>
    10f2:	dc 01       	movw	r26, r24
    10f4:	cb 01       	movw	r24, r22
    10f6:	20 e0       	ldi	r18, 0x00	; 0
    10f8:	30 e0       	ldi	r19, 0x00	; 0
    10fa:	40 e4       	ldi	r20, 0x40	; 64
    10fc:	50 e4       	ldi	r21, 0x40	; 64
    10fe:	bc 01       	movw	r22, r24
    1100:	cd 01       	movw	r24, r26
    1102:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <pow>
    1106:	4b 01       	movw	r8, r22
    1108:	5c 01       	movw	r10, r24
    110a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <c>
    110e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <c+0x1>
    1112:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <c+0x2>
    1116:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <c+0x3>
    111a:	9c 01       	movw	r18, r24
    111c:	ad 01       	movw	r20, r26
    111e:	c5 01       	movw	r24, r10
    1120:	b4 01       	movw	r22, r8
    1122:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    1126:	dc 01       	movw	r26, r24
    1128:	cb 01       	movw	r24, r22
    112a:	9c 01       	movw	r18, r24
    112c:	ad 01       	movw	r20, r26
    112e:	c7 01       	movw	r24, r14
    1130:	b6 01       	movw	r22, r12
    1132:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__addsf3>
    1136:	dc 01       	movw	r26, r24
    1138:	cb 01       	movw	r24, r22
    113a:	9c 01       	movw	r18, r24
    113c:	ad 01       	movw	r20, r26
    113e:	60 e0       	ldi	r22, 0x00	; 0
    1140:	70 e0       	ldi	r23, 0x00	; 0
    1142:	80 e8       	ldi	r24, 0x80	; 128
    1144:	9f e3       	ldi	r25, 0x3F	; 63
    1146:	0e 94 57 0e 	call	0x1cae	; 0x1cae <__divsf3>
    114a:	dc 01       	movw	r26, r24
    114c:	cb 01       	movw	r24, r22
    114e:	80 93 66 03 	sts	0x0366, r24	; 0x800366 <T_Kelvin>
    1152:	90 93 67 03 	sts	0x0367, r25	; 0x800367 <T_Kelvin+0x1>
    1156:	a0 93 68 03 	sts	0x0368, r26	; 0x800368 <T_Kelvin+0x2>
    115a:	b0 93 69 03 	sts	0x0369, r27	; 0x800369 <T_Kelvin+0x3>
		Celsius = (T_Kelvin - 273);
    115e:	80 91 66 03 	lds	r24, 0x0366	; 0x800366 <T_Kelvin>
    1162:	90 91 67 03 	lds	r25, 0x0367	; 0x800367 <T_Kelvin+0x1>
    1166:	a0 91 68 03 	lds	r26, 0x0368	; 0x800368 <T_Kelvin+0x2>
    116a:	b0 91 69 03 	lds	r27, 0x0369	; 0x800369 <T_Kelvin+0x3>
    116e:	20 e0       	ldi	r18, 0x00	; 0
    1170:	30 e8       	ldi	r19, 0x80	; 128
    1172:	48 e8       	ldi	r20, 0x88	; 136
    1174:	53 e4       	ldi	r21, 0x43	; 67
    1176:	bc 01       	movw	r22, r24
    1178:	cd 01       	movw	r24, r26
    117a:	0e 94 e5 0d 	call	0x1bca	; 0x1bca <__subsf3>
    117e:	dc 01       	movw	r26, r24
    1180:	cb 01       	movw	r24, r22
    1182:	80 93 6a 03 	sts	0x036A, r24	; 0x80036a <Celsius>
    1186:	90 93 6b 03 	sts	0x036B, r25	; 0x80036b <Celsius+0x1>
    118a:	a0 93 6c 03 	sts	0x036C, r26	; 0x80036c <Celsius+0x2>
    118e:	b0 93 6d 03 	sts	0x036D, r27	; 0x80036d <Celsius+0x3>
				
		semaforo.sensor_temp = Celsius;
    1192:	80 91 6a 03 	lds	r24, 0x036A	; 0x80036a <Celsius>
    1196:	90 91 6b 03 	lds	r25, 0x036B	; 0x80036b <Celsius+0x1>
    119a:	a0 91 6c 03 	lds	r26, 0x036C	; 0x80036c <Celsius+0x2>
    119e:	b0 91 6d 03 	lds	r27, 0x036D	; 0x80036d <Celsius+0x3>
    11a2:	bc 01       	movw	r22, r24
    11a4:	cd 01       	movw	r24, r26
    11a6:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <__fixunssfsi>
    11aa:	dc 01       	movw	r26, r24
    11ac:	cb 01       	movw	r24, r22
    11ae:	90 93 18 01 	sts	0x0118, r25	; 0x800118 <semaforo+0xc>
    11b2:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <semaforo+0xb>
		*flag_disparo = 0;
    11b6:	89 81       	ldd	r24, Y+1	; 0x01
    11b8:	9a 81       	ldd	r25, Y+2	; 0x02
    11ba:	fc 01       	movw	r30, r24
    11bc:	10 82       	st	Z, r1
		anima_LCD(semaforo);
    11be:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <semaforo>
    11c2:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <semaforo+0x1>
    11c6:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <semaforo+0x2>
    11ca:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <semaforo+0x3>
    11ce:	00 91 10 01 	lds	r16, 0x0110	; 0x800110 <semaforo+0x4>
    11d2:	10 91 11 01 	lds	r17, 0x0111	; 0x800111 <semaforo+0x5>
    11d6:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <semaforo+0x6>
    11da:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <semaforo+0x7>
    11de:	40 91 14 01 	lds	r20, 0x0114	; 0x800114 <semaforo+0x8>
    11e2:	50 91 15 01 	lds	r21, 0x0115	; 0x800115 <semaforo+0x9>
    11e6:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <semaforo+0xa>
    11ea:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <semaforo+0xb>
    11ee:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <semaforo+0xc>
    11f2:	0e 94 a9 04 	call	0x952	; 0x952 <anima_LCD>
	}
}
    11f6:	00 00       	nop
    11f8:	0f 90       	pop	r0
    11fa:	0f 90       	pop	r0
    11fc:	df 91       	pop	r29
    11fe:	cf 91       	pop	r28
    1200:	1f 91       	pop	r17
    1202:	0f 91       	pop	r16
    1204:	ff 90       	pop	r15
    1206:	ef 90       	pop	r14
    1208:	df 90       	pop	r13
    120a:	cf 90       	pop	r12
    120c:	bf 90       	pop	r11
    120e:	af 90       	pop	r10
    1210:	9f 90       	pop	r9
    1212:	8f 90       	pop	r8
    1214:	08 95       	ret

00001216 <main>:



int main(void)
{
    1216:	8f 92       	push	r8
    1218:	9f 92       	push	r9
    121a:	af 92       	push	r10
    121c:	bf 92       	push	r11
    121e:	cf 92       	push	r12
    1220:	df 92       	push	r13
    1222:	ef 92       	push	r14
    1224:	ff 92       	push	r15
    1226:	0f 93       	push	r16
    1228:	1f 93       	push	r17
    122a:	cf 93       	push	r28
    122c:	df 93       	push	r29
    122e:	cd b7       	in	r28, 0x3d	; 61
    1230:	de b7       	in	r29, 0x3e	; 62
    1232:	2e 97       	sbiw	r28, 0x0e	; 14
    1234:	0f b6       	in	r0, 0x3f	; 63
    1236:	f8 94       	cli
    1238:	de bf       	out	0x3e, r29	; 62
    123a:	0f be       	out	0x3f, r0	; 63
    123c:	cd bf       	out	0x3d, r28	; 61
	//Definições de GPIO
	DDRB = 0b11111111;
    123e:	84 e2       	ldi	r24, 0x24	; 36
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	2f ef       	ldi	r18, 0xFF	; 255
    1244:	fc 01       	movw	r30, r24
    1246:	20 83       	st	Z, r18
	DDRD = 0b10000000;
    1248:	8a e2       	ldi	r24, 0x2A	; 42
    124a:	90 e0       	ldi	r25, 0x00	; 0
    124c:	20 e8       	ldi	r18, 0x80	; 128
    124e:	fc 01       	movw	r30, r24
    1250:	20 83       	st	Z, r18
	DDRC |= 0b1000000;   // habilita PC6 como saída
    1252:	87 e2       	ldi	r24, 0x27	; 39
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	27 e2       	ldi	r18, 0x27	; 39
    1258:	30 e0       	ldi	r19, 0x00	; 0
    125a:	f9 01       	movw	r30, r18
    125c:	20 81       	ld	r18, Z
    125e:	20 64       	ori	r18, 0x40	; 64
    1260:	fc 01       	movw	r30, r24
    1262:	20 83       	st	Z, r18
	PORTD = 0b01111101;
    1264:	8b e2       	ldi	r24, 0x2B	; 43
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	2d e7       	ldi	r18, 0x7D	; 125
    126a:	fc 01       	movw	r30, r24
    126c:	20 83       	st	Z, r18
	
	DDRD = (1<<LED);
    126e:	8a e2       	ldi	r24, 0x2A	; 42
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	22 e0       	ldi	r18, 0x02	; 2
    1274:	fc 01       	movw	r30, r24
    1276:	20 83       	st	Z, r18
	
	EICRA  = 0b00001010;
    1278:	89 e6       	ldi	r24, 0x69	; 105
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	2a e0       	ldi	r18, 0x0A	; 10
    127e:	fc 01       	movw	r30, r24
    1280:	20 83       	st	Z, r18
	EIMSK  = 0b00000011;
    1282:	8d e3       	ldi	r24, 0x3D	; 61
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	23 e0       	ldi	r18, 0x03	; 3
    1288:	fc 01       	movw	r30, r24
    128a:	20 83       	st	Z, r18
	PCICR  = 0b00000100;
    128c:	88 e6       	ldi	r24, 0x68	; 104
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	24 e0       	ldi	r18, 0x04	; 4
    1292:	fc 01       	movw	r30, r24
    1294:	20 83       	st	Z, r18
	PCMSK2 = 0b01110001;
    1296:	8d e6       	ldi	r24, 0x6D	; 109
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	21 e7       	ldi	r18, 0x71	; 113
    129c:	fc 01       	movw	r30, r24
    129e:	20 83       	st	Z, r18
	
	TCCR0A = 0b00000010;
    12a0:	84 e4       	ldi	r24, 0x44	; 68
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	22 e0       	ldi	r18, 0x02	; 2
    12a6:	fc 01       	movw	r30, r24
    12a8:	20 83       	st	Z, r18
	TCCR0B = 0b00000011;
    12aa:	85 e4       	ldi	r24, 0x45	; 69
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	23 e0       	ldi	r18, 0x03	; 3
    12b0:	fc 01       	movw	r30, r24
    12b2:	20 83       	st	Z, r18
	OCR0A = 249;
    12b4:	87 e4       	ldi	r24, 0x47	; 71
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	29 ef       	ldi	r18, 0xF9	; 249
    12ba:	fc 01       	movw	r30, r24
    12bc:	20 83       	st	Z, r18
	TIMSK0 = 0b00000010;
    12be:	8e e6       	ldi	r24, 0x6E	; 110
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	22 e0       	ldi	r18, 0x02	; 2
    12c4:	fc 01       	movw	r30, r24
    12c6:	20 83       	st	Z, r18
	ADCSRB = 0x00; //modo de conversão continua
	DIDR0 = 0b00111110; //habilita pino PC0 como entrada do ADC0
	*/
	
	//Configuração do ADC
	ADMUX = 0b01000000;  // VCC como ref, canal 0
    12c8:	8c e7       	ldi	r24, 0x7C	; 124
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	20 e4       	ldi	r18, 0x40	; 64
    12ce:	fc 01       	movw	r30, r24
    12d0:	20 83       	st	Z, r18
	ADCSRA = 0b11100111; // habilita o AD, modo de conversão continua, prescaler = 128
    12d2:	8a e7       	ldi	r24, 0x7A	; 122
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	27 ee       	ldi	r18, 0xE7	; 231
    12d8:	fc 01       	movw	r30, r24
    12da:	20 83       	st	Z, r18
	ADCSRB = 0b00000000; // modo de conversão contínua
    12dc:	8b e7       	ldi	r24, 0x7B	; 123
    12de:	90 e0       	ldi	r25, 0x00	; 0
    12e0:	fc 01       	movw	r30, r24
    12e2:	10 82       	st	Z, r1
	DIDR0 = 0b00000001; // desabilita pino PC0 como entrada digital
    12e4:	8e e7       	ldi	r24, 0x7E	; 126
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	21 e0       	ldi	r18, 0x01	; 1
    12ea:	fc 01       	movw	r30, r24
    12ec:	20 83       	st	Z, r18
	
	
	
	nokia_lcd_init();
    12ee:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <nokia_lcd_init>
	anima_LCD(semaforo);
    12f2:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <semaforo>
    12f6:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <semaforo+0x1>
    12fa:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <semaforo+0x2>
    12fe:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <semaforo+0x3>
    1302:	00 91 10 01 	lds	r16, 0x0110	; 0x800110 <semaforo+0x4>
    1306:	10 91 11 01 	lds	r17, 0x0111	; 0x800111 <semaforo+0x5>
    130a:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <semaforo+0x6>
    130e:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <semaforo+0x7>
    1312:	40 91 14 01 	lds	r20, 0x0114	; 0x800114 <semaforo+0x8>
    1316:	50 91 15 01 	lds	r21, 0x0115	; 0x800115 <semaforo+0x9>
    131a:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <semaforo+0xa>
    131e:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <semaforo+0xb>
    1322:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <semaforo+0xc>
    1326:	0e 94 a9 04 	call	0x952	; 0x952 <anima_LCD>
	
	sei(); // habilita interrupções globais
    132a:	78 94       	sei
	
	while (1)
	{
		PORTD ^= (1<<LED); 
    132c:	8b e2       	ldi	r24, 0x2B	; 43
    132e:	90 e0       	ldi	r25, 0x00	; 0
    1330:	2b e2       	ldi	r18, 0x2B	; 43
    1332:	30 e0       	ldi	r19, 0x00	; 0
    1334:	f9 01       	movw	r30, r18
    1336:	30 81       	ld	r19, Z
    1338:	22 e0       	ldi	r18, 0x02	; 2
    133a:	23 27       	eor	r18, r19
    133c:	fc 01       	movw	r30, r24
    133e:	20 83       	st	Z, r18
    1340:	80 e0       	ldi	r24, 0x00	; 0
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	aa e7       	ldi	r26, 0x7A	; 122
    1346:	b4 e4       	ldi	r27, 0x44	; 68
    1348:	89 83       	std	Y+1, r24	; 0x01
    134a:	9a 83       	std	Y+2, r25	; 0x02
    134c:	ab 83       	std	Y+3, r26	; 0x03
    134e:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1350:	20 e0       	ldi	r18, 0x00	; 0
    1352:	30 e0       	ldi	r19, 0x00	; 0
    1354:	4a e7       	ldi	r20, 0x7A	; 122
    1356:	55 e4       	ldi	r21, 0x45	; 69
    1358:	69 81       	ldd	r22, Y+1	; 0x01
    135a:	7a 81       	ldd	r23, Y+2	; 0x02
    135c:	8b 81       	ldd	r24, Y+3	; 0x03
    135e:	9c 81       	ldd	r25, Y+4	; 0x04
    1360:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    1364:	dc 01       	movw	r26, r24
    1366:	cb 01       	movw	r24, r22
    1368:	8d 83       	std	Y+5, r24	; 0x05
    136a:	9e 83       	std	Y+6, r25	; 0x06
    136c:	af 83       	std	Y+7, r26	; 0x07
    136e:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
    1370:	20 e0       	ldi	r18, 0x00	; 0
    1372:	30 e0       	ldi	r19, 0x00	; 0
    1374:	40 e8       	ldi	r20, 0x80	; 128
    1376:	5f e3       	ldi	r21, 0x3F	; 63
    1378:	6d 81       	ldd	r22, Y+5	; 0x05
    137a:	7e 81       	ldd	r23, Y+6	; 0x06
    137c:	8f 81       	ldd	r24, Y+7	; 0x07
    137e:	98 85       	ldd	r25, Y+8	; 0x08
    1380:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__cmpsf2>
    1384:	88 23       	and	r24, r24
    1386:	2c f4       	brge	.+10     	; 0x1392 <main+0x17c>
		__ticks = 1;
    1388:	81 e0       	ldi	r24, 0x01	; 1
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	9a 87       	std	Y+10, r25	; 0x0a
    138e:	89 87       	std	Y+9, r24	; 0x09
    1390:	3f c0       	rjmp	.+126    	; 0x1410 <main+0x1fa>
	else if (__tmp > 65535)
    1392:	20 e0       	ldi	r18, 0x00	; 0
    1394:	3f ef       	ldi	r19, 0xFF	; 255
    1396:	4f e7       	ldi	r20, 0x7F	; 127
    1398:	57 e4       	ldi	r21, 0x47	; 71
    139a:	6d 81       	ldd	r22, Y+5	; 0x05
    139c:	7e 81       	ldd	r23, Y+6	; 0x06
    139e:	8f 81       	ldd	r24, Y+7	; 0x07
    13a0:	98 85       	ldd	r25, Y+8	; 0x08
    13a2:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <__gesf2>
    13a6:	18 16       	cp	r1, r24
    13a8:	4c f5       	brge	.+82     	; 0x13fc <main+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13aa:	20 e0       	ldi	r18, 0x00	; 0
    13ac:	30 e0       	ldi	r19, 0x00	; 0
    13ae:	40 e2       	ldi	r20, 0x20	; 32
    13b0:	51 e4       	ldi	r21, 0x41	; 65
    13b2:	69 81       	ldd	r22, Y+1	; 0x01
    13b4:	7a 81       	ldd	r23, Y+2	; 0x02
    13b6:	8b 81       	ldd	r24, Y+3	; 0x03
    13b8:	9c 81       	ldd	r25, Y+4	; 0x04
    13ba:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    13be:	dc 01       	movw	r26, r24
    13c0:	cb 01       	movw	r24, r22
    13c2:	bc 01       	movw	r22, r24
    13c4:	cd 01       	movw	r24, r26
    13c6:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <__fixunssfsi>
    13ca:	dc 01       	movw	r26, r24
    13cc:	cb 01       	movw	r24, r22
    13ce:	9a 87       	std	Y+10, r25	; 0x0a
    13d0:	89 87       	std	Y+9, r24	; 0x09
    13d2:	0f c0       	rjmp	.+30     	; 0x13f2 <main+0x1dc>
    13d4:	80 e9       	ldi	r24, 0x90	; 144
    13d6:	91 e0       	ldi	r25, 0x01	; 1
    13d8:	9c 87       	std	Y+12, r25	; 0x0c
    13da:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    13dc:	8b 85       	ldd	r24, Y+11	; 0x0b
    13de:	9c 85       	ldd	r25, Y+12	; 0x0c
    13e0:	01 97       	sbiw	r24, 0x01	; 1
    13e2:	f1 f7       	brne	.-4      	; 0x13e0 <main+0x1ca>
    13e4:	9c 87       	std	Y+12, r25	; 0x0c
    13e6:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13e8:	89 85       	ldd	r24, Y+9	; 0x09
    13ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    13ec:	01 97       	sbiw	r24, 0x01	; 1
    13ee:	9a 87       	std	Y+10, r25	; 0x0a
    13f0:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13f2:	89 85       	ldd	r24, Y+9	; 0x09
    13f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    13f6:	89 2b       	or	r24, r25
    13f8:	69 f7       	brne	.-38     	; 0x13d4 <main+0x1be>
    13fa:	14 c0       	rjmp	.+40     	; 0x1424 <main+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13fc:	6d 81       	ldd	r22, Y+5	; 0x05
    13fe:	7e 81       	ldd	r23, Y+6	; 0x06
    1400:	8f 81       	ldd	r24, Y+7	; 0x07
    1402:	98 85       	ldd	r25, Y+8	; 0x08
    1404:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <__fixunssfsi>
    1408:	dc 01       	movw	r26, r24
    140a:	cb 01       	movw	r24, r22
    140c:	9a 87       	std	Y+10, r25	; 0x0a
    140e:	89 87       	std	Y+9, r24	; 0x09
    1410:	89 85       	ldd	r24, Y+9	; 0x09
    1412:	9a 85       	ldd	r25, Y+10	; 0x0a
    1414:	9e 87       	std	Y+14, r25	; 0x0e
    1416:	8d 87       	std	Y+13, r24	; 0x0d
    1418:	8d 85       	ldd	r24, Y+13	; 0x0d
    141a:	9e 85       	ldd	r25, Y+14	; 0x0e
    141c:	01 97       	sbiw	r24, 0x01	; 1
    141e:	f1 f7       	brne	.-4      	; 0x141c <main+0x206>
    1420:	9e 87       	std	Y+14, r25	; 0x0e
    1422:	8d 87       	std	Y+13, r24	; 0x0d
		_delay_ms(1000);
		
		anima_semaforo(semaforo, tempo_ms);
    1424:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <tempo_ms>
    1428:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <tempo_ms+0x1>
    142c:	a0 91 59 01 	lds	r26, 0x0159	; 0x800159 <tempo_ms+0x2>
    1430:	b0 91 5a 01 	lds	r27, 0x015A	; 0x80015a <tempo_ms+0x3>
    1434:	4c 01       	movw	r8, r24
    1436:	5d 01       	movw	r10, r26
    1438:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <semaforo>
    143c:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <semaforo+0x1>
    1440:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <semaforo+0x2>
    1444:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <semaforo+0x3>
    1448:	00 91 10 01 	lds	r16, 0x0110	; 0x800110 <semaforo+0x4>
    144c:	10 91 11 01 	lds	r17, 0x0111	; 0x800111 <semaforo+0x5>
    1450:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <semaforo+0x6>
    1454:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <semaforo+0x7>
    1458:	40 91 14 01 	lds	r20, 0x0114	; 0x800114 <semaforo+0x8>
    145c:	50 91 15 01 	lds	r21, 0x0115	; 0x800115 <semaforo+0x9>
    1460:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <semaforo+0xa>
    1464:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <semaforo+0xb>
    1468:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <semaforo+0xc>
    146c:	0e 94 54 03 	call	0x6a8	; 0x6a8 <anima_semaforo>
		estima_carros_por_min(&flag_5000ms);
    1470:	85 e5       	ldi	r24, 0x55	; 85
    1472:	91 e0       	ldi	r25, 0x01	; 1
    1474:	0e 94 58 06 	call	0xcb0	; 0xcb0 <estima_carros_por_min>
		leituraADC_sensor_LUX(&flag_500ms);
    1478:	86 e5       	ldi	r24, 0x56	; 86
    147a:	91 e0       	ldi	r25, 0x01	; 1
    147c:	0e 94 2c 07 	call	0xe58	; 0xe58 <leituraADC_sensor_LUX>
		leituraADC_sensor_TEMP(&flag_500ms);
    1480:	86 e5       	ldi	r24, 0x56	; 86
    1482:	91 e0       	ldi	r25, 0x01	; 1
    1484:	0e 94 c3 07 	call	0xf86	; 0xf86 <leituraADC_sensor_TEMP>
	}
    1488:	51 cf       	rjmp	.-350    	; 0x132c <main+0x116>

0000148a <write>:
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
}
    148a:	1f 93       	push	r17
    148c:	cf 93       	push	r28
    148e:	df 93       	push	r29
    1490:	00 d0       	rcall	.+0      	; 0x1492 <write+0x8>
    1492:	cd b7       	in	r28, 0x3d	; 61
    1494:	de b7       	in	r29, 0x3e	; 62
    1496:	89 83       	std	Y+1, r24	; 0x01
    1498:	6a 83       	std	Y+2, r22	; 0x02
    149a:	88 e2       	ldi	r24, 0x28	; 40
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	28 e2       	ldi	r18, 0x28	; 40
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	f9 01       	movw	r30, r18
    14a4:	20 81       	ld	r18, Z
    14a6:	2d 7f       	andi	r18, 0xFD	; 253
    14a8:	fc 01       	movw	r30, r24
    14aa:	20 83       	st	Z, r18
    14ac:	8a 81       	ldd	r24, Y+2	; 0x02
    14ae:	88 23       	and	r24, r24
    14b0:	51 f0       	breq	.+20     	; 0x14c6 <write+0x3c>
    14b2:	88 e2       	ldi	r24, 0x28	; 40
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	28 e2       	ldi	r18, 0x28	; 40
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	f9 01       	movw	r30, r18
    14bc:	20 81       	ld	r18, Z
    14be:	28 60       	ori	r18, 0x08	; 8
    14c0:	fc 01       	movw	r30, r24
    14c2:	20 83       	st	Z, r18
    14c4:	09 c0       	rjmp	.+18     	; 0x14d8 <write+0x4e>
    14c6:	88 e2       	ldi	r24, 0x28	; 40
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	28 e2       	ldi	r18, 0x28	; 40
    14cc:	30 e0       	ldi	r19, 0x00	; 0
    14ce:	f9 01       	movw	r30, r18
    14d0:	20 81       	ld	r18, Z
    14d2:	27 7f       	andi	r18, 0xF7	; 247
    14d4:	fc 01       	movw	r30, r24
    14d6:	20 83       	st	Z, r18
    14d8:	10 e0       	ldi	r17, 0x00	; 0
    14da:	3c c0       	rjmp	.+120    	; 0x1554 <write+0xca>
    14dc:	89 81       	ldd	r24, Y+1	; 0x01
    14de:	88 2f       	mov	r24, r24
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	21 2f       	mov	r18, r17
    14e4:	30 e0       	ldi	r19, 0x00	; 0
    14e6:	47 e0       	ldi	r20, 0x07	; 7
    14e8:	50 e0       	ldi	r21, 0x00	; 0
    14ea:	ba 01       	movw	r22, r20
    14ec:	62 1b       	sub	r22, r18
    14ee:	73 0b       	sbc	r23, r19
    14f0:	9b 01       	movw	r18, r22
    14f2:	02 c0       	rjmp	.+4      	; 0x14f8 <write+0x6e>
    14f4:	95 95       	asr	r25
    14f6:	87 95       	ror	r24
    14f8:	2a 95       	dec	r18
    14fa:	e2 f7       	brpl	.-8      	; 0x14f4 <write+0x6a>
    14fc:	81 70       	andi	r24, 0x01	; 1
    14fe:	99 27       	eor	r25, r25
    1500:	89 2b       	or	r24, r25
    1502:	51 f0       	breq	.+20     	; 0x1518 <write+0x8e>
    1504:	88 e2       	ldi	r24, 0x28	; 40
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	28 e2       	ldi	r18, 0x28	; 40
    150a:	30 e0       	ldi	r19, 0x00	; 0
    150c:	f9 01       	movw	r30, r18
    150e:	20 81       	ld	r18, Z
    1510:	20 61       	ori	r18, 0x10	; 16
    1512:	fc 01       	movw	r30, r24
    1514:	20 83       	st	Z, r18
    1516:	09 c0       	rjmp	.+18     	; 0x152a <write+0xa0>
    1518:	88 e2       	ldi	r24, 0x28	; 40
    151a:	90 e0       	ldi	r25, 0x00	; 0
    151c:	28 e2       	ldi	r18, 0x28	; 40
    151e:	30 e0       	ldi	r19, 0x00	; 0
    1520:	f9 01       	movw	r30, r18
    1522:	20 81       	ld	r18, Z
    1524:	2f 7e       	andi	r18, 0xEF	; 239
    1526:	fc 01       	movw	r30, r24
    1528:	20 83       	st	Z, r18
    152a:	88 e2       	ldi	r24, 0x28	; 40
    152c:	90 e0       	ldi	r25, 0x00	; 0
    152e:	28 e2       	ldi	r18, 0x28	; 40
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	f9 01       	movw	r30, r18
    1534:	20 81       	ld	r18, Z
    1536:	20 62       	ori	r18, 0x20	; 32
    1538:	fc 01       	movw	r30, r24
    153a:	20 83       	st	Z, r18
    153c:	88 e2       	ldi	r24, 0x28	; 40
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	28 e2       	ldi	r18, 0x28	; 40
    1542:	30 e0       	ldi	r19, 0x00	; 0
    1544:	f9 01       	movw	r30, r18
    1546:	20 81       	ld	r18, Z
    1548:	2f 7d       	andi	r18, 0xDF	; 223
    154a:	fc 01       	movw	r30, r24
    154c:	20 83       	st	Z, r18
    154e:	81 2f       	mov	r24, r17
    1550:	11 e0       	ldi	r17, 0x01	; 1
    1552:	18 0f       	add	r17, r24
    1554:	18 30       	cpi	r17, 0x08	; 8
    1556:	10 f2       	brcs	.-124    	; 0x14dc <write+0x52>
    1558:	88 e2       	ldi	r24, 0x28	; 40
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	28 e2       	ldi	r18, 0x28	; 40
    155e:	30 e0       	ldi	r19, 0x00	; 0
    1560:	f9 01       	movw	r30, r18
    1562:	20 81       	ld	r18, Z
    1564:	22 60       	ori	r18, 0x02	; 2
    1566:	fc 01       	movw	r30, r24
    1568:	20 83       	st	Z, r18
    156a:	00 00       	nop
    156c:	0f 90       	pop	r0
    156e:	0f 90       	pop	r0
    1570:	df 91       	pop	r29
    1572:	cf 91       	pop	r28
    1574:	1f 91       	pop	r17
    1576:	08 95       	ret

00001578 <write_cmd>:
    1578:	cf 93       	push	r28
    157a:	df 93       	push	r29
    157c:	1f 92       	push	r1
    157e:	cd b7       	in	r28, 0x3d	; 61
    1580:	de b7       	in	r29, 0x3e	; 62
    1582:	89 83       	std	Y+1, r24	; 0x01
    1584:	60 e0       	ldi	r22, 0x00	; 0
    1586:	89 81       	ldd	r24, Y+1	; 0x01
    1588:	0e 94 45 0a 	call	0x148a	; 0x148a <write>
    158c:	00 00       	nop
    158e:	0f 90       	pop	r0
    1590:	df 91       	pop	r29
    1592:	cf 91       	pop	r28
    1594:	08 95       	ret

00001596 <write_data>:
    1596:	cf 93       	push	r28
    1598:	df 93       	push	r29
    159a:	1f 92       	push	r1
    159c:	cd b7       	in	r28, 0x3d	; 61
    159e:	de b7       	in	r29, 0x3e	; 62
    15a0:	89 83       	std	Y+1, r24	; 0x01
    15a2:	61 e0       	ldi	r22, 0x01	; 1
    15a4:	89 81       	ldd	r24, Y+1	; 0x01
    15a6:	0e 94 45 0a 	call	0x148a	; 0x148a <write>
    15aa:	00 00       	nop
    15ac:	0f 90       	pop	r0
    15ae:	df 91       	pop	r29
    15b0:	cf 91       	pop	r28
    15b2:	08 95       	ret

000015b4 <nokia_lcd_init>:
    15b4:	0f 93       	push	r16
    15b6:	1f 93       	push	r17
    15b8:	cf 93       	push	r28
    15ba:	df 93       	push	r29
    15bc:	cd b7       	in	r28, 0x3d	; 61
    15be:	de b7       	in	r29, 0x3e	; 62
    15c0:	6c 97       	sbiw	r28, 0x1c	; 28
    15c2:	0f b6       	in	r0, 0x3f	; 63
    15c4:	f8 94       	cli
    15c6:	de bf       	out	0x3e, r29	; 62
    15c8:	0f be       	out	0x3f, r0	; 63
    15ca:	cd bf       	out	0x3d, r28	; 61
    15cc:	87 e2       	ldi	r24, 0x27	; 39
    15ce:	90 e0       	ldi	r25, 0x00	; 0
    15d0:	27 e2       	ldi	r18, 0x27	; 39
    15d2:	30 e0       	ldi	r19, 0x00	; 0
    15d4:	f9 01       	movw	r30, r18
    15d6:	20 81       	ld	r18, Z
    15d8:	22 60       	ori	r18, 0x02	; 2
    15da:	fc 01       	movw	r30, r24
    15dc:	20 83       	st	Z, r18
    15de:	87 e2       	ldi	r24, 0x27	; 39
    15e0:	90 e0       	ldi	r25, 0x00	; 0
    15e2:	27 e2       	ldi	r18, 0x27	; 39
    15e4:	30 e0       	ldi	r19, 0x00	; 0
    15e6:	f9 01       	movw	r30, r18
    15e8:	20 81       	ld	r18, Z
    15ea:	24 60       	ori	r18, 0x04	; 4
    15ec:	fc 01       	movw	r30, r24
    15ee:	20 83       	st	Z, r18
    15f0:	87 e2       	ldi	r24, 0x27	; 39
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	27 e2       	ldi	r18, 0x27	; 39
    15f6:	30 e0       	ldi	r19, 0x00	; 0
    15f8:	f9 01       	movw	r30, r18
    15fa:	20 81       	ld	r18, Z
    15fc:	28 60       	ori	r18, 0x08	; 8
    15fe:	fc 01       	movw	r30, r24
    1600:	20 83       	st	Z, r18
    1602:	87 e2       	ldi	r24, 0x27	; 39
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	27 e2       	ldi	r18, 0x27	; 39
    1608:	30 e0       	ldi	r19, 0x00	; 0
    160a:	f9 01       	movw	r30, r18
    160c:	20 81       	ld	r18, Z
    160e:	20 61       	ori	r18, 0x10	; 16
    1610:	fc 01       	movw	r30, r24
    1612:	20 83       	st	Z, r18
    1614:	87 e2       	ldi	r24, 0x27	; 39
    1616:	90 e0       	ldi	r25, 0x00	; 0
    1618:	27 e2       	ldi	r18, 0x27	; 39
    161a:	30 e0       	ldi	r19, 0x00	; 0
    161c:	f9 01       	movw	r30, r18
    161e:	20 81       	ld	r18, Z
    1620:	20 62       	ori	r18, 0x20	; 32
    1622:	fc 01       	movw	r30, r24
    1624:	20 83       	st	Z, r18
    1626:	88 e2       	ldi	r24, 0x28	; 40
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	28 e2       	ldi	r18, 0x28	; 40
    162c:	30 e0       	ldi	r19, 0x00	; 0
    162e:	f9 01       	movw	r30, r18
    1630:	20 81       	ld	r18, Z
    1632:	24 60       	ori	r18, 0x04	; 4
    1634:	fc 01       	movw	r30, r24
    1636:	20 83       	st	Z, r18
    1638:	88 e2       	ldi	r24, 0x28	; 40
    163a:	90 e0       	ldi	r25, 0x00	; 0
    163c:	28 e2       	ldi	r18, 0x28	; 40
    163e:	30 e0       	ldi	r19, 0x00	; 0
    1640:	f9 01       	movw	r30, r18
    1642:	20 81       	ld	r18, Z
    1644:	22 60       	ori	r18, 0x02	; 2
    1646:	fc 01       	movw	r30, r24
    1648:	20 83       	st	Z, r18
    164a:	80 e0       	ldi	r24, 0x00	; 0
    164c:	90 e0       	ldi	r25, 0x00	; 0
    164e:	a0 e2       	ldi	r26, 0x20	; 32
    1650:	b1 e4       	ldi	r27, 0x41	; 65
    1652:	89 83       	std	Y+1, r24	; 0x01
    1654:	9a 83       	std	Y+2, r25	; 0x02
    1656:	ab 83       	std	Y+3, r26	; 0x03
    1658:	bc 83       	std	Y+4, r27	; 0x04
    165a:	20 e0       	ldi	r18, 0x00	; 0
    165c:	30 e0       	ldi	r19, 0x00	; 0
    165e:	4a e7       	ldi	r20, 0x7A	; 122
    1660:	53 e4       	ldi	r21, 0x43	; 67
    1662:	69 81       	ldd	r22, Y+1	; 0x01
    1664:	7a 81       	ldd	r23, Y+2	; 0x02
    1666:	8b 81       	ldd	r24, Y+3	; 0x03
    1668:	9c 81       	ldd	r25, Y+4	; 0x04
    166a:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    166e:	dc 01       	movw	r26, r24
    1670:	cb 01       	movw	r24, r22
    1672:	8b 8b       	std	Y+19, r24	; 0x13
    1674:	9c 8b       	std	Y+20, r25	; 0x14
    1676:	ad 8b       	std	Y+21, r26	; 0x15
    1678:	be 8b       	std	Y+22, r27	; 0x16
    167a:	20 e0       	ldi	r18, 0x00	; 0
    167c:	30 e0       	ldi	r19, 0x00	; 0
    167e:	40 e8       	ldi	r20, 0x80	; 128
    1680:	5f e3       	ldi	r21, 0x3F	; 63
    1682:	6b 89       	ldd	r22, Y+19	; 0x13
    1684:	7c 89       	ldd	r23, Y+20	; 0x14
    1686:	8d 89       	ldd	r24, Y+21	; 0x15
    1688:	9e 89       	ldd	r25, Y+22	; 0x16
    168a:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__cmpsf2>
    168e:	88 23       	and	r24, r24
    1690:	2c f4       	brge	.+10     	; 0x169c <nokia_lcd_init+0xe8>
    1692:	81 e0       	ldi	r24, 0x01	; 1
    1694:	90 e0       	ldi	r25, 0x00	; 0
    1696:	98 8f       	std	Y+24, r25	; 0x18
    1698:	8f 8b       	std	Y+23, r24	; 0x17
    169a:	3f c0       	rjmp	.+126    	; 0x171a <nokia_lcd_init+0x166>
    169c:	20 e0       	ldi	r18, 0x00	; 0
    169e:	3f ef       	ldi	r19, 0xFF	; 255
    16a0:	4f e7       	ldi	r20, 0x7F	; 127
    16a2:	57 e4       	ldi	r21, 0x47	; 71
    16a4:	6b 89       	ldd	r22, Y+19	; 0x13
    16a6:	7c 89       	ldd	r23, Y+20	; 0x14
    16a8:	8d 89       	ldd	r24, Y+21	; 0x15
    16aa:	9e 89       	ldd	r25, Y+22	; 0x16
    16ac:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <__gesf2>
    16b0:	18 16       	cp	r1, r24
    16b2:	4c f5       	brge	.+82     	; 0x1706 <nokia_lcd_init+0x152>
    16b4:	20 e0       	ldi	r18, 0x00	; 0
    16b6:	30 e0       	ldi	r19, 0x00	; 0
    16b8:	40 e2       	ldi	r20, 0x20	; 32
    16ba:	51 e4       	ldi	r21, 0x41	; 65
    16bc:	69 81       	ldd	r22, Y+1	; 0x01
    16be:	7a 81       	ldd	r23, Y+2	; 0x02
    16c0:	8b 81       	ldd	r24, Y+3	; 0x03
    16c2:	9c 81       	ldd	r25, Y+4	; 0x04
    16c4:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    16c8:	dc 01       	movw	r26, r24
    16ca:	cb 01       	movw	r24, r22
    16cc:	bc 01       	movw	r22, r24
    16ce:	cd 01       	movw	r24, r26
    16d0:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <__fixunssfsi>
    16d4:	dc 01       	movw	r26, r24
    16d6:	cb 01       	movw	r24, r22
    16d8:	98 8f       	std	Y+24, r25	; 0x18
    16da:	8f 8b       	std	Y+23, r24	; 0x17
    16dc:	0f c0       	rjmp	.+30     	; 0x16fc <nokia_lcd_init+0x148>
    16de:	89 e1       	ldi	r24, 0x19	; 25
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	9a 8f       	std	Y+26, r25	; 0x1a
    16e4:	89 8f       	std	Y+25, r24	; 0x19
    16e6:	89 8d       	ldd	r24, Y+25	; 0x19
    16e8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    16ea:	01 97       	sbiw	r24, 0x01	; 1
    16ec:	f1 f7       	brne	.-4      	; 0x16ea <nokia_lcd_init+0x136>
    16ee:	9a 8f       	std	Y+26, r25	; 0x1a
    16f0:	89 8f       	std	Y+25, r24	; 0x19
    16f2:	8f 89       	ldd	r24, Y+23	; 0x17
    16f4:	98 8d       	ldd	r25, Y+24	; 0x18
    16f6:	01 97       	sbiw	r24, 0x01	; 1
    16f8:	98 8f       	std	Y+24, r25	; 0x18
    16fa:	8f 8b       	std	Y+23, r24	; 0x17
    16fc:	8f 89       	ldd	r24, Y+23	; 0x17
    16fe:	98 8d       	ldd	r25, Y+24	; 0x18
    1700:	89 2b       	or	r24, r25
    1702:	69 f7       	brne	.-38     	; 0x16de <nokia_lcd_init+0x12a>
    1704:	14 c0       	rjmp	.+40     	; 0x172e <nokia_lcd_init+0x17a>
    1706:	6b 89       	ldd	r22, Y+19	; 0x13
    1708:	7c 89       	ldd	r23, Y+20	; 0x14
    170a:	8d 89       	ldd	r24, Y+21	; 0x15
    170c:	9e 89       	ldd	r25, Y+22	; 0x16
    170e:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <__fixunssfsi>
    1712:	dc 01       	movw	r26, r24
    1714:	cb 01       	movw	r24, r22
    1716:	98 8f       	std	Y+24, r25	; 0x18
    1718:	8f 8b       	std	Y+23, r24	; 0x17
    171a:	8f 89       	ldd	r24, Y+23	; 0x17
    171c:	98 8d       	ldd	r25, Y+24	; 0x18
    171e:	9c 8f       	std	Y+28, r25	; 0x1c
    1720:	8b 8f       	std	Y+27, r24	; 0x1b
    1722:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1724:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1726:	01 97       	sbiw	r24, 0x01	; 1
    1728:	f1 f7       	brne	.-4      	; 0x1726 <nokia_lcd_init+0x172>
    172a:	9c 8f       	std	Y+28, r25	; 0x1c
    172c:	8b 8f       	std	Y+27, r24	; 0x1b
    172e:	88 e2       	ldi	r24, 0x28	; 40
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	28 e2       	ldi	r18, 0x28	; 40
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	f9 01       	movw	r30, r18
    1738:	20 81       	ld	r18, Z
    173a:	2b 7f       	andi	r18, 0xFB	; 251
    173c:	fc 01       	movw	r30, r24
    173e:	20 83       	st	Z, r18
    1740:	80 e0       	ldi	r24, 0x00	; 0
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	ac e8       	ldi	r26, 0x8C	; 140
    1746:	b2 e4       	ldi	r27, 0x42	; 66
    1748:	8d 83       	std	Y+5, r24	; 0x05
    174a:	9e 83       	std	Y+6, r25	; 0x06
    174c:	af 83       	std	Y+7, r26	; 0x07
    174e:	b8 87       	std	Y+8, r27	; 0x08
    1750:	20 e0       	ldi	r18, 0x00	; 0
    1752:	30 e0       	ldi	r19, 0x00	; 0
    1754:	4a e7       	ldi	r20, 0x7A	; 122
    1756:	53 e4       	ldi	r21, 0x43	; 67
    1758:	6d 81       	ldd	r22, Y+5	; 0x05
    175a:	7e 81       	ldd	r23, Y+6	; 0x06
    175c:	8f 81       	ldd	r24, Y+7	; 0x07
    175e:	98 85       	ldd	r25, Y+8	; 0x08
    1760:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    1764:	dc 01       	movw	r26, r24
    1766:	cb 01       	movw	r24, r22
    1768:	89 87       	std	Y+9, r24	; 0x09
    176a:	9a 87       	std	Y+10, r25	; 0x0a
    176c:	ab 87       	std	Y+11, r26	; 0x0b
    176e:	bc 87       	std	Y+12, r27	; 0x0c
    1770:	20 e0       	ldi	r18, 0x00	; 0
    1772:	30 e0       	ldi	r19, 0x00	; 0
    1774:	40 e8       	ldi	r20, 0x80	; 128
    1776:	5f e3       	ldi	r21, 0x3F	; 63
    1778:	69 85       	ldd	r22, Y+9	; 0x09
    177a:	7a 85       	ldd	r23, Y+10	; 0x0a
    177c:	8b 85       	ldd	r24, Y+11	; 0x0b
    177e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1780:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__cmpsf2>
    1784:	88 23       	and	r24, r24
    1786:	2c f4       	brge	.+10     	; 0x1792 <nokia_lcd_init+0x1de>
    1788:	81 e0       	ldi	r24, 0x01	; 1
    178a:	90 e0       	ldi	r25, 0x00	; 0
    178c:	9e 87       	std	Y+14, r25	; 0x0e
    178e:	8d 87       	std	Y+13, r24	; 0x0d
    1790:	3f c0       	rjmp	.+126    	; 0x1810 <nokia_lcd_init+0x25c>
    1792:	20 e0       	ldi	r18, 0x00	; 0
    1794:	3f ef       	ldi	r19, 0xFF	; 255
    1796:	4f e7       	ldi	r20, 0x7F	; 127
    1798:	57 e4       	ldi	r21, 0x47	; 71
    179a:	69 85       	ldd	r22, Y+9	; 0x09
    179c:	7a 85       	ldd	r23, Y+10	; 0x0a
    179e:	8b 85       	ldd	r24, Y+11	; 0x0b
    17a0:	9c 85       	ldd	r25, Y+12	; 0x0c
    17a2:	0e 94 aa 0f 	call	0x1f54	; 0x1f54 <__gesf2>
    17a6:	18 16       	cp	r1, r24
    17a8:	4c f5       	brge	.+82     	; 0x17fc <nokia_lcd_init+0x248>
    17aa:	20 e0       	ldi	r18, 0x00	; 0
    17ac:	30 e0       	ldi	r19, 0x00	; 0
    17ae:	40 e2       	ldi	r20, 0x20	; 32
    17b0:	51 e4       	ldi	r21, 0x41	; 65
    17b2:	6d 81       	ldd	r22, Y+5	; 0x05
    17b4:	7e 81       	ldd	r23, Y+6	; 0x06
    17b6:	8f 81       	ldd	r24, Y+7	; 0x07
    17b8:	98 85       	ldd	r25, Y+8	; 0x08
    17ba:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    17be:	dc 01       	movw	r26, r24
    17c0:	cb 01       	movw	r24, r22
    17c2:	bc 01       	movw	r22, r24
    17c4:	cd 01       	movw	r24, r26
    17c6:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <__fixunssfsi>
    17ca:	dc 01       	movw	r26, r24
    17cc:	cb 01       	movw	r24, r22
    17ce:	9e 87       	std	Y+14, r25	; 0x0e
    17d0:	8d 87       	std	Y+13, r24	; 0x0d
    17d2:	0f c0       	rjmp	.+30     	; 0x17f2 <nokia_lcd_init+0x23e>
    17d4:	89 e1       	ldi	r24, 0x19	; 25
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	98 8b       	std	Y+16, r25	; 0x10
    17da:	8f 87       	std	Y+15, r24	; 0x0f
    17dc:	8f 85       	ldd	r24, Y+15	; 0x0f
    17de:	98 89       	ldd	r25, Y+16	; 0x10
    17e0:	01 97       	sbiw	r24, 0x01	; 1
    17e2:	f1 f7       	brne	.-4      	; 0x17e0 <nokia_lcd_init+0x22c>
    17e4:	98 8b       	std	Y+16, r25	; 0x10
    17e6:	8f 87       	std	Y+15, r24	; 0x0f
    17e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    17ea:	9e 85       	ldd	r25, Y+14	; 0x0e
    17ec:	01 97       	sbiw	r24, 0x01	; 1
    17ee:	9e 87       	std	Y+14, r25	; 0x0e
    17f0:	8d 87       	std	Y+13, r24	; 0x0d
    17f2:	8d 85       	ldd	r24, Y+13	; 0x0d
    17f4:	9e 85       	ldd	r25, Y+14	; 0x0e
    17f6:	89 2b       	or	r24, r25
    17f8:	69 f7       	brne	.-38     	; 0x17d4 <nokia_lcd_init+0x220>
    17fa:	14 c0       	rjmp	.+40     	; 0x1824 <nokia_lcd_init+0x270>
    17fc:	69 85       	ldd	r22, Y+9	; 0x09
    17fe:	7a 85       	ldd	r23, Y+10	; 0x0a
    1800:	8b 85       	ldd	r24, Y+11	; 0x0b
    1802:	9c 85       	ldd	r25, Y+12	; 0x0c
    1804:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <__fixunssfsi>
    1808:	dc 01       	movw	r26, r24
    180a:	cb 01       	movw	r24, r22
    180c:	9e 87       	std	Y+14, r25	; 0x0e
    180e:	8d 87       	std	Y+13, r24	; 0x0d
    1810:	8d 85       	ldd	r24, Y+13	; 0x0d
    1812:	9e 85       	ldd	r25, Y+14	; 0x0e
    1814:	9a 8b       	std	Y+18, r25	; 0x12
    1816:	89 8b       	std	Y+17, r24	; 0x11
    1818:	89 89       	ldd	r24, Y+17	; 0x11
    181a:	9a 89       	ldd	r25, Y+18	; 0x12
    181c:	01 97       	sbiw	r24, 0x01	; 1
    181e:	f1 f7       	brne	.-4      	; 0x181c <nokia_lcd_init+0x268>
    1820:	9a 8b       	std	Y+18, r25	; 0x12
    1822:	89 8b       	std	Y+17, r24	; 0x11
    1824:	88 e2       	ldi	r24, 0x28	; 40
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	28 e2       	ldi	r18, 0x28	; 40
    182a:	30 e0       	ldi	r19, 0x00	; 0
    182c:	f9 01       	movw	r30, r18
    182e:	20 81       	ld	r18, Z
    1830:	24 60       	ori	r18, 0x04	; 4
    1832:	fc 01       	movw	r30, r24
    1834:	20 83       	st	Z, r18
    1836:	88 e2       	ldi	r24, 0x28	; 40
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	28 e2       	ldi	r18, 0x28	; 40
    183c:	30 e0       	ldi	r19, 0x00	; 0
    183e:	f9 01       	movw	r30, r18
    1840:	20 81       	ld	r18, Z
    1842:	2d 7f       	andi	r18, 0xFD	; 253
    1844:	fc 01       	movw	r30, r24
    1846:	20 83       	st	Z, r18
    1848:	81 e2       	ldi	r24, 0x21	; 33
    184a:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>
    184e:	83 e1       	ldi	r24, 0x13	; 19
    1850:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>
    1854:	86 e0       	ldi	r24, 0x06	; 6
    1856:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>
    185a:	82 ec       	ldi	r24, 0xC2	; 194
    185c:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>
    1860:	80 e2       	ldi	r24, 0x20	; 32
    1862:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>
    1866:	89 e0       	ldi	r24, 0x09	; 9
    1868:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>
    186c:	80 e8       	ldi	r24, 0x80	; 128
    186e:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>
    1872:	80 e4       	ldi	r24, 0x40	; 64
    1874:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>
    1878:	00 e0       	ldi	r16, 0x00	; 0
    187a:	10 e0       	ldi	r17, 0x00	; 0
    187c:	05 c0       	rjmp	.+10     	; 0x1888 <nokia_lcd_init+0x2d4>
    187e:	80 e0       	ldi	r24, 0x00	; 0
    1880:	0e 94 cb 0a 	call	0x1596	; 0x1596 <write_data>
    1884:	0f 5f       	subi	r16, 0xFF	; 255
    1886:	1f 4f       	sbci	r17, 0xFF	; 255
    1888:	08 3f       	cpi	r16, 0xF8	; 248
    188a:	f1 e0       	ldi	r31, 0x01	; 1
    188c:	1f 07       	cpc	r17, r31
    188e:	b8 f3       	brcs	.-18     	; 0x187e <nokia_lcd_init+0x2ca>
    1890:	88 e0       	ldi	r24, 0x08	; 8
    1892:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>
    1896:	8c e0       	ldi	r24, 0x0C	; 12
    1898:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>
    189c:	00 00       	nop
    189e:	6c 96       	adiw	r28, 0x1c	; 28
    18a0:	0f b6       	in	r0, 0x3f	; 63
    18a2:	f8 94       	cli
    18a4:	de bf       	out	0x3e, r29	; 62
    18a6:	0f be       	out	0x3f, r0	; 63
    18a8:	cd bf       	out	0x3d, r28	; 61
    18aa:	df 91       	pop	r29
    18ac:	cf 91       	pop	r28
    18ae:	1f 91       	pop	r17
    18b0:	0f 91       	pop	r16
    18b2:	08 95       	ret

000018b4 <nokia_lcd_clear>:
    18b4:	0f 93       	push	r16
    18b6:	1f 93       	push	r17
    18b8:	cf 93       	push	r28
    18ba:	df 93       	push	r29
    18bc:	cd b7       	in	r28, 0x3d	; 61
    18be:	de b7       	in	r29, 0x3e	; 62
    18c0:	80 e8       	ldi	r24, 0x80	; 128
    18c2:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>
    18c6:	80 e4       	ldi	r24, 0x40	; 64
    18c8:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>
    18cc:	10 92 5c 03 	sts	0x035C, r1	; 0x80035c <nokia_lcd+0x1f8>
    18d0:	10 92 5d 03 	sts	0x035D, r1	; 0x80035d <nokia_lcd+0x1f9>
    18d4:	00 e0       	ldi	r16, 0x00	; 0
    18d6:	10 e0       	ldi	r17, 0x00	; 0
    18d8:	07 c0       	rjmp	.+14     	; 0x18e8 <nokia_lcd_clear+0x34>
    18da:	c8 01       	movw	r24, r16
    18dc:	8c 59       	subi	r24, 0x9C	; 156
    18de:	9e 4f       	sbci	r25, 0xFE	; 254
    18e0:	fc 01       	movw	r30, r24
    18e2:	10 82       	st	Z, r1
    18e4:	0f 5f       	subi	r16, 0xFF	; 255
    18e6:	1f 4f       	sbci	r17, 0xFF	; 255
    18e8:	08 3f       	cpi	r16, 0xF8	; 248
    18ea:	f1 e0       	ldi	r31, 0x01	; 1
    18ec:	1f 07       	cpc	r17, r31
    18ee:	a8 f3       	brcs	.-22     	; 0x18da <nokia_lcd_clear+0x26>
    18f0:	00 00       	nop
    18f2:	df 91       	pop	r29
    18f4:	cf 91       	pop	r28
    18f6:	1f 91       	pop	r17
    18f8:	0f 91       	pop	r16
    18fa:	08 95       	ret

000018fc <nokia_lcd_set_pixel>:

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
    18fc:	cf 93       	push	r28
    18fe:	df 93       	push	r29
    1900:	00 d0       	rcall	.+0      	; 0x1902 <nokia_lcd_set_pixel+0x6>
    1902:	00 d0       	rcall	.+0      	; 0x1904 <nokia_lcd_set_pixel+0x8>
    1904:	1f 92       	push	r1
    1906:	cd b7       	in	r28, 0x3d	; 61
    1908:	de b7       	in	r29, 0x3e	; 62
    190a:	8b 83       	std	Y+3, r24	; 0x03
    190c:	6c 83       	std	Y+4, r22	; 0x04
    190e:	4d 83       	std	Y+5, r20	; 0x05
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
    1910:	8c 81       	ldd	r24, Y+4	; 0x04
    1912:	86 95       	lsr	r24
    1914:	86 95       	lsr	r24
    1916:	86 95       	lsr	r24
    1918:	88 2f       	mov	r24, r24
    191a:	90 e0       	ldi	r25, 0x00	; 0
    191c:	44 e5       	ldi	r20, 0x54	; 84
    191e:	48 9f       	mul	r20, r24
    1920:	90 01       	movw	r18, r0
    1922:	49 9f       	mul	r20, r25
    1924:	30 0d       	add	r19, r0
    1926:	11 24       	eor	r1, r1
    1928:	8b 81       	ldd	r24, Y+3	; 0x03
    192a:	88 2f       	mov	r24, r24
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	82 0f       	add	r24, r18
    1930:	93 1f       	adc	r25, r19
    1932:	8c 59       	subi	r24, 0x9C	; 156
    1934:	9e 4f       	sbci	r25, 0xFE	; 254
    1936:	9a 83       	std	Y+2, r25	; 0x02
    1938:	89 83       	std	Y+1, r24	; 0x01
	if (value)
    193a:	8d 81       	ldd	r24, Y+5	; 0x05
    193c:	88 23       	and	r24, r24
    193e:	c9 f0       	breq	.+50     	; 0x1972 <nokia_lcd_set_pixel+0x76>
		*byte |= (1 << (y % 8));
    1940:	89 81       	ldd	r24, Y+1	; 0x01
    1942:	9a 81       	ldd	r25, Y+2	; 0x02
    1944:	fc 01       	movw	r30, r24
    1946:	80 81       	ld	r24, Z
    1948:	48 2f       	mov	r20, r24
    194a:	8c 81       	ldd	r24, Y+4	; 0x04
    194c:	88 2f       	mov	r24, r24
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	9c 01       	movw	r18, r24
    1952:	27 70       	andi	r18, 0x07	; 7
    1954:	33 27       	eor	r19, r19
    1956:	81 e0       	ldi	r24, 0x01	; 1
    1958:	90 e0       	ldi	r25, 0x00	; 0
    195a:	02 c0       	rjmp	.+4      	; 0x1960 <nokia_lcd_set_pixel+0x64>
    195c:	88 0f       	add	r24, r24
    195e:	99 1f       	adc	r25, r25
    1960:	2a 95       	dec	r18
    1962:	e2 f7       	brpl	.-8      	; 0x195c <nokia_lcd_set_pixel+0x60>
    1964:	84 2b       	or	r24, r20
    1966:	28 2f       	mov	r18, r24
    1968:	89 81       	ldd	r24, Y+1	; 0x01
    196a:	9a 81       	ldd	r25, Y+2	; 0x02
    196c:	fc 01       	movw	r30, r24
    196e:	20 83       	st	Z, r18
	else
		*byte &= ~(1 << (y %8 ));
}
    1970:	19 c0       	rjmp	.+50     	; 0x19a4 <nokia_lcd_set_pixel+0xa8>
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
	if (value)
		*byte |= (1 << (y % 8));
	else
		*byte &= ~(1 << (y %8 ));
    1972:	89 81       	ldd	r24, Y+1	; 0x01
    1974:	9a 81       	ldd	r25, Y+2	; 0x02
    1976:	fc 01       	movw	r30, r24
    1978:	80 81       	ld	r24, Z
    197a:	48 2f       	mov	r20, r24
    197c:	8c 81       	ldd	r24, Y+4	; 0x04
    197e:	88 2f       	mov	r24, r24
    1980:	90 e0       	ldi	r25, 0x00	; 0
    1982:	9c 01       	movw	r18, r24
    1984:	27 70       	andi	r18, 0x07	; 7
    1986:	33 27       	eor	r19, r19
    1988:	81 e0       	ldi	r24, 0x01	; 1
    198a:	90 e0       	ldi	r25, 0x00	; 0
    198c:	02 c0       	rjmp	.+4      	; 0x1992 <nokia_lcd_set_pixel+0x96>
    198e:	88 0f       	add	r24, r24
    1990:	99 1f       	adc	r25, r25
    1992:	2a 95       	dec	r18
    1994:	e2 f7       	brpl	.-8      	; 0x198e <nokia_lcd_set_pixel+0x92>
    1996:	80 95       	com	r24
    1998:	84 23       	and	r24, r20
    199a:	28 2f       	mov	r18, r24
    199c:	89 81       	ldd	r24, Y+1	; 0x01
    199e:	9a 81       	ldd	r25, Y+2	; 0x02
    19a0:	fc 01       	movw	r30, r24
    19a2:	20 83       	st	Z, r18
}
    19a4:	00 00       	nop
    19a6:	0f 90       	pop	r0
    19a8:	0f 90       	pop	r0
    19aa:	0f 90       	pop	r0
    19ac:	0f 90       	pop	r0
    19ae:	0f 90       	pop	r0
    19b0:	df 91       	pop	r29
    19b2:	cf 91       	pop	r28
    19b4:	08 95       	ret

000019b6 <nokia_lcd_write_char>:

void nokia_lcd_write_char(char code, uint8_t scale)
{
    19b6:	0f 93       	push	r16
    19b8:	1f 93       	push	r17
    19ba:	cf 93       	push	r28
    19bc:	df 93       	push	r29
    19be:	00 d0       	rcall	.+0      	; 0x19c0 <nokia_lcd_write_char+0xa>
    19c0:	00 d0       	rcall	.+0      	; 0x19c2 <nokia_lcd_write_char+0xc>
    19c2:	1f 92       	push	r1
    19c4:	cd b7       	in	r28, 0x3d	; 61
    19c6:	de b7       	in	r29, 0x3e	; 62
    19c8:	8c 83       	std	Y+4, r24	; 0x04
    19ca:	6d 83       	std	Y+5, r22	; 0x05
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    19cc:	10 e0       	ldi	r17, 0x00	; 0
    19ce:	65 c0       	rjmp	.+202    	; 0x1a9a <nokia_lcd_write_char+0xe4>
		for (y = 0; y < 7*scale; y++)
    19d0:	00 e0       	ldi	r16, 0x00	; 0
    19d2:	4e c0       	rjmp	.+156    	; 0x1a70 <nokia_lcd_write_char+0xba>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    19d4:	8c 81       	ldd	r24, Y+4	; 0x04
    19d6:	88 2f       	mov	r24, r24
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	9c 01       	movw	r18, r24
    19dc:	20 52       	subi	r18, 0x20	; 32
    19de:	31 09       	sbc	r19, r1
    19e0:	9d 81       	ldd	r25, Y+5	; 0x05
    19e2:	81 2f       	mov	r24, r17
    19e4:	69 2f       	mov	r22, r25
    19e6:	0e 94 a1 11 	call	0x2342	; 0x2342 <__udivmodqi4>
    19ea:	48 2f       	mov	r20, r24
    19ec:	50 e0       	ldi	r21, 0x00	; 0
    19ee:	c9 01       	movw	r24, r18
    19f0:	88 0f       	add	r24, r24
    19f2:	99 1f       	adc	r25, r25
    19f4:	88 0f       	add	r24, r24
    19f6:	99 1f       	adc	r25, r25
    19f8:	82 0f       	add	r24, r18
    19fa:	93 1f       	adc	r25, r19
    19fc:	84 0f       	add	r24, r20
    19fe:	95 1f       	adc	r25, r21
    1a00:	86 51       	subi	r24, 0x16	; 22
    1a02:	9f 4f       	sbci	r25, 0xFF	; 255
    1a04:	9a 83       	std	Y+2, r25	; 0x02
    1a06:	89 83       	std	Y+1, r24	; 0x01
    1a08:	89 81       	ldd	r24, Y+1	; 0x01
    1a0a:	9a 81       	ldd	r25, Y+2	; 0x02
    1a0c:	fc 01       	movw	r30, r24
    1a0e:	84 91       	lpm	r24, Z
    1a10:	8b 83       	std	Y+3, r24	; 0x03
    1a12:	8b 81       	ldd	r24, Y+3	; 0x03
    1a14:	28 2f       	mov	r18, r24
    1a16:	30 e0       	ldi	r19, 0x00	; 0
    1a18:	9d 81       	ldd	r25, Y+5	; 0x05
    1a1a:	80 2f       	mov	r24, r16
    1a1c:	69 2f       	mov	r22, r25
    1a1e:	0e 94 a1 11 	call	0x2342	; 0x2342 <__udivmodqi4>
    1a22:	88 2f       	mov	r24, r24
    1a24:	90 e0       	ldi	r25, 0x00	; 0
    1a26:	a9 01       	movw	r20, r18
    1a28:	02 c0       	rjmp	.+4      	; 0x1a2e <nokia_lcd_write_char+0x78>
    1a2a:	55 95       	asr	r21
    1a2c:	47 95       	ror	r20
    1a2e:	8a 95       	dec	r24
    1a30:	e2 f7       	brpl	.-8      	; 0x1a2a <nokia_lcd_write_char+0x74>
    1a32:	ca 01       	movw	r24, r20
    1a34:	81 70       	andi	r24, 0x01	; 1
    1a36:	99 27       	eor	r25, r25
    1a38:	89 2b       	or	r24, r25
    1a3a:	61 f0       	breq	.+24     	; 0x1a54 <nokia_lcd_write_char+0x9e>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
    1a3c:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <nokia_lcd+0x1f9>
    1a40:	98 2f       	mov	r25, r24
    1a42:	90 0f       	add	r25, r16
    1a44:	80 91 5c 03 	lds	r24, 0x035C	; 0x80035c <nokia_lcd+0x1f8>
    1a48:	81 0f       	add	r24, r17
    1a4a:	41 e0       	ldi	r20, 0x01	; 1
    1a4c:	69 2f       	mov	r22, r25
    1a4e:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <nokia_lcd_set_pixel>
    1a52:	0b c0       	rjmp	.+22     	; 0x1a6a <nokia_lcd_write_char+0xb4>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
    1a54:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <nokia_lcd+0x1f9>
    1a58:	98 2f       	mov	r25, r24
    1a5a:	90 0f       	add	r25, r16
    1a5c:	80 91 5c 03 	lds	r24, 0x035C	; 0x80035c <nokia_lcd+0x1f8>
    1a60:	81 0f       	add	r24, r17
    1a62:	40 e0       	ldi	r20, 0x00	; 0
    1a64:	69 2f       	mov	r22, r25
    1a66:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
    1a6a:	80 2f       	mov	r24, r16
    1a6c:	01 e0       	ldi	r16, 0x01	; 1
    1a6e:	08 0f       	add	r16, r24
    1a70:	40 2f       	mov	r20, r16
    1a72:	50 e0       	ldi	r21, 0x00	; 0
    1a74:	8d 81       	ldd	r24, Y+5	; 0x05
    1a76:	28 2f       	mov	r18, r24
    1a78:	30 e0       	ldi	r19, 0x00	; 0
    1a7a:	c9 01       	movw	r24, r18
    1a7c:	88 0f       	add	r24, r24
    1a7e:	99 1f       	adc	r25, r25
    1a80:	88 0f       	add	r24, r24
    1a82:	99 1f       	adc	r25, r25
    1a84:	88 0f       	add	r24, r24
    1a86:	99 1f       	adc	r25, r25
    1a88:	82 1b       	sub	r24, r18
    1a8a:	93 0b       	sbc	r25, r19
    1a8c:	48 17       	cp	r20, r24
    1a8e:	59 07       	cpc	r21, r25
    1a90:	0c f4       	brge	.+2      	; 0x1a94 <nokia_lcd_write_char+0xde>
    1a92:	a0 cf       	rjmp	.-192    	; 0x19d4 <nokia_lcd_write_char+0x1e>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    1a94:	81 2f       	mov	r24, r17
    1a96:	11 e0       	ldi	r17, 0x01	; 1
    1a98:	18 0f       	add	r17, r24
    1a9a:	41 2f       	mov	r20, r17
    1a9c:	50 e0       	ldi	r21, 0x00	; 0
    1a9e:	8d 81       	ldd	r24, Y+5	; 0x05
    1aa0:	28 2f       	mov	r18, r24
    1aa2:	30 e0       	ldi	r19, 0x00	; 0
    1aa4:	c9 01       	movw	r24, r18
    1aa6:	88 0f       	add	r24, r24
    1aa8:	99 1f       	adc	r25, r25
    1aaa:	88 0f       	add	r24, r24
    1aac:	99 1f       	adc	r25, r25
    1aae:	82 0f       	add	r24, r18
    1ab0:	93 1f       	adc	r25, r19
    1ab2:	48 17       	cp	r20, r24
    1ab4:	59 07       	cpc	r21, r25
    1ab6:	0c f4       	brge	.+2      	; 0x1aba <nokia_lcd_write_char+0x104>
    1ab8:	8b cf       	rjmp	.-234    	; 0x19d0 <nokia_lcd_write_char+0x1a>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    1aba:	20 91 5c 03 	lds	r18, 0x035C	; 0x80035c <nokia_lcd+0x1f8>
    1abe:	9d 81       	ldd	r25, Y+5	; 0x05
    1ac0:	89 2f       	mov	r24, r25
    1ac2:	88 0f       	add	r24, r24
    1ac4:	88 0f       	add	r24, r24
    1ac6:	89 0f       	add	r24, r25
    1ac8:	82 0f       	add	r24, r18
    1aca:	8f 5f       	subi	r24, 0xFF	; 255
    1acc:	80 93 5c 03 	sts	0x035C, r24	; 0x80035c <nokia_lcd+0x1f8>
	if (nokia_lcd.cursor_x >= 84) {
    1ad0:	80 91 5c 03 	lds	r24, 0x035C	; 0x80035c <nokia_lcd+0x1f8>
    1ad4:	84 35       	cpi	r24, 0x54	; 84
    1ad6:	70 f0       	brcs	.+28     	; 0x1af4 <nokia_lcd_write_char+0x13e>
		nokia_lcd.cursor_x = 0;
    1ad8:	10 92 5c 03 	sts	0x035C, r1	; 0x80035c <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
    1adc:	20 91 5d 03 	lds	r18, 0x035D	; 0x80035d <nokia_lcd+0x1f9>
    1ae0:	9d 81       	ldd	r25, Y+5	; 0x05
    1ae2:	89 2f       	mov	r24, r25
    1ae4:	88 0f       	add	r24, r24
    1ae6:	88 0f       	add	r24, r24
    1ae8:	88 0f       	add	r24, r24
    1aea:	89 1b       	sub	r24, r25
    1aec:	82 0f       	add	r24, r18
    1aee:	8f 5f       	subi	r24, 0xFF	; 255
    1af0:	80 93 5d 03 	sts	0x035D, r24	; 0x80035d <nokia_lcd+0x1f9>
	}
	if (nokia_lcd.cursor_y >= 48) {
    1af4:	80 91 5d 03 	lds	r24, 0x035D	; 0x80035d <nokia_lcd+0x1f9>
    1af8:	80 33       	cpi	r24, 0x30	; 48
    1afa:	20 f0       	brcs	.+8      	; 0x1b04 <nokia_lcd_write_char+0x14e>
		nokia_lcd.cursor_x = 0;
    1afc:	10 92 5c 03 	sts	0x035C, r1	; 0x80035c <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
    1b00:	10 92 5d 03 	sts	0x035D, r1	; 0x80035d <nokia_lcd+0x1f9>
	}
}
    1b04:	00 00       	nop
    1b06:	0f 90       	pop	r0
    1b08:	0f 90       	pop	r0
    1b0a:	0f 90       	pop	r0
    1b0c:	0f 90       	pop	r0
    1b0e:	0f 90       	pop	r0
    1b10:	df 91       	pop	r29
    1b12:	cf 91       	pop	r28
    1b14:	1f 91       	pop	r17
    1b16:	0f 91       	pop	r16
    1b18:	08 95       	ret

00001b1a <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
    1b1a:	cf 93       	push	r28
    1b1c:	df 93       	push	r29
    1b1e:	00 d0       	rcall	.+0      	; 0x1b20 <nokia_lcd_write_string+0x6>
    1b20:	1f 92       	push	r1
    1b22:	cd b7       	in	r28, 0x3d	; 61
    1b24:	de b7       	in	r29, 0x3e	; 62
    1b26:	9a 83       	std	Y+2, r25	; 0x02
    1b28:	89 83       	std	Y+1, r24	; 0x01
    1b2a:	6b 83       	std	Y+3, r22	; 0x03
	while(*str)
    1b2c:	0c c0       	rjmp	.+24     	; 0x1b46 <nokia_lcd_write_string+0x2c>
		nokia_lcd_write_char(*str++, scale);
    1b2e:	89 81       	ldd	r24, Y+1	; 0x01
    1b30:	9a 81       	ldd	r25, Y+2	; 0x02
    1b32:	9c 01       	movw	r18, r24
    1b34:	2f 5f       	subi	r18, 0xFF	; 255
    1b36:	3f 4f       	sbci	r19, 0xFF	; 255
    1b38:	3a 83       	std	Y+2, r19	; 0x02
    1b3a:	29 83       	std	Y+1, r18	; 0x01
    1b3c:	fc 01       	movw	r30, r24
    1b3e:	80 81       	ld	r24, Z
    1b40:	6b 81       	ldd	r22, Y+3	; 0x03
    1b42:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
    1b46:	89 81       	ldd	r24, Y+1	; 0x01
    1b48:	9a 81       	ldd	r25, Y+2	; 0x02
    1b4a:	fc 01       	movw	r30, r24
    1b4c:	80 81       	ld	r24, Z
    1b4e:	88 23       	and	r24, r24
    1b50:	71 f7       	brne	.-36     	; 0x1b2e <nokia_lcd_write_string+0x14>
		nokia_lcd_write_char(*str++, scale);
}
    1b52:	00 00       	nop
    1b54:	0f 90       	pop	r0
    1b56:	0f 90       	pop	r0
    1b58:	0f 90       	pop	r0
    1b5a:	df 91       	pop	r29
    1b5c:	cf 91       	pop	r28
    1b5e:	08 95       	ret

00001b60 <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    1b60:	cf 93       	push	r28
    1b62:	df 93       	push	r29
    1b64:	00 d0       	rcall	.+0      	; 0x1b66 <nokia_lcd_set_cursor+0x6>
    1b66:	cd b7       	in	r28, 0x3d	; 61
    1b68:	de b7       	in	r29, 0x3e	; 62
    1b6a:	89 83       	std	Y+1, r24	; 0x01
    1b6c:	6a 83       	std	Y+2, r22	; 0x02
	nokia_lcd.cursor_x = x;
    1b6e:	89 81       	ldd	r24, Y+1	; 0x01
    1b70:	80 93 5c 03 	sts	0x035C, r24	; 0x80035c <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
    1b74:	8a 81       	ldd	r24, Y+2	; 0x02
    1b76:	80 93 5d 03 	sts	0x035D, r24	; 0x80035d <nokia_lcd+0x1f9>
}
    1b7a:	00 00       	nop
    1b7c:	0f 90       	pop	r0
    1b7e:	0f 90       	pop	r0
    1b80:	df 91       	pop	r29
    1b82:	cf 91       	pop	r28
    1b84:	08 95       	ret

00001b86 <nokia_lcd_render>:

void nokia_lcd_render(void)
{
    1b86:	0f 93       	push	r16
    1b88:	1f 93       	push	r17
    1b8a:	cf 93       	push	r28
    1b8c:	df 93       	push	r29
    1b8e:	cd b7       	in	r28, 0x3d	; 61
    1b90:	de b7       	in	r29, 0x3e	; 62
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
    1b92:	80 e8       	ldi	r24, 0x80	; 128
    1b94:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>
	write_cmd(0x40);
    1b98:	80 e4       	ldi	r24, 0x40	; 64
    1b9a:	0e 94 bc 0a 	call	0x1578	; 0x1578 <write_cmd>

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    1b9e:	00 e0       	ldi	r16, 0x00	; 0
    1ba0:	10 e0       	ldi	r17, 0x00	; 0
    1ba2:	09 c0       	rjmp	.+18     	; 0x1bb6 <nokia_lcd_render+0x30>
		write_data(nokia_lcd.screen[i]);
    1ba4:	c8 01       	movw	r24, r16
    1ba6:	8c 59       	subi	r24, 0x9C	; 156
    1ba8:	9e 4f       	sbci	r25, 0xFE	; 254
    1baa:	fc 01       	movw	r30, r24
    1bac:	80 81       	ld	r24, Z
    1bae:	0e 94 cb 0a 	call	0x1596	; 0x1596 <write_data>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    1bb2:	0f 5f       	subi	r16, 0xFF	; 255
    1bb4:	1f 4f       	sbci	r17, 0xFF	; 255
    1bb6:	08 3f       	cpi	r16, 0xF8	; 248
    1bb8:	f1 e0       	ldi	r31, 0x01	; 1
    1bba:	1f 07       	cpc	r17, r31
    1bbc:	98 f3       	brcs	.-26     	; 0x1ba4 <nokia_lcd_render+0x1e>
		write_data(nokia_lcd.screen[i]);
}
    1bbe:	00 00       	nop
    1bc0:	df 91       	pop	r29
    1bc2:	cf 91       	pop	r28
    1bc4:	1f 91       	pop	r17
    1bc6:	0f 91       	pop	r16
    1bc8:	08 95       	ret

00001bca <__subsf3>:
    1bca:	50 58       	subi	r21, 0x80	; 128

00001bcc <__addsf3>:
    1bcc:	bb 27       	eor	r27, r27
    1bce:	aa 27       	eor	r26, r26
    1bd0:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__addsf3x>
    1bd4:	0c 94 70 0f 	jmp	0x1ee0	; 0x1ee0 <__fp_round>
    1bd8:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__fp_pscA>
    1bdc:	38 f0       	brcs	.+14     	; 0x1bec <__addsf3+0x20>
    1bde:	0e 94 69 0f 	call	0x1ed2	; 0x1ed2 <__fp_pscB>
    1be2:	20 f0       	brcs	.+8      	; 0x1bec <__addsf3+0x20>
    1be4:	39 f4       	brne	.+14     	; 0x1bf4 <__addsf3+0x28>
    1be6:	9f 3f       	cpi	r25, 0xFF	; 255
    1be8:	19 f4       	brne	.+6      	; 0x1bf0 <__addsf3+0x24>
    1bea:	26 f4       	brtc	.+8      	; 0x1bf4 <__addsf3+0x28>
    1bec:	0c 94 5f 0f 	jmp	0x1ebe	; 0x1ebe <__fp_nan>
    1bf0:	0e f4       	brtc	.+2      	; 0x1bf4 <__addsf3+0x28>
    1bf2:	e0 95       	com	r30
    1bf4:	e7 fb       	bst	r30, 7
    1bf6:	0c 94 59 0f 	jmp	0x1eb2	; 0x1eb2 <__fp_inf>

00001bfa <__addsf3x>:
    1bfa:	e9 2f       	mov	r30, r25
    1bfc:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__fp_split3>
    1c00:	58 f3       	brcs	.-42     	; 0x1bd8 <__addsf3+0xc>
    1c02:	ba 17       	cp	r27, r26
    1c04:	62 07       	cpc	r22, r18
    1c06:	73 07       	cpc	r23, r19
    1c08:	84 07       	cpc	r24, r20
    1c0a:	95 07       	cpc	r25, r21
    1c0c:	20 f0       	brcs	.+8      	; 0x1c16 <__addsf3x+0x1c>
    1c0e:	79 f4       	brne	.+30     	; 0x1c2e <__addsf3x+0x34>
    1c10:	a6 f5       	brtc	.+104    	; 0x1c7a <__addsf3x+0x80>
    1c12:	0c 94 a3 0f 	jmp	0x1f46	; 0x1f46 <__fp_zero>
    1c16:	0e f4       	brtc	.+2      	; 0x1c1a <__addsf3x+0x20>
    1c18:	e0 95       	com	r30
    1c1a:	0b 2e       	mov	r0, r27
    1c1c:	ba 2f       	mov	r27, r26
    1c1e:	a0 2d       	mov	r26, r0
    1c20:	0b 01       	movw	r0, r22
    1c22:	b9 01       	movw	r22, r18
    1c24:	90 01       	movw	r18, r0
    1c26:	0c 01       	movw	r0, r24
    1c28:	ca 01       	movw	r24, r20
    1c2a:	a0 01       	movw	r20, r0
    1c2c:	11 24       	eor	r1, r1
    1c2e:	ff 27       	eor	r31, r31
    1c30:	59 1b       	sub	r21, r25
    1c32:	99 f0       	breq	.+38     	; 0x1c5a <__addsf3x+0x60>
    1c34:	59 3f       	cpi	r21, 0xF9	; 249
    1c36:	50 f4       	brcc	.+20     	; 0x1c4c <__addsf3x+0x52>
    1c38:	50 3e       	cpi	r21, 0xE0	; 224
    1c3a:	68 f1       	brcs	.+90     	; 0x1c96 <__addsf3x+0x9c>
    1c3c:	1a 16       	cp	r1, r26
    1c3e:	f0 40       	sbci	r31, 0x00	; 0
    1c40:	a2 2f       	mov	r26, r18
    1c42:	23 2f       	mov	r18, r19
    1c44:	34 2f       	mov	r19, r20
    1c46:	44 27       	eor	r20, r20
    1c48:	58 5f       	subi	r21, 0xF8	; 248
    1c4a:	f3 cf       	rjmp	.-26     	; 0x1c32 <__addsf3x+0x38>
    1c4c:	46 95       	lsr	r20
    1c4e:	37 95       	ror	r19
    1c50:	27 95       	ror	r18
    1c52:	a7 95       	ror	r26
    1c54:	f0 40       	sbci	r31, 0x00	; 0
    1c56:	53 95       	inc	r21
    1c58:	c9 f7       	brne	.-14     	; 0x1c4c <__addsf3x+0x52>
    1c5a:	7e f4       	brtc	.+30     	; 0x1c7a <__addsf3x+0x80>
    1c5c:	1f 16       	cp	r1, r31
    1c5e:	ba 0b       	sbc	r27, r26
    1c60:	62 0b       	sbc	r22, r18
    1c62:	73 0b       	sbc	r23, r19
    1c64:	84 0b       	sbc	r24, r20
    1c66:	ba f0       	brmi	.+46     	; 0x1c96 <__addsf3x+0x9c>
    1c68:	91 50       	subi	r25, 0x01	; 1
    1c6a:	a1 f0       	breq	.+40     	; 0x1c94 <__addsf3x+0x9a>
    1c6c:	ff 0f       	add	r31, r31
    1c6e:	bb 1f       	adc	r27, r27
    1c70:	66 1f       	adc	r22, r22
    1c72:	77 1f       	adc	r23, r23
    1c74:	88 1f       	adc	r24, r24
    1c76:	c2 f7       	brpl	.-16     	; 0x1c68 <__addsf3x+0x6e>
    1c78:	0e c0       	rjmp	.+28     	; 0x1c96 <__addsf3x+0x9c>
    1c7a:	ba 0f       	add	r27, r26
    1c7c:	62 1f       	adc	r22, r18
    1c7e:	73 1f       	adc	r23, r19
    1c80:	84 1f       	adc	r24, r20
    1c82:	48 f4       	brcc	.+18     	; 0x1c96 <__addsf3x+0x9c>
    1c84:	87 95       	ror	r24
    1c86:	77 95       	ror	r23
    1c88:	67 95       	ror	r22
    1c8a:	b7 95       	ror	r27
    1c8c:	f7 95       	ror	r31
    1c8e:	9e 3f       	cpi	r25, 0xFE	; 254
    1c90:	08 f0       	brcs	.+2      	; 0x1c94 <__addsf3x+0x9a>
    1c92:	b0 cf       	rjmp	.-160    	; 0x1bf4 <__addsf3+0x28>
    1c94:	93 95       	inc	r25
    1c96:	88 0f       	add	r24, r24
    1c98:	08 f0       	brcs	.+2      	; 0x1c9c <__addsf3x+0xa2>
    1c9a:	99 27       	eor	r25, r25
    1c9c:	ee 0f       	add	r30, r30
    1c9e:	97 95       	ror	r25
    1ca0:	87 95       	ror	r24
    1ca2:	08 95       	ret

00001ca4 <__cmpsf2>:
    1ca4:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <__fp_cmp>
    1ca8:	08 f4       	brcc	.+2      	; 0x1cac <__cmpsf2+0x8>
    1caa:	81 e0       	ldi	r24, 0x01	; 1
    1cac:	08 95       	ret

00001cae <__divsf3>:
    1cae:	0e 94 6b 0e 	call	0x1cd6	; 0x1cd6 <__divsf3x>
    1cb2:	0c 94 70 0f 	jmp	0x1ee0	; 0x1ee0 <__fp_round>
    1cb6:	0e 94 69 0f 	call	0x1ed2	; 0x1ed2 <__fp_pscB>
    1cba:	58 f0       	brcs	.+22     	; 0x1cd2 <__divsf3+0x24>
    1cbc:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__fp_pscA>
    1cc0:	40 f0       	brcs	.+16     	; 0x1cd2 <__divsf3+0x24>
    1cc2:	29 f4       	brne	.+10     	; 0x1cce <__divsf3+0x20>
    1cc4:	5f 3f       	cpi	r21, 0xFF	; 255
    1cc6:	29 f0       	breq	.+10     	; 0x1cd2 <__divsf3+0x24>
    1cc8:	0c 94 59 0f 	jmp	0x1eb2	; 0x1eb2 <__fp_inf>
    1ccc:	51 11       	cpse	r21, r1
    1cce:	0c 94 a4 0f 	jmp	0x1f48	; 0x1f48 <__fp_szero>
    1cd2:	0c 94 5f 0f 	jmp	0x1ebe	; 0x1ebe <__fp_nan>

00001cd6 <__divsf3x>:
    1cd6:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__fp_split3>
    1cda:	68 f3       	brcs	.-38     	; 0x1cb6 <__divsf3+0x8>

00001cdc <__divsf3_pse>:
    1cdc:	99 23       	and	r25, r25
    1cde:	b1 f3       	breq	.-20     	; 0x1ccc <__divsf3+0x1e>
    1ce0:	55 23       	and	r21, r21
    1ce2:	91 f3       	breq	.-28     	; 0x1cc8 <__divsf3+0x1a>
    1ce4:	95 1b       	sub	r25, r21
    1ce6:	55 0b       	sbc	r21, r21
    1ce8:	bb 27       	eor	r27, r27
    1cea:	aa 27       	eor	r26, r26
    1cec:	62 17       	cp	r22, r18
    1cee:	73 07       	cpc	r23, r19
    1cf0:	84 07       	cpc	r24, r20
    1cf2:	38 f0       	brcs	.+14     	; 0x1d02 <__divsf3_pse+0x26>
    1cf4:	9f 5f       	subi	r25, 0xFF	; 255
    1cf6:	5f 4f       	sbci	r21, 0xFF	; 255
    1cf8:	22 0f       	add	r18, r18
    1cfa:	33 1f       	adc	r19, r19
    1cfc:	44 1f       	adc	r20, r20
    1cfe:	aa 1f       	adc	r26, r26
    1d00:	a9 f3       	breq	.-22     	; 0x1cec <__divsf3_pse+0x10>
    1d02:	35 d0       	rcall	.+106    	; 0x1d6e <__divsf3_pse+0x92>
    1d04:	0e 2e       	mov	r0, r30
    1d06:	3a f0       	brmi	.+14     	; 0x1d16 <__divsf3_pse+0x3a>
    1d08:	e0 e8       	ldi	r30, 0x80	; 128
    1d0a:	32 d0       	rcall	.+100    	; 0x1d70 <__divsf3_pse+0x94>
    1d0c:	91 50       	subi	r25, 0x01	; 1
    1d0e:	50 40       	sbci	r21, 0x00	; 0
    1d10:	e6 95       	lsr	r30
    1d12:	00 1c       	adc	r0, r0
    1d14:	ca f7       	brpl	.-14     	; 0x1d08 <__divsf3_pse+0x2c>
    1d16:	2b d0       	rcall	.+86     	; 0x1d6e <__divsf3_pse+0x92>
    1d18:	fe 2f       	mov	r31, r30
    1d1a:	29 d0       	rcall	.+82     	; 0x1d6e <__divsf3_pse+0x92>
    1d1c:	66 0f       	add	r22, r22
    1d1e:	77 1f       	adc	r23, r23
    1d20:	88 1f       	adc	r24, r24
    1d22:	bb 1f       	adc	r27, r27
    1d24:	26 17       	cp	r18, r22
    1d26:	37 07       	cpc	r19, r23
    1d28:	48 07       	cpc	r20, r24
    1d2a:	ab 07       	cpc	r26, r27
    1d2c:	b0 e8       	ldi	r27, 0x80	; 128
    1d2e:	09 f0       	breq	.+2      	; 0x1d32 <__divsf3_pse+0x56>
    1d30:	bb 0b       	sbc	r27, r27
    1d32:	80 2d       	mov	r24, r0
    1d34:	bf 01       	movw	r22, r30
    1d36:	ff 27       	eor	r31, r31
    1d38:	93 58       	subi	r25, 0x83	; 131
    1d3a:	5f 4f       	sbci	r21, 0xFF	; 255
    1d3c:	3a f0       	brmi	.+14     	; 0x1d4c <__divsf3_pse+0x70>
    1d3e:	9e 3f       	cpi	r25, 0xFE	; 254
    1d40:	51 05       	cpc	r21, r1
    1d42:	78 f0       	brcs	.+30     	; 0x1d62 <__divsf3_pse+0x86>
    1d44:	0c 94 59 0f 	jmp	0x1eb2	; 0x1eb2 <__fp_inf>
    1d48:	0c 94 a4 0f 	jmp	0x1f48	; 0x1f48 <__fp_szero>
    1d4c:	5f 3f       	cpi	r21, 0xFF	; 255
    1d4e:	e4 f3       	brlt	.-8      	; 0x1d48 <__divsf3_pse+0x6c>
    1d50:	98 3e       	cpi	r25, 0xE8	; 232
    1d52:	d4 f3       	brlt	.-12     	; 0x1d48 <__divsf3_pse+0x6c>
    1d54:	86 95       	lsr	r24
    1d56:	77 95       	ror	r23
    1d58:	67 95       	ror	r22
    1d5a:	b7 95       	ror	r27
    1d5c:	f7 95       	ror	r31
    1d5e:	9f 5f       	subi	r25, 0xFF	; 255
    1d60:	c9 f7       	brne	.-14     	; 0x1d54 <__divsf3_pse+0x78>
    1d62:	88 0f       	add	r24, r24
    1d64:	91 1d       	adc	r25, r1
    1d66:	96 95       	lsr	r25
    1d68:	87 95       	ror	r24
    1d6a:	97 f9       	bld	r25, 7
    1d6c:	08 95       	ret
    1d6e:	e1 e0       	ldi	r30, 0x01	; 1
    1d70:	66 0f       	add	r22, r22
    1d72:	77 1f       	adc	r23, r23
    1d74:	88 1f       	adc	r24, r24
    1d76:	bb 1f       	adc	r27, r27
    1d78:	62 17       	cp	r22, r18
    1d7a:	73 07       	cpc	r23, r19
    1d7c:	84 07       	cpc	r24, r20
    1d7e:	ba 07       	cpc	r27, r26
    1d80:	20 f0       	brcs	.+8      	; 0x1d8a <__divsf3_pse+0xae>
    1d82:	62 1b       	sub	r22, r18
    1d84:	73 0b       	sbc	r23, r19
    1d86:	84 0b       	sbc	r24, r20
    1d88:	ba 0b       	sbc	r27, r26
    1d8a:	ee 1f       	adc	r30, r30
    1d8c:	88 f7       	brcc	.-30     	; 0x1d70 <__divsf3_pse+0x94>
    1d8e:	e0 95       	com	r30
    1d90:	08 95       	ret

00001d92 <__fixunssfsi>:
    1d92:	0e 94 89 0f 	call	0x1f12	; 0x1f12 <__fp_splitA>
    1d96:	88 f0       	brcs	.+34     	; 0x1dba <__fixunssfsi+0x28>
    1d98:	9f 57       	subi	r25, 0x7F	; 127
    1d9a:	98 f0       	brcs	.+38     	; 0x1dc2 <__fixunssfsi+0x30>
    1d9c:	b9 2f       	mov	r27, r25
    1d9e:	99 27       	eor	r25, r25
    1da0:	b7 51       	subi	r27, 0x17	; 23
    1da2:	b0 f0       	brcs	.+44     	; 0x1dd0 <__fixunssfsi+0x3e>
    1da4:	e1 f0       	breq	.+56     	; 0x1dde <__fixunssfsi+0x4c>
    1da6:	66 0f       	add	r22, r22
    1da8:	77 1f       	adc	r23, r23
    1daa:	88 1f       	adc	r24, r24
    1dac:	99 1f       	adc	r25, r25
    1dae:	1a f0       	brmi	.+6      	; 0x1db6 <__fixunssfsi+0x24>
    1db0:	ba 95       	dec	r27
    1db2:	c9 f7       	brne	.-14     	; 0x1da6 <__fixunssfsi+0x14>
    1db4:	14 c0       	rjmp	.+40     	; 0x1dde <__fixunssfsi+0x4c>
    1db6:	b1 30       	cpi	r27, 0x01	; 1
    1db8:	91 f0       	breq	.+36     	; 0x1dde <__fixunssfsi+0x4c>
    1dba:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <__fp_zero>
    1dbe:	b1 e0       	ldi	r27, 0x01	; 1
    1dc0:	08 95       	ret
    1dc2:	0c 94 a3 0f 	jmp	0x1f46	; 0x1f46 <__fp_zero>
    1dc6:	67 2f       	mov	r22, r23
    1dc8:	78 2f       	mov	r23, r24
    1dca:	88 27       	eor	r24, r24
    1dcc:	b8 5f       	subi	r27, 0xF8	; 248
    1dce:	39 f0       	breq	.+14     	; 0x1dde <__fixunssfsi+0x4c>
    1dd0:	b9 3f       	cpi	r27, 0xF9	; 249
    1dd2:	cc f3       	brlt	.-14     	; 0x1dc6 <__fixunssfsi+0x34>
    1dd4:	86 95       	lsr	r24
    1dd6:	77 95       	ror	r23
    1dd8:	67 95       	ror	r22
    1dda:	b3 95       	inc	r27
    1ddc:	d9 f7       	brne	.-10     	; 0x1dd4 <__fixunssfsi+0x42>
    1dde:	3e f4       	brtc	.+14     	; 0x1dee <__fixunssfsi+0x5c>
    1de0:	90 95       	com	r25
    1de2:	80 95       	com	r24
    1de4:	70 95       	com	r23
    1de6:	61 95       	neg	r22
    1de8:	7f 4f       	sbci	r23, 0xFF	; 255
    1dea:	8f 4f       	sbci	r24, 0xFF	; 255
    1dec:	9f 4f       	sbci	r25, 0xFF	; 255
    1dee:	08 95       	ret

00001df0 <__floatunsisf>:
    1df0:	e8 94       	clt
    1df2:	09 c0       	rjmp	.+18     	; 0x1e06 <__floatsisf+0x12>

00001df4 <__floatsisf>:
    1df4:	97 fb       	bst	r25, 7
    1df6:	3e f4       	brtc	.+14     	; 0x1e06 <__floatsisf+0x12>
    1df8:	90 95       	com	r25
    1dfa:	80 95       	com	r24
    1dfc:	70 95       	com	r23
    1dfe:	61 95       	neg	r22
    1e00:	7f 4f       	sbci	r23, 0xFF	; 255
    1e02:	8f 4f       	sbci	r24, 0xFF	; 255
    1e04:	9f 4f       	sbci	r25, 0xFF	; 255
    1e06:	99 23       	and	r25, r25
    1e08:	a9 f0       	breq	.+42     	; 0x1e34 <__floatsisf+0x40>
    1e0a:	f9 2f       	mov	r31, r25
    1e0c:	96 e9       	ldi	r25, 0x96	; 150
    1e0e:	bb 27       	eor	r27, r27
    1e10:	93 95       	inc	r25
    1e12:	f6 95       	lsr	r31
    1e14:	87 95       	ror	r24
    1e16:	77 95       	ror	r23
    1e18:	67 95       	ror	r22
    1e1a:	b7 95       	ror	r27
    1e1c:	f1 11       	cpse	r31, r1
    1e1e:	f8 cf       	rjmp	.-16     	; 0x1e10 <__floatsisf+0x1c>
    1e20:	fa f4       	brpl	.+62     	; 0x1e60 <__floatsisf+0x6c>
    1e22:	bb 0f       	add	r27, r27
    1e24:	11 f4       	brne	.+4      	; 0x1e2a <__floatsisf+0x36>
    1e26:	60 ff       	sbrs	r22, 0
    1e28:	1b c0       	rjmp	.+54     	; 0x1e60 <__floatsisf+0x6c>
    1e2a:	6f 5f       	subi	r22, 0xFF	; 255
    1e2c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e2e:	8f 4f       	sbci	r24, 0xFF	; 255
    1e30:	9f 4f       	sbci	r25, 0xFF	; 255
    1e32:	16 c0       	rjmp	.+44     	; 0x1e60 <__floatsisf+0x6c>
    1e34:	88 23       	and	r24, r24
    1e36:	11 f0       	breq	.+4      	; 0x1e3c <__floatsisf+0x48>
    1e38:	96 e9       	ldi	r25, 0x96	; 150
    1e3a:	11 c0       	rjmp	.+34     	; 0x1e5e <__floatsisf+0x6a>
    1e3c:	77 23       	and	r23, r23
    1e3e:	21 f0       	breq	.+8      	; 0x1e48 <__floatsisf+0x54>
    1e40:	9e e8       	ldi	r25, 0x8E	; 142
    1e42:	87 2f       	mov	r24, r23
    1e44:	76 2f       	mov	r23, r22
    1e46:	05 c0       	rjmp	.+10     	; 0x1e52 <__floatsisf+0x5e>
    1e48:	66 23       	and	r22, r22
    1e4a:	71 f0       	breq	.+28     	; 0x1e68 <__floatsisf+0x74>
    1e4c:	96 e8       	ldi	r25, 0x86	; 134
    1e4e:	86 2f       	mov	r24, r22
    1e50:	70 e0       	ldi	r23, 0x00	; 0
    1e52:	60 e0       	ldi	r22, 0x00	; 0
    1e54:	2a f0       	brmi	.+10     	; 0x1e60 <__floatsisf+0x6c>
    1e56:	9a 95       	dec	r25
    1e58:	66 0f       	add	r22, r22
    1e5a:	77 1f       	adc	r23, r23
    1e5c:	88 1f       	adc	r24, r24
    1e5e:	da f7       	brpl	.-10     	; 0x1e56 <__floatsisf+0x62>
    1e60:	88 0f       	add	r24, r24
    1e62:	96 95       	lsr	r25
    1e64:	87 95       	ror	r24
    1e66:	97 f9       	bld	r25, 7
    1e68:	08 95       	ret

00001e6a <__fp_cmp>:
    1e6a:	99 0f       	add	r25, r25
    1e6c:	00 08       	sbc	r0, r0
    1e6e:	55 0f       	add	r21, r21
    1e70:	aa 0b       	sbc	r26, r26
    1e72:	e0 e8       	ldi	r30, 0x80	; 128
    1e74:	fe ef       	ldi	r31, 0xFE	; 254
    1e76:	16 16       	cp	r1, r22
    1e78:	17 06       	cpc	r1, r23
    1e7a:	e8 07       	cpc	r30, r24
    1e7c:	f9 07       	cpc	r31, r25
    1e7e:	c0 f0       	brcs	.+48     	; 0x1eb0 <__fp_cmp+0x46>
    1e80:	12 16       	cp	r1, r18
    1e82:	13 06       	cpc	r1, r19
    1e84:	e4 07       	cpc	r30, r20
    1e86:	f5 07       	cpc	r31, r21
    1e88:	98 f0       	brcs	.+38     	; 0x1eb0 <__fp_cmp+0x46>
    1e8a:	62 1b       	sub	r22, r18
    1e8c:	73 0b       	sbc	r23, r19
    1e8e:	84 0b       	sbc	r24, r20
    1e90:	95 0b       	sbc	r25, r21
    1e92:	39 f4       	brne	.+14     	; 0x1ea2 <__fp_cmp+0x38>
    1e94:	0a 26       	eor	r0, r26
    1e96:	61 f0       	breq	.+24     	; 0x1eb0 <__fp_cmp+0x46>
    1e98:	23 2b       	or	r18, r19
    1e9a:	24 2b       	or	r18, r20
    1e9c:	25 2b       	or	r18, r21
    1e9e:	21 f4       	brne	.+8      	; 0x1ea8 <__fp_cmp+0x3e>
    1ea0:	08 95       	ret
    1ea2:	0a 26       	eor	r0, r26
    1ea4:	09 f4       	brne	.+2      	; 0x1ea8 <__fp_cmp+0x3e>
    1ea6:	a1 40       	sbci	r26, 0x01	; 1
    1ea8:	a6 95       	lsr	r26
    1eaa:	8f ef       	ldi	r24, 0xFF	; 255
    1eac:	81 1d       	adc	r24, r1
    1eae:	81 1d       	adc	r24, r1
    1eb0:	08 95       	ret

00001eb2 <__fp_inf>:
    1eb2:	97 f9       	bld	r25, 7
    1eb4:	9f 67       	ori	r25, 0x7F	; 127
    1eb6:	80 e8       	ldi	r24, 0x80	; 128
    1eb8:	70 e0       	ldi	r23, 0x00	; 0
    1eba:	60 e0       	ldi	r22, 0x00	; 0
    1ebc:	08 95       	ret

00001ebe <__fp_nan>:
    1ebe:	9f ef       	ldi	r25, 0xFF	; 255
    1ec0:	80 ec       	ldi	r24, 0xC0	; 192
    1ec2:	08 95       	ret

00001ec4 <__fp_pscA>:
    1ec4:	00 24       	eor	r0, r0
    1ec6:	0a 94       	dec	r0
    1ec8:	16 16       	cp	r1, r22
    1eca:	17 06       	cpc	r1, r23
    1ecc:	18 06       	cpc	r1, r24
    1ece:	09 06       	cpc	r0, r25
    1ed0:	08 95       	ret

00001ed2 <__fp_pscB>:
    1ed2:	00 24       	eor	r0, r0
    1ed4:	0a 94       	dec	r0
    1ed6:	12 16       	cp	r1, r18
    1ed8:	13 06       	cpc	r1, r19
    1eda:	14 06       	cpc	r1, r20
    1edc:	05 06       	cpc	r0, r21
    1ede:	08 95       	ret

00001ee0 <__fp_round>:
    1ee0:	09 2e       	mov	r0, r25
    1ee2:	03 94       	inc	r0
    1ee4:	00 0c       	add	r0, r0
    1ee6:	11 f4       	brne	.+4      	; 0x1eec <__fp_round+0xc>
    1ee8:	88 23       	and	r24, r24
    1eea:	52 f0       	brmi	.+20     	; 0x1f00 <__fp_round+0x20>
    1eec:	bb 0f       	add	r27, r27
    1eee:	40 f4       	brcc	.+16     	; 0x1f00 <__fp_round+0x20>
    1ef0:	bf 2b       	or	r27, r31
    1ef2:	11 f4       	brne	.+4      	; 0x1ef8 <__fp_round+0x18>
    1ef4:	60 ff       	sbrs	r22, 0
    1ef6:	04 c0       	rjmp	.+8      	; 0x1f00 <__fp_round+0x20>
    1ef8:	6f 5f       	subi	r22, 0xFF	; 255
    1efa:	7f 4f       	sbci	r23, 0xFF	; 255
    1efc:	8f 4f       	sbci	r24, 0xFF	; 255
    1efe:	9f 4f       	sbci	r25, 0xFF	; 255
    1f00:	08 95       	ret

00001f02 <__fp_split3>:
    1f02:	57 fd       	sbrc	r21, 7
    1f04:	90 58       	subi	r25, 0x80	; 128
    1f06:	44 0f       	add	r20, r20
    1f08:	55 1f       	adc	r21, r21
    1f0a:	59 f0       	breq	.+22     	; 0x1f22 <__fp_splitA+0x10>
    1f0c:	5f 3f       	cpi	r21, 0xFF	; 255
    1f0e:	71 f0       	breq	.+28     	; 0x1f2c <__fp_splitA+0x1a>
    1f10:	47 95       	ror	r20

00001f12 <__fp_splitA>:
    1f12:	88 0f       	add	r24, r24
    1f14:	97 fb       	bst	r25, 7
    1f16:	99 1f       	adc	r25, r25
    1f18:	61 f0       	breq	.+24     	; 0x1f32 <__fp_splitA+0x20>
    1f1a:	9f 3f       	cpi	r25, 0xFF	; 255
    1f1c:	79 f0       	breq	.+30     	; 0x1f3c <__fp_splitA+0x2a>
    1f1e:	87 95       	ror	r24
    1f20:	08 95       	ret
    1f22:	12 16       	cp	r1, r18
    1f24:	13 06       	cpc	r1, r19
    1f26:	14 06       	cpc	r1, r20
    1f28:	55 1f       	adc	r21, r21
    1f2a:	f2 cf       	rjmp	.-28     	; 0x1f10 <__fp_split3+0xe>
    1f2c:	46 95       	lsr	r20
    1f2e:	f1 df       	rcall	.-30     	; 0x1f12 <__fp_splitA>
    1f30:	08 c0       	rjmp	.+16     	; 0x1f42 <__fp_splitA+0x30>
    1f32:	16 16       	cp	r1, r22
    1f34:	17 06       	cpc	r1, r23
    1f36:	18 06       	cpc	r1, r24
    1f38:	99 1f       	adc	r25, r25
    1f3a:	f1 cf       	rjmp	.-30     	; 0x1f1e <__fp_splitA+0xc>
    1f3c:	86 95       	lsr	r24
    1f3e:	71 05       	cpc	r23, r1
    1f40:	61 05       	cpc	r22, r1
    1f42:	08 94       	sec
    1f44:	08 95       	ret

00001f46 <__fp_zero>:
    1f46:	e8 94       	clt

00001f48 <__fp_szero>:
    1f48:	bb 27       	eor	r27, r27
    1f4a:	66 27       	eor	r22, r22
    1f4c:	77 27       	eor	r23, r23
    1f4e:	cb 01       	movw	r24, r22
    1f50:	97 f9       	bld	r25, 7
    1f52:	08 95       	ret

00001f54 <__gesf2>:
    1f54:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <__fp_cmp>
    1f58:	08 f4       	brcc	.+2      	; 0x1f5c <__gesf2+0x8>
    1f5a:	8f ef       	ldi	r24, 0xFF	; 255
    1f5c:	08 95       	ret
    1f5e:	16 f0       	brts	.+4      	; 0x1f64 <__gesf2+0x10>
    1f60:	0c 94 f6 10 	jmp	0x21ec	; 0x21ec <__fp_mpack>
    1f64:	0c 94 5f 0f 	jmp	0x1ebe	; 0x1ebe <__fp_nan>
    1f68:	68 94       	set
    1f6a:	0c 94 59 0f 	jmp	0x1eb2	; 0x1eb2 <__fp_inf>

00001f6e <log>:
    1f6e:	0e 94 89 0f 	call	0x1f12	; 0x1f12 <__fp_splitA>
    1f72:	a8 f3       	brcs	.-22     	; 0x1f5e <__gesf2+0xa>
    1f74:	99 23       	and	r25, r25
    1f76:	c1 f3       	breq	.-16     	; 0x1f68 <__gesf2+0x14>
    1f78:	ae f3       	brts	.-22     	; 0x1f64 <__gesf2+0x10>
    1f7a:	df 93       	push	r29
    1f7c:	cf 93       	push	r28
    1f7e:	1f 93       	push	r17
    1f80:	0f 93       	push	r16
    1f82:	ff 92       	push	r15
    1f84:	c9 2f       	mov	r28, r25
    1f86:	dd 27       	eor	r29, r29
    1f88:	88 23       	and	r24, r24
    1f8a:	2a f0       	brmi	.+10     	; 0x1f96 <log+0x28>
    1f8c:	21 97       	sbiw	r28, 0x01	; 1
    1f8e:	66 0f       	add	r22, r22
    1f90:	77 1f       	adc	r23, r23
    1f92:	88 1f       	adc	r24, r24
    1f94:	da f7       	brpl	.-10     	; 0x1f8c <log+0x1e>
    1f96:	20 e0       	ldi	r18, 0x00	; 0
    1f98:	30 e0       	ldi	r19, 0x00	; 0
    1f9a:	40 e8       	ldi	r20, 0x80	; 128
    1f9c:	5f eb       	ldi	r21, 0xBF	; 191
    1f9e:	9f e3       	ldi	r25, 0x3F	; 63
    1fa0:	88 39       	cpi	r24, 0x98	; 152
    1fa2:	20 f0       	brcs	.+8      	; 0x1fac <log+0x3e>
    1fa4:	80 3e       	cpi	r24, 0xE0	; 224
    1fa6:	38 f0       	brcs	.+14     	; 0x1fb6 <log+0x48>
    1fa8:	21 96       	adiw	r28, 0x01	; 1
    1faa:	8f 77       	andi	r24, 0x7F	; 127
    1fac:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__addsf3>
    1fb0:	e8 e6       	ldi	r30, 0x68	; 104
    1fb2:	f0 e0       	ldi	r31, 0x00	; 0
    1fb4:	04 c0       	rjmp	.+8      	; 0x1fbe <log+0x50>
    1fb6:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__addsf3>
    1fba:	e5 e9       	ldi	r30, 0x95	; 149
    1fbc:	f0 e0       	ldi	r31, 0x00	; 0
    1fbe:	0e 94 04 11 	call	0x2208	; 0x2208 <__fp_powser>
    1fc2:	8b 01       	movw	r16, r22
    1fc4:	be 01       	movw	r22, r28
    1fc6:	ec 01       	movw	r28, r24
    1fc8:	fb 2e       	mov	r15, r27
    1fca:	6f 57       	subi	r22, 0x7F	; 127
    1fcc:	71 09       	sbc	r23, r1
    1fce:	75 95       	asr	r23
    1fd0:	77 1f       	adc	r23, r23
    1fd2:	88 0b       	sbc	r24, r24
    1fd4:	99 0b       	sbc	r25, r25
    1fd6:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__floatsisf>
    1fda:	28 e1       	ldi	r18, 0x18	; 24
    1fdc:	32 e7       	ldi	r19, 0x72	; 114
    1fde:	41 e3       	ldi	r20, 0x31	; 49
    1fe0:	5f e3       	ldi	r21, 0x3F	; 63
    1fe2:	0e 94 12 10 	call	0x2024	; 0x2024 <__mulsf3x>
    1fe6:	af 2d       	mov	r26, r15
    1fe8:	98 01       	movw	r18, r16
    1fea:	ae 01       	movw	r20, r28
    1fec:	ff 90       	pop	r15
    1fee:	0f 91       	pop	r16
    1ff0:	1f 91       	pop	r17
    1ff2:	cf 91       	pop	r28
    1ff4:	df 91       	pop	r29
    1ff6:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__addsf3x>
    1ffa:	0c 94 70 0f 	jmp	0x1ee0	; 0x1ee0 <__fp_round>

00001ffe <__mulsf3>:
    1ffe:	0e 94 12 10 	call	0x2024	; 0x2024 <__mulsf3x>
    2002:	0c 94 70 0f 	jmp	0x1ee0	; 0x1ee0 <__fp_round>
    2006:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <__fp_pscA>
    200a:	38 f0       	brcs	.+14     	; 0x201a <__mulsf3+0x1c>
    200c:	0e 94 69 0f 	call	0x1ed2	; 0x1ed2 <__fp_pscB>
    2010:	20 f0       	brcs	.+8      	; 0x201a <__mulsf3+0x1c>
    2012:	95 23       	and	r25, r21
    2014:	11 f0       	breq	.+4      	; 0x201a <__mulsf3+0x1c>
    2016:	0c 94 59 0f 	jmp	0x1eb2	; 0x1eb2 <__fp_inf>
    201a:	0c 94 5f 0f 	jmp	0x1ebe	; 0x1ebe <__fp_nan>
    201e:	11 24       	eor	r1, r1
    2020:	0c 94 a4 0f 	jmp	0x1f48	; 0x1f48 <__fp_szero>

00002024 <__mulsf3x>:
    2024:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__fp_split3>
    2028:	70 f3       	brcs	.-36     	; 0x2006 <__mulsf3+0x8>

0000202a <__mulsf3_pse>:
    202a:	95 9f       	mul	r25, r21
    202c:	c1 f3       	breq	.-16     	; 0x201e <__mulsf3+0x20>
    202e:	95 0f       	add	r25, r21
    2030:	50 e0       	ldi	r21, 0x00	; 0
    2032:	55 1f       	adc	r21, r21
    2034:	62 9f       	mul	r22, r18
    2036:	f0 01       	movw	r30, r0
    2038:	72 9f       	mul	r23, r18
    203a:	bb 27       	eor	r27, r27
    203c:	f0 0d       	add	r31, r0
    203e:	b1 1d       	adc	r27, r1
    2040:	63 9f       	mul	r22, r19
    2042:	aa 27       	eor	r26, r26
    2044:	f0 0d       	add	r31, r0
    2046:	b1 1d       	adc	r27, r1
    2048:	aa 1f       	adc	r26, r26
    204a:	64 9f       	mul	r22, r20
    204c:	66 27       	eor	r22, r22
    204e:	b0 0d       	add	r27, r0
    2050:	a1 1d       	adc	r26, r1
    2052:	66 1f       	adc	r22, r22
    2054:	82 9f       	mul	r24, r18
    2056:	22 27       	eor	r18, r18
    2058:	b0 0d       	add	r27, r0
    205a:	a1 1d       	adc	r26, r1
    205c:	62 1f       	adc	r22, r18
    205e:	73 9f       	mul	r23, r19
    2060:	b0 0d       	add	r27, r0
    2062:	a1 1d       	adc	r26, r1
    2064:	62 1f       	adc	r22, r18
    2066:	83 9f       	mul	r24, r19
    2068:	a0 0d       	add	r26, r0
    206a:	61 1d       	adc	r22, r1
    206c:	22 1f       	adc	r18, r18
    206e:	74 9f       	mul	r23, r20
    2070:	33 27       	eor	r19, r19
    2072:	a0 0d       	add	r26, r0
    2074:	61 1d       	adc	r22, r1
    2076:	23 1f       	adc	r18, r19
    2078:	84 9f       	mul	r24, r20
    207a:	60 0d       	add	r22, r0
    207c:	21 1d       	adc	r18, r1
    207e:	82 2f       	mov	r24, r18
    2080:	76 2f       	mov	r23, r22
    2082:	6a 2f       	mov	r22, r26
    2084:	11 24       	eor	r1, r1
    2086:	9f 57       	subi	r25, 0x7F	; 127
    2088:	50 40       	sbci	r21, 0x00	; 0
    208a:	9a f0       	brmi	.+38     	; 0x20b2 <__mulsf3_pse+0x88>
    208c:	f1 f0       	breq	.+60     	; 0x20ca <__mulsf3_pse+0xa0>
    208e:	88 23       	and	r24, r24
    2090:	4a f0       	brmi	.+18     	; 0x20a4 <__mulsf3_pse+0x7a>
    2092:	ee 0f       	add	r30, r30
    2094:	ff 1f       	adc	r31, r31
    2096:	bb 1f       	adc	r27, r27
    2098:	66 1f       	adc	r22, r22
    209a:	77 1f       	adc	r23, r23
    209c:	88 1f       	adc	r24, r24
    209e:	91 50       	subi	r25, 0x01	; 1
    20a0:	50 40       	sbci	r21, 0x00	; 0
    20a2:	a9 f7       	brne	.-22     	; 0x208e <__mulsf3_pse+0x64>
    20a4:	9e 3f       	cpi	r25, 0xFE	; 254
    20a6:	51 05       	cpc	r21, r1
    20a8:	80 f0       	brcs	.+32     	; 0x20ca <__mulsf3_pse+0xa0>
    20aa:	0c 94 59 0f 	jmp	0x1eb2	; 0x1eb2 <__fp_inf>
    20ae:	0c 94 a4 0f 	jmp	0x1f48	; 0x1f48 <__fp_szero>
    20b2:	5f 3f       	cpi	r21, 0xFF	; 255
    20b4:	e4 f3       	brlt	.-8      	; 0x20ae <__mulsf3_pse+0x84>
    20b6:	98 3e       	cpi	r25, 0xE8	; 232
    20b8:	d4 f3       	brlt	.-12     	; 0x20ae <__mulsf3_pse+0x84>
    20ba:	86 95       	lsr	r24
    20bc:	77 95       	ror	r23
    20be:	67 95       	ror	r22
    20c0:	b7 95       	ror	r27
    20c2:	f7 95       	ror	r31
    20c4:	e7 95       	ror	r30
    20c6:	9f 5f       	subi	r25, 0xFF	; 255
    20c8:	c1 f7       	brne	.-16     	; 0x20ba <__mulsf3_pse+0x90>
    20ca:	fe 2b       	or	r31, r30
    20cc:	88 0f       	add	r24, r24
    20ce:	91 1d       	adc	r25, r1
    20d0:	96 95       	lsr	r25
    20d2:	87 95       	ror	r24
    20d4:	97 f9       	bld	r25, 7
    20d6:	08 95       	ret

000020d8 <pow>:
    20d8:	fa 01       	movw	r30, r20
    20da:	ee 0f       	add	r30, r30
    20dc:	ff 1f       	adc	r31, r31
    20de:	30 96       	adiw	r30, 0x00	; 0
    20e0:	21 05       	cpc	r18, r1
    20e2:	31 05       	cpc	r19, r1
    20e4:	a1 f1       	breq	.+104    	; 0x214e <pow+0x76>
    20e6:	61 15       	cp	r22, r1
    20e8:	71 05       	cpc	r23, r1
    20ea:	61 f4       	brne	.+24     	; 0x2104 <pow+0x2c>
    20ec:	80 38       	cpi	r24, 0x80	; 128
    20ee:	bf e3       	ldi	r27, 0x3F	; 63
    20f0:	9b 07       	cpc	r25, r27
    20f2:	49 f1       	breq	.+82     	; 0x2146 <pow+0x6e>
    20f4:	68 94       	set
    20f6:	90 38       	cpi	r25, 0x80	; 128
    20f8:	81 05       	cpc	r24, r1
    20fa:	61 f0       	breq	.+24     	; 0x2114 <pow+0x3c>
    20fc:	80 38       	cpi	r24, 0x80	; 128
    20fe:	bf ef       	ldi	r27, 0xFF	; 255
    2100:	9b 07       	cpc	r25, r27
    2102:	41 f0       	breq	.+16     	; 0x2114 <pow+0x3c>
    2104:	99 23       	and	r25, r25
    2106:	4a f5       	brpl	.+82     	; 0x215a <pow+0x82>
    2108:	ff 3f       	cpi	r31, 0xFF	; 255
    210a:	e1 05       	cpc	r30, r1
    210c:	31 05       	cpc	r19, r1
    210e:	21 05       	cpc	r18, r1
    2110:	19 f1       	breq	.+70     	; 0x2158 <pow+0x80>
    2112:	e8 94       	clt
    2114:	08 94       	sec
    2116:	e7 95       	ror	r30
    2118:	d9 01       	movw	r26, r18
    211a:	aa 23       	and	r26, r26
    211c:	29 f4       	brne	.+10     	; 0x2128 <pow+0x50>
    211e:	ab 2f       	mov	r26, r27
    2120:	be 2f       	mov	r27, r30
    2122:	f8 5f       	subi	r31, 0xF8	; 248
    2124:	d0 f3       	brcs	.-12     	; 0x211a <pow+0x42>
    2126:	10 c0       	rjmp	.+32     	; 0x2148 <pow+0x70>
    2128:	ff 5f       	subi	r31, 0xFF	; 255
    212a:	70 f4       	brcc	.+28     	; 0x2148 <pow+0x70>
    212c:	a6 95       	lsr	r26
    212e:	e0 f7       	brcc	.-8      	; 0x2128 <pow+0x50>
    2130:	f7 39       	cpi	r31, 0x97	; 151
    2132:	50 f0       	brcs	.+20     	; 0x2148 <pow+0x70>
    2134:	19 f0       	breq	.+6      	; 0x213c <pow+0x64>
    2136:	ff 3a       	cpi	r31, 0xAF	; 175
    2138:	38 f4       	brcc	.+14     	; 0x2148 <pow+0x70>
    213a:	9f 77       	andi	r25, 0x7F	; 127
    213c:	9f 93       	push	r25
    213e:	0d d0       	rcall	.+26     	; 0x215a <pow+0x82>
    2140:	0f 90       	pop	r0
    2142:	07 fc       	sbrc	r0, 7
    2144:	90 58       	subi	r25, 0x80	; 128
    2146:	08 95       	ret
    2148:	46 f0       	brts	.+16     	; 0x215a <pow+0x82>
    214a:	0c 94 5f 0f 	jmp	0x1ebe	; 0x1ebe <__fp_nan>
    214e:	60 e0       	ldi	r22, 0x00	; 0
    2150:	70 e0       	ldi	r23, 0x00	; 0
    2152:	80 e8       	ldi	r24, 0x80	; 128
    2154:	9f e3       	ldi	r25, 0x3F	; 63
    2156:	08 95       	ret
    2158:	4f e7       	ldi	r20, 0x7F	; 127
    215a:	9f 77       	andi	r25, 0x7F	; 127
    215c:	5f 93       	push	r21
    215e:	4f 93       	push	r20
    2160:	3f 93       	push	r19
    2162:	2f 93       	push	r18
    2164:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <log>
    2168:	2f 91       	pop	r18
    216a:	3f 91       	pop	r19
    216c:	4f 91       	pop	r20
    216e:	5f 91       	pop	r21
    2170:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    2174:	0c 94 c4 10 	jmp	0x2188	; 0x2188 <exp>
    2178:	29 f4       	brne	.+10     	; 0x2184 <pow+0xac>
    217a:	16 f0       	brts	.+4      	; 0x2180 <pow+0xa8>
    217c:	0c 94 59 0f 	jmp	0x1eb2	; 0x1eb2 <__fp_inf>
    2180:	0c 94 a3 0f 	jmp	0x1f46	; 0x1f46 <__fp_zero>
    2184:	0c 94 5f 0f 	jmp	0x1ebe	; 0x1ebe <__fp_nan>

00002188 <exp>:
    2188:	0e 94 89 0f 	call	0x1f12	; 0x1f12 <__fp_splitA>
    218c:	a8 f3       	brcs	.-22     	; 0x2178 <pow+0xa0>
    218e:	96 38       	cpi	r25, 0x86	; 134
    2190:	a0 f7       	brcc	.-24     	; 0x217a <pow+0xa2>
    2192:	07 f8       	bld	r0, 7
    2194:	0f 92       	push	r0
    2196:	e8 94       	clt
    2198:	2b e3       	ldi	r18, 0x3B	; 59
    219a:	3a ea       	ldi	r19, 0xAA	; 170
    219c:	48 eb       	ldi	r20, 0xB8	; 184
    219e:	5f e7       	ldi	r21, 0x7F	; 127
    21a0:	0e 94 15 10 	call	0x202a	; 0x202a <__mulsf3_pse>
    21a4:	0f 92       	push	r0
    21a6:	0f 92       	push	r0
    21a8:	0f 92       	push	r0
    21aa:	4d b7       	in	r20, 0x3d	; 61
    21ac:	5e b7       	in	r21, 0x3e	; 62
    21ae:	0f 92       	push	r0
    21b0:	0e 94 6d 11 	call	0x22da	; 0x22da <modf>
    21b4:	e2 ec       	ldi	r30, 0xC2	; 194
    21b6:	f0 e0       	ldi	r31, 0x00	; 0
    21b8:	0e 94 04 11 	call	0x2208	; 0x2208 <__fp_powser>
    21bc:	4f 91       	pop	r20
    21be:	5f 91       	pop	r21
    21c0:	ef 91       	pop	r30
    21c2:	ff 91       	pop	r31
    21c4:	e5 95       	asr	r30
    21c6:	ee 1f       	adc	r30, r30
    21c8:	ff 1f       	adc	r31, r31
    21ca:	49 f0       	breq	.+18     	; 0x21de <exp+0x56>
    21cc:	fe 57       	subi	r31, 0x7E	; 126
    21ce:	e0 68       	ori	r30, 0x80	; 128
    21d0:	44 27       	eor	r20, r20
    21d2:	ee 0f       	add	r30, r30
    21d4:	44 1f       	adc	r20, r20
    21d6:	fa 95       	dec	r31
    21d8:	e1 f7       	brne	.-8      	; 0x21d2 <exp+0x4a>
    21da:	41 95       	neg	r20
    21dc:	55 0b       	sbc	r21, r21
    21de:	0e 94 37 11 	call	0x226e	; 0x226e <ldexp>
    21e2:	0f 90       	pop	r0
    21e4:	07 fe       	sbrs	r0, 7
    21e6:	0c 94 2b 11 	jmp	0x2256	; 0x2256 <inverse>
    21ea:	08 95       	ret

000021ec <__fp_mpack>:
    21ec:	9f 3f       	cpi	r25, 0xFF	; 255
    21ee:	31 f0       	breq	.+12     	; 0x21fc <__fp_mpack_finite+0xc>

000021f0 <__fp_mpack_finite>:
    21f0:	91 50       	subi	r25, 0x01	; 1
    21f2:	20 f4       	brcc	.+8      	; 0x21fc <__fp_mpack_finite+0xc>
    21f4:	87 95       	ror	r24
    21f6:	77 95       	ror	r23
    21f8:	67 95       	ror	r22
    21fa:	b7 95       	ror	r27
    21fc:	88 0f       	add	r24, r24
    21fe:	91 1d       	adc	r25, r1
    2200:	96 95       	lsr	r25
    2202:	87 95       	ror	r24
    2204:	97 f9       	bld	r25, 7
    2206:	08 95       	ret

00002208 <__fp_powser>:
    2208:	df 93       	push	r29
    220a:	cf 93       	push	r28
    220c:	1f 93       	push	r17
    220e:	0f 93       	push	r16
    2210:	ff 92       	push	r15
    2212:	ef 92       	push	r14
    2214:	df 92       	push	r13
    2216:	7b 01       	movw	r14, r22
    2218:	8c 01       	movw	r16, r24
    221a:	68 94       	set
    221c:	06 c0       	rjmp	.+12     	; 0x222a <__fp_powser+0x22>
    221e:	da 2e       	mov	r13, r26
    2220:	ef 01       	movw	r28, r30
    2222:	0e 94 12 10 	call	0x2024	; 0x2024 <__mulsf3x>
    2226:	fe 01       	movw	r30, r28
    2228:	e8 94       	clt
    222a:	a5 91       	lpm	r26, Z+
    222c:	25 91       	lpm	r18, Z+
    222e:	35 91       	lpm	r19, Z+
    2230:	45 91       	lpm	r20, Z+
    2232:	55 91       	lpm	r21, Z+
    2234:	a6 f3       	brts	.-24     	; 0x221e <__fp_powser+0x16>
    2236:	ef 01       	movw	r28, r30
    2238:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__addsf3x>
    223c:	fe 01       	movw	r30, r28
    223e:	97 01       	movw	r18, r14
    2240:	a8 01       	movw	r20, r16
    2242:	da 94       	dec	r13
    2244:	69 f7       	brne	.-38     	; 0x2220 <__fp_powser+0x18>
    2246:	df 90       	pop	r13
    2248:	ef 90       	pop	r14
    224a:	ff 90       	pop	r15
    224c:	0f 91       	pop	r16
    224e:	1f 91       	pop	r17
    2250:	cf 91       	pop	r28
    2252:	df 91       	pop	r29
    2254:	08 95       	ret

00002256 <inverse>:
    2256:	9b 01       	movw	r18, r22
    2258:	ac 01       	movw	r20, r24
    225a:	60 e0       	ldi	r22, 0x00	; 0
    225c:	70 e0       	ldi	r23, 0x00	; 0
    225e:	80 e8       	ldi	r24, 0x80	; 128
    2260:	9f e3       	ldi	r25, 0x3F	; 63
    2262:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <__divsf3>
    2266:	0c 94 59 0f 	jmp	0x1eb2	; 0x1eb2 <__fp_inf>
    226a:	0c 94 f6 10 	jmp	0x21ec	; 0x21ec <__fp_mpack>

0000226e <ldexp>:
    226e:	0e 94 89 0f 	call	0x1f12	; 0x1f12 <__fp_splitA>
    2272:	d8 f3       	brcs	.-10     	; 0x226a <inverse+0x14>
    2274:	99 23       	and	r25, r25
    2276:	c9 f3       	breq	.-14     	; 0x226a <inverse+0x14>
    2278:	94 0f       	add	r25, r20
    227a:	51 1d       	adc	r21, r1
    227c:	a3 f3       	brvs	.-24     	; 0x2266 <inverse+0x10>
    227e:	91 50       	subi	r25, 0x01	; 1
    2280:	50 40       	sbci	r21, 0x00	; 0
    2282:	94 f0       	brlt	.+36     	; 0x22a8 <ldexp+0x3a>
    2284:	59 f0       	breq	.+22     	; 0x229c <ldexp+0x2e>
    2286:	88 23       	and	r24, r24
    2288:	32 f0       	brmi	.+12     	; 0x2296 <ldexp+0x28>
    228a:	66 0f       	add	r22, r22
    228c:	77 1f       	adc	r23, r23
    228e:	88 1f       	adc	r24, r24
    2290:	91 50       	subi	r25, 0x01	; 1
    2292:	50 40       	sbci	r21, 0x00	; 0
    2294:	c1 f7       	brne	.-16     	; 0x2286 <ldexp+0x18>
    2296:	9e 3f       	cpi	r25, 0xFE	; 254
    2298:	51 05       	cpc	r21, r1
    229a:	2c f7       	brge	.-54     	; 0x2266 <inverse+0x10>
    229c:	88 0f       	add	r24, r24
    229e:	91 1d       	adc	r25, r1
    22a0:	96 95       	lsr	r25
    22a2:	87 95       	ror	r24
    22a4:	97 f9       	bld	r25, 7
    22a6:	08 95       	ret
    22a8:	5f 3f       	cpi	r21, 0xFF	; 255
    22aa:	ac f0       	brlt	.+42     	; 0x22d6 <ldexp+0x68>
    22ac:	98 3e       	cpi	r25, 0xE8	; 232
    22ae:	9c f0       	brlt	.+38     	; 0x22d6 <ldexp+0x68>
    22b0:	bb 27       	eor	r27, r27
    22b2:	86 95       	lsr	r24
    22b4:	77 95       	ror	r23
    22b6:	67 95       	ror	r22
    22b8:	b7 95       	ror	r27
    22ba:	08 f4       	brcc	.+2      	; 0x22be <ldexp+0x50>
    22bc:	b1 60       	ori	r27, 0x01	; 1
    22be:	93 95       	inc	r25
    22c0:	c1 f7       	brne	.-16     	; 0x22b2 <ldexp+0x44>
    22c2:	bb 0f       	add	r27, r27
    22c4:	58 f7       	brcc	.-42     	; 0x229c <ldexp+0x2e>
    22c6:	11 f4       	brne	.+4      	; 0x22cc <ldexp+0x5e>
    22c8:	60 ff       	sbrs	r22, 0
    22ca:	e8 cf       	rjmp	.-48     	; 0x229c <ldexp+0x2e>
    22cc:	6f 5f       	subi	r22, 0xFF	; 255
    22ce:	7f 4f       	sbci	r23, 0xFF	; 255
    22d0:	8f 4f       	sbci	r24, 0xFF	; 255
    22d2:	9f 4f       	sbci	r25, 0xFF	; 255
    22d4:	e3 cf       	rjmp	.-58     	; 0x229c <ldexp+0x2e>
    22d6:	0c 94 a4 0f 	jmp	0x1f48	; 0x1f48 <__fp_szero>

000022da <modf>:
    22da:	fa 01       	movw	r30, r20
    22dc:	dc 01       	movw	r26, r24
    22de:	aa 0f       	add	r26, r26
    22e0:	bb 1f       	adc	r27, r27
    22e2:	9b 01       	movw	r18, r22
    22e4:	ac 01       	movw	r20, r24
    22e6:	bf 57       	subi	r27, 0x7F	; 127
    22e8:	28 f4       	brcc	.+10     	; 0x22f4 <modf+0x1a>
    22ea:	22 27       	eor	r18, r18
    22ec:	33 27       	eor	r19, r19
    22ee:	44 27       	eor	r20, r20
    22f0:	50 78       	andi	r21, 0x80	; 128
    22f2:	20 c0       	rjmp	.+64     	; 0x2334 <modf+0x5a>
    22f4:	b7 51       	subi	r27, 0x17	; 23
    22f6:	90 f4       	brcc	.+36     	; 0x231c <modf+0x42>
    22f8:	ab 2f       	mov	r26, r27
    22fa:	00 24       	eor	r0, r0
    22fc:	46 95       	lsr	r20
    22fe:	37 95       	ror	r19
    2300:	27 95       	ror	r18
    2302:	01 1c       	adc	r0, r1
    2304:	a3 95       	inc	r26
    2306:	d2 f3       	brmi	.-12     	; 0x22fc <modf+0x22>
    2308:	00 20       	and	r0, r0
    230a:	71 f0       	breq	.+28     	; 0x2328 <modf+0x4e>
    230c:	22 0f       	add	r18, r18
    230e:	33 1f       	adc	r19, r19
    2310:	44 1f       	adc	r20, r20
    2312:	b3 95       	inc	r27
    2314:	da f3       	brmi	.-10     	; 0x230c <modf+0x32>
    2316:	0e d0       	rcall	.+28     	; 0x2334 <modf+0x5a>
    2318:	0c 94 e5 0d 	jmp	0x1bca	; 0x1bca <__subsf3>
    231c:	61 30       	cpi	r22, 0x01	; 1
    231e:	71 05       	cpc	r23, r1
    2320:	a0 e8       	ldi	r26, 0x80	; 128
    2322:	8a 07       	cpc	r24, r26
    2324:	b9 46       	sbci	r27, 0x69	; 105
    2326:	30 f4       	brcc	.+12     	; 0x2334 <modf+0x5a>
    2328:	9b 01       	movw	r18, r22
    232a:	ac 01       	movw	r20, r24
    232c:	66 27       	eor	r22, r22
    232e:	77 27       	eor	r23, r23
    2330:	88 27       	eor	r24, r24
    2332:	90 78       	andi	r25, 0x80	; 128
    2334:	30 96       	adiw	r30, 0x00	; 0
    2336:	21 f0       	breq	.+8      	; 0x2340 <modf+0x66>
    2338:	20 83       	st	Z, r18
    233a:	31 83       	std	Z+1, r19	; 0x01
    233c:	42 83       	std	Z+2, r20	; 0x02
    233e:	53 83       	std	Z+3, r21	; 0x03
    2340:	08 95       	ret

00002342 <__udivmodqi4>:
    2342:	99 1b       	sub	r25, r25
    2344:	79 e0       	ldi	r23, 0x09	; 9
    2346:	04 c0       	rjmp	.+8      	; 0x2350 <__udivmodqi4_ep>

00002348 <__udivmodqi4_loop>:
    2348:	99 1f       	adc	r25, r25
    234a:	96 17       	cp	r25, r22
    234c:	08 f0       	brcs	.+2      	; 0x2350 <__udivmodqi4_ep>
    234e:	96 1b       	sub	r25, r22

00002350 <__udivmodqi4_ep>:
    2350:	88 1f       	adc	r24, r24
    2352:	7a 95       	dec	r23
    2354:	c9 f7       	brne	.-14     	; 0x2348 <__udivmodqi4_loop>
    2356:	80 95       	com	r24
    2358:	08 95       	ret

0000235a <__udivmodsi4>:
    235a:	a1 e2       	ldi	r26, 0x21	; 33
    235c:	1a 2e       	mov	r1, r26
    235e:	aa 1b       	sub	r26, r26
    2360:	bb 1b       	sub	r27, r27
    2362:	fd 01       	movw	r30, r26
    2364:	0d c0       	rjmp	.+26     	; 0x2380 <__udivmodsi4_ep>

00002366 <__udivmodsi4_loop>:
    2366:	aa 1f       	adc	r26, r26
    2368:	bb 1f       	adc	r27, r27
    236a:	ee 1f       	adc	r30, r30
    236c:	ff 1f       	adc	r31, r31
    236e:	a2 17       	cp	r26, r18
    2370:	b3 07       	cpc	r27, r19
    2372:	e4 07       	cpc	r30, r20
    2374:	f5 07       	cpc	r31, r21
    2376:	20 f0       	brcs	.+8      	; 0x2380 <__udivmodsi4_ep>
    2378:	a2 1b       	sub	r26, r18
    237a:	b3 0b       	sbc	r27, r19
    237c:	e4 0b       	sbc	r30, r20
    237e:	f5 0b       	sbc	r31, r21

00002380 <__udivmodsi4_ep>:
    2380:	66 1f       	adc	r22, r22
    2382:	77 1f       	adc	r23, r23
    2384:	88 1f       	adc	r24, r24
    2386:	99 1f       	adc	r25, r25
    2388:	1a 94       	dec	r1
    238a:	69 f7       	brne	.-38     	; 0x2366 <__udivmodsi4_loop>
    238c:	60 95       	com	r22
    238e:	70 95       	com	r23
    2390:	80 95       	com	r24
    2392:	90 95       	com	r25
    2394:	9b 01       	movw	r18, r22
    2396:	ac 01       	movw	r20, r24
    2398:	bd 01       	movw	r22, r26
    239a:	cf 01       	movw	r24, r30
    239c:	08 95       	ret

0000239e <__divmodsi4>:
    239e:	05 2e       	mov	r0, r21
    23a0:	97 fb       	bst	r25, 7
    23a2:	1e f4       	brtc	.+6      	; 0x23aa <__divmodsi4+0xc>
    23a4:	00 94       	com	r0
    23a6:	0e 94 e6 11 	call	0x23cc	; 0x23cc <__negsi2>
    23aa:	57 fd       	sbrc	r21, 7
    23ac:	07 d0       	rcall	.+14     	; 0x23bc <__divmodsi4_neg2>
    23ae:	0e 94 ad 11 	call	0x235a	; 0x235a <__udivmodsi4>
    23b2:	07 fc       	sbrc	r0, 7
    23b4:	03 d0       	rcall	.+6      	; 0x23bc <__divmodsi4_neg2>
    23b6:	4e f4       	brtc	.+18     	; 0x23ca <__divmodsi4_exit>
    23b8:	0c 94 e6 11 	jmp	0x23cc	; 0x23cc <__negsi2>

000023bc <__divmodsi4_neg2>:
    23bc:	50 95       	com	r21
    23be:	40 95       	com	r20
    23c0:	30 95       	com	r19
    23c2:	21 95       	neg	r18
    23c4:	3f 4f       	sbci	r19, 0xFF	; 255
    23c6:	4f 4f       	sbci	r20, 0xFF	; 255
    23c8:	5f 4f       	sbci	r21, 0xFF	; 255

000023ca <__divmodsi4_exit>:
    23ca:	08 95       	ret

000023cc <__negsi2>:
    23cc:	90 95       	com	r25
    23ce:	80 95       	com	r24
    23d0:	70 95       	com	r23
    23d2:	61 95       	neg	r22
    23d4:	7f 4f       	sbci	r23, 0xFF	; 255
    23d6:	8f 4f       	sbci	r24, 0xFF	; 255
    23d8:	9f 4f       	sbci	r25, 0xFF	; 255
    23da:	08 95       	ret

000023dc <__umulhisi3>:
    23dc:	a2 9f       	mul	r26, r18
    23de:	b0 01       	movw	r22, r0
    23e0:	b3 9f       	mul	r27, r19
    23e2:	c0 01       	movw	r24, r0
    23e4:	a3 9f       	mul	r26, r19
    23e6:	70 0d       	add	r23, r0
    23e8:	81 1d       	adc	r24, r1
    23ea:	11 24       	eor	r1, r1
    23ec:	91 1d       	adc	r25, r1
    23ee:	b2 9f       	mul	r27, r18
    23f0:	70 0d       	add	r23, r0
    23f2:	81 1d       	adc	r24, r1
    23f4:	11 24       	eor	r1, r1
    23f6:	91 1d       	adc	r25, r1
    23f8:	08 95       	ret

000023fa <sprintf>:
    23fa:	ae e0       	ldi	r26, 0x0E	; 14
    23fc:	b0 e0       	ldi	r27, 0x00	; 0
    23fe:	e3 e0       	ldi	r30, 0x03	; 3
    2400:	f2 e1       	ldi	r31, 0x12	; 18
    2402:	0c 94 be 14 	jmp	0x297c	; 0x297c <__prologue_saves__+0x1c>
    2406:	0d 89       	ldd	r16, Y+21	; 0x15
    2408:	1e 89       	ldd	r17, Y+22	; 0x16
    240a:	86 e0       	ldi	r24, 0x06	; 6
    240c:	8c 83       	std	Y+4, r24	; 0x04
    240e:	1a 83       	std	Y+2, r17	; 0x02
    2410:	09 83       	std	Y+1, r16	; 0x01
    2412:	8f ef       	ldi	r24, 0xFF	; 255
    2414:	9f e7       	ldi	r25, 0x7F	; 127
    2416:	9e 83       	std	Y+6, r25	; 0x06
    2418:	8d 83       	std	Y+5, r24	; 0x05
    241a:	ae 01       	movw	r20, r28
    241c:	47 5e       	subi	r20, 0xE7	; 231
    241e:	5f 4f       	sbci	r21, 0xFF	; 255
    2420:	6f 89       	ldd	r22, Y+23	; 0x17
    2422:	78 8d       	ldd	r23, Y+24	; 0x18
    2424:	ce 01       	movw	r24, r28
    2426:	01 96       	adiw	r24, 0x01	; 1
    2428:	0e 94 1f 12 	call	0x243e	; 0x243e <vfprintf>
    242c:	ef 81       	ldd	r30, Y+7	; 0x07
    242e:	f8 85       	ldd	r31, Y+8	; 0x08
    2430:	e0 0f       	add	r30, r16
    2432:	f1 1f       	adc	r31, r17
    2434:	10 82       	st	Z, r1
    2436:	2e 96       	adiw	r28, 0x0e	; 14
    2438:	e4 e0       	ldi	r30, 0x04	; 4
    243a:	0c 94 da 14 	jmp	0x29b4	; 0x29b4 <__epilogue_restores__+0x1c>

0000243e <vfprintf>:
    243e:	ab e0       	ldi	r26, 0x0B	; 11
    2440:	b0 e0       	ldi	r27, 0x00	; 0
    2442:	e5 e2       	ldi	r30, 0x25	; 37
    2444:	f2 e1       	ldi	r31, 0x12	; 18
    2446:	0c 94 b0 14 	jmp	0x2960	; 0x2960 <__prologue_saves__>
    244a:	6c 01       	movw	r12, r24
    244c:	7b 01       	movw	r14, r22
    244e:	8a 01       	movw	r16, r20
    2450:	fc 01       	movw	r30, r24
    2452:	17 82       	std	Z+7, r1	; 0x07
    2454:	16 82       	std	Z+6, r1	; 0x06
    2456:	83 81       	ldd	r24, Z+3	; 0x03
    2458:	81 ff       	sbrs	r24, 1
    245a:	cc c1       	rjmp	.+920    	; 0x27f4 <vfprintf+0x3b6>
    245c:	ce 01       	movw	r24, r28
    245e:	01 96       	adiw	r24, 0x01	; 1
    2460:	3c 01       	movw	r6, r24
    2462:	f6 01       	movw	r30, r12
    2464:	93 81       	ldd	r25, Z+3	; 0x03
    2466:	f7 01       	movw	r30, r14
    2468:	93 fd       	sbrc	r25, 3
    246a:	85 91       	lpm	r24, Z+
    246c:	93 ff       	sbrs	r25, 3
    246e:	81 91       	ld	r24, Z+
    2470:	7f 01       	movw	r14, r30
    2472:	88 23       	and	r24, r24
    2474:	09 f4       	brne	.+2      	; 0x2478 <vfprintf+0x3a>
    2476:	ba c1       	rjmp	.+884    	; 0x27ec <vfprintf+0x3ae>
    2478:	85 32       	cpi	r24, 0x25	; 37
    247a:	39 f4       	brne	.+14     	; 0x248a <vfprintf+0x4c>
    247c:	93 fd       	sbrc	r25, 3
    247e:	85 91       	lpm	r24, Z+
    2480:	93 ff       	sbrs	r25, 3
    2482:	81 91       	ld	r24, Z+
    2484:	7f 01       	movw	r14, r30
    2486:	85 32       	cpi	r24, 0x25	; 37
    2488:	29 f4       	brne	.+10     	; 0x2494 <vfprintf+0x56>
    248a:	b6 01       	movw	r22, r12
    248c:	90 e0       	ldi	r25, 0x00	; 0
    248e:	0e 94 16 14 	call	0x282c	; 0x282c <fputc>
    2492:	e7 cf       	rjmp	.-50     	; 0x2462 <vfprintf+0x24>
    2494:	91 2c       	mov	r9, r1
    2496:	21 2c       	mov	r2, r1
    2498:	31 2c       	mov	r3, r1
    249a:	ff e1       	ldi	r31, 0x1F	; 31
    249c:	f3 15       	cp	r31, r3
    249e:	d8 f0       	brcs	.+54     	; 0x24d6 <vfprintf+0x98>
    24a0:	8b 32       	cpi	r24, 0x2B	; 43
    24a2:	79 f0       	breq	.+30     	; 0x24c2 <vfprintf+0x84>
    24a4:	38 f4       	brcc	.+14     	; 0x24b4 <vfprintf+0x76>
    24a6:	80 32       	cpi	r24, 0x20	; 32
    24a8:	79 f0       	breq	.+30     	; 0x24c8 <vfprintf+0x8a>
    24aa:	83 32       	cpi	r24, 0x23	; 35
    24ac:	a1 f4       	brne	.+40     	; 0x24d6 <vfprintf+0x98>
    24ae:	23 2d       	mov	r18, r3
    24b0:	20 61       	ori	r18, 0x10	; 16
    24b2:	1d c0       	rjmp	.+58     	; 0x24ee <vfprintf+0xb0>
    24b4:	8d 32       	cpi	r24, 0x2D	; 45
    24b6:	61 f0       	breq	.+24     	; 0x24d0 <vfprintf+0x92>
    24b8:	80 33       	cpi	r24, 0x30	; 48
    24ba:	69 f4       	brne	.+26     	; 0x24d6 <vfprintf+0x98>
    24bc:	23 2d       	mov	r18, r3
    24be:	21 60       	ori	r18, 0x01	; 1
    24c0:	16 c0       	rjmp	.+44     	; 0x24ee <vfprintf+0xb0>
    24c2:	83 2d       	mov	r24, r3
    24c4:	82 60       	ori	r24, 0x02	; 2
    24c6:	38 2e       	mov	r3, r24
    24c8:	e3 2d       	mov	r30, r3
    24ca:	e4 60       	ori	r30, 0x04	; 4
    24cc:	3e 2e       	mov	r3, r30
    24ce:	2a c0       	rjmp	.+84     	; 0x2524 <vfprintf+0xe6>
    24d0:	f3 2d       	mov	r31, r3
    24d2:	f8 60       	ori	r31, 0x08	; 8
    24d4:	1d c0       	rjmp	.+58     	; 0x2510 <vfprintf+0xd2>
    24d6:	37 fc       	sbrc	r3, 7
    24d8:	2d c0       	rjmp	.+90     	; 0x2534 <vfprintf+0xf6>
    24da:	20 ed       	ldi	r18, 0xD0	; 208
    24dc:	28 0f       	add	r18, r24
    24de:	2a 30       	cpi	r18, 0x0A	; 10
    24e0:	40 f0       	brcs	.+16     	; 0x24f2 <vfprintf+0xb4>
    24e2:	8e 32       	cpi	r24, 0x2E	; 46
    24e4:	b9 f4       	brne	.+46     	; 0x2514 <vfprintf+0xd6>
    24e6:	36 fc       	sbrc	r3, 6
    24e8:	81 c1       	rjmp	.+770    	; 0x27ec <vfprintf+0x3ae>
    24ea:	23 2d       	mov	r18, r3
    24ec:	20 64       	ori	r18, 0x40	; 64
    24ee:	32 2e       	mov	r3, r18
    24f0:	19 c0       	rjmp	.+50     	; 0x2524 <vfprintf+0xe6>
    24f2:	36 fe       	sbrs	r3, 6
    24f4:	06 c0       	rjmp	.+12     	; 0x2502 <vfprintf+0xc4>
    24f6:	8a e0       	ldi	r24, 0x0A	; 10
    24f8:	98 9e       	mul	r9, r24
    24fa:	20 0d       	add	r18, r0
    24fc:	11 24       	eor	r1, r1
    24fe:	92 2e       	mov	r9, r18
    2500:	11 c0       	rjmp	.+34     	; 0x2524 <vfprintf+0xe6>
    2502:	ea e0       	ldi	r30, 0x0A	; 10
    2504:	2e 9e       	mul	r2, r30
    2506:	20 0d       	add	r18, r0
    2508:	11 24       	eor	r1, r1
    250a:	22 2e       	mov	r2, r18
    250c:	f3 2d       	mov	r31, r3
    250e:	f0 62       	ori	r31, 0x20	; 32
    2510:	3f 2e       	mov	r3, r31
    2512:	08 c0       	rjmp	.+16     	; 0x2524 <vfprintf+0xe6>
    2514:	8c 36       	cpi	r24, 0x6C	; 108
    2516:	21 f4       	brne	.+8      	; 0x2520 <vfprintf+0xe2>
    2518:	83 2d       	mov	r24, r3
    251a:	80 68       	ori	r24, 0x80	; 128
    251c:	38 2e       	mov	r3, r24
    251e:	02 c0       	rjmp	.+4      	; 0x2524 <vfprintf+0xe6>
    2520:	88 36       	cpi	r24, 0x68	; 104
    2522:	41 f4       	brne	.+16     	; 0x2534 <vfprintf+0xf6>
    2524:	f7 01       	movw	r30, r14
    2526:	93 fd       	sbrc	r25, 3
    2528:	85 91       	lpm	r24, Z+
    252a:	93 ff       	sbrs	r25, 3
    252c:	81 91       	ld	r24, Z+
    252e:	7f 01       	movw	r14, r30
    2530:	81 11       	cpse	r24, r1
    2532:	b3 cf       	rjmp	.-154    	; 0x249a <vfprintf+0x5c>
    2534:	98 2f       	mov	r25, r24
    2536:	9f 7d       	andi	r25, 0xDF	; 223
    2538:	95 54       	subi	r25, 0x45	; 69
    253a:	93 30       	cpi	r25, 0x03	; 3
    253c:	28 f4       	brcc	.+10     	; 0x2548 <vfprintf+0x10a>
    253e:	0c 5f       	subi	r16, 0xFC	; 252
    2540:	1f 4f       	sbci	r17, 0xFF	; 255
    2542:	9f e3       	ldi	r25, 0x3F	; 63
    2544:	99 83       	std	Y+1, r25	; 0x01
    2546:	0d c0       	rjmp	.+26     	; 0x2562 <vfprintf+0x124>
    2548:	83 36       	cpi	r24, 0x63	; 99
    254a:	31 f0       	breq	.+12     	; 0x2558 <vfprintf+0x11a>
    254c:	83 37       	cpi	r24, 0x73	; 115
    254e:	71 f0       	breq	.+28     	; 0x256c <vfprintf+0x12e>
    2550:	83 35       	cpi	r24, 0x53	; 83
    2552:	09 f0       	breq	.+2      	; 0x2556 <vfprintf+0x118>
    2554:	59 c0       	rjmp	.+178    	; 0x2608 <vfprintf+0x1ca>
    2556:	21 c0       	rjmp	.+66     	; 0x259a <vfprintf+0x15c>
    2558:	f8 01       	movw	r30, r16
    255a:	80 81       	ld	r24, Z
    255c:	89 83       	std	Y+1, r24	; 0x01
    255e:	0e 5f       	subi	r16, 0xFE	; 254
    2560:	1f 4f       	sbci	r17, 0xFF	; 255
    2562:	88 24       	eor	r8, r8
    2564:	83 94       	inc	r8
    2566:	91 2c       	mov	r9, r1
    2568:	53 01       	movw	r10, r6
    256a:	13 c0       	rjmp	.+38     	; 0x2592 <vfprintf+0x154>
    256c:	28 01       	movw	r4, r16
    256e:	f2 e0       	ldi	r31, 0x02	; 2
    2570:	4f 0e       	add	r4, r31
    2572:	51 1c       	adc	r5, r1
    2574:	f8 01       	movw	r30, r16
    2576:	a0 80       	ld	r10, Z
    2578:	b1 80       	ldd	r11, Z+1	; 0x01
    257a:	36 fe       	sbrs	r3, 6
    257c:	03 c0       	rjmp	.+6      	; 0x2584 <vfprintf+0x146>
    257e:	69 2d       	mov	r22, r9
    2580:	70 e0       	ldi	r23, 0x00	; 0
    2582:	02 c0       	rjmp	.+4      	; 0x2588 <vfprintf+0x14a>
    2584:	6f ef       	ldi	r22, 0xFF	; 255
    2586:	7f ef       	ldi	r23, 0xFF	; 255
    2588:	c5 01       	movw	r24, r10
    258a:	0e 94 0b 14 	call	0x2816	; 0x2816 <strnlen>
    258e:	4c 01       	movw	r8, r24
    2590:	82 01       	movw	r16, r4
    2592:	f3 2d       	mov	r31, r3
    2594:	ff 77       	andi	r31, 0x7F	; 127
    2596:	3f 2e       	mov	r3, r31
    2598:	16 c0       	rjmp	.+44     	; 0x25c6 <vfprintf+0x188>
    259a:	28 01       	movw	r4, r16
    259c:	22 e0       	ldi	r18, 0x02	; 2
    259e:	42 0e       	add	r4, r18
    25a0:	51 1c       	adc	r5, r1
    25a2:	f8 01       	movw	r30, r16
    25a4:	a0 80       	ld	r10, Z
    25a6:	b1 80       	ldd	r11, Z+1	; 0x01
    25a8:	36 fe       	sbrs	r3, 6
    25aa:	03 c0       	rjmp	.+6      	; 0x25b2 <vfprintf+0x174>
    25ac:	69 2d       	mov	r22, r9
    25ae:	70 e0       	ldi	r23, 0x00	; 0
    25b0:	02 c0       	rjmp	.+4      	; 0x25b6 <vfprintf+0x178>
    25b2:	6f ef       	ldi	r22, 0xFF	; 255
    25b4:	7f ef       	ldi	r23, 0xFF	; 255
    25b6:	c5 01       	movw	r24, r10
    25b8:	0e 94 00 14 	call	0x2800	; 0x2800 <strnlen_P>
    25bc:	4c 01       	movw	r8, r24
    25be:	f3 2d       	mov	r31, r3
    25c0:	f0 68       	ori	r31, 0x80	; 128
    25c2:	3f 2e       	mov	r3, r31
    25c4:	82 01       	movw	r16, r4
    25c6:	33 fc       	sbrc	r3, 3
    25c8:	1b c0       	rjmp	.+54     	; 0x2600 <vfprintf+0x1c2>
    25ca:	82 2d       	mov	r24, r2
    25cc:	90 e0       	ldi	r25, 0x00	; 0
    25ce:	88 16       	cp	r8, r24
    25d0:	99 06       	cpc	r9, r25
    25d2:	b0 f4       	brcc	.+44     	; 0x2600 <vfprintf+0x1c2>
    25d4:	b6 01       	movw	r22, r12
    25d6:	80 e2       	ldi	r24, 0x20	; 32
    25d8:	90 e0       	ldi	r25, 0x00	; 0
    25da:	0e 94 16 14 	call	0x282c	; 0x282c <fputc>
    25de:	2a 94       	dec	r2
    25e0:	f4 cf       	rjmp	.-24     	; 0x25ca <vfprintf+0x18c>
    25e2:	f5 01       	movw	r30, r10
    25e4:	37 fc       	sbrc	r3, 7
    25e6:	85 91       	lpm	r24, Z+
    25e8:	37 fe       	sbrs	r3, 7
    25ea:	81 91       	ld	r24, Z+
    25ec:	5f 01       	movw	r10, r30
    25ee:	b6 01       	movw	r22, r12
    25f0:	90 e0       	ldi	r25, 0x00	; 0
    25f2:	0e 94 16 14 	call	0x282c	; 0x282c <fputc>
    25f6:	21 10       	cpse	r2, r1
    25f8:	2a 94       	dec	r2
    25fa:	21 e0       	ldi	r18, 0x01	; 1
    25fc:	82 1a       	sub	r8, r18
    25fe:	91 08       	sbc	r9, r1
    2600:	81 14       	cp	r8, r1
    2602:	91 04       	cpc	r9, r1
    2604:	71 f7       	brne	.-36     	; 0x25e2 <vfprintf+0x1a4>
    2606:	e8 c0       	rjmp	.+464    	; 0x27d8 <vfprintf+0x39a>
    2608:	84 36       	cpi	r24, 0x64	; 100
    260a:	11 f0       	breq	.+4      	; 0x2610 <vfprintf+0x1d2>
    260c:	89 36       	cpi	r24, 0x69	; 105
    260e:	41 f5       	brne	.+80     	; 0x2660 <vfprintf+0x222>
    2610:	f8 01       	movw	r30, r16
    2612:	37 fe       	sbrs	r3, 7
    2614:	07 c0       	rjmp	.+14     	; 0x2624 <vfprintf+0x1e6>
    2616:	60 81       	ld	r22, Z
    2618:	71 81       	ldd	r23, Z+1	; 0x01
    261a:	82 81       	ldd	r24, Z+2	; 0x02
    261c:	93 81       	ldd	r25, Z+3	; 0x03
    261e:	0c 5f       	subi	r16, 0xFC	; 252
    2620:	1f 4f       	sbci	r17, 0xFF	; 255
    2622:	08 c0       	rjmp	.+16     	; 0x2634 <vfprintf+0x1f6>
    2624:	60 81       	ld	r22, Z
    2626:	71 81       	ldd	r23, Z+1	; 0x01
    2628:	07 2e       	mov	r0, r23
    262a:	00 0c       	add	r0, r0
    262c:	88 0b       	sbc	r24, r24
    262e:	99 0b       	sbc	r25, r25
    2630:	0e 5f       	subi	r16, 0xFE	; 254
    2632:	1f 4f       	sbci	r17, 0xFF	; 255
    2634:	f3 2d       	mov	r31, r3
    2636:	ff 76       	andi	r31, 0x6F	; 111
    2638:	3f 2e       	mov	r3, r31
    263a:	97 ff       	sbrs	r25, 7
    263c:	09 c0       	rjmp	.+18     	; 0x2650 <vfprintf+0x212>
    263e:	90 95       	com	r25
    2640:	80 95       	com	r24
    2642:	70 95       	com	r23
    2644:	61 95       	neg	r22
    2646:	7f 4f       	sbci	r23, 0xFF	; 255
    2648:	8f 4f       	sbci	r24, 0xFF	; 255
    264a:	9f 4f       	sbci	r25, 0xFF	; 255
    264c:	f0 68       	ori	r31, 0x80	; 128
    264e:	3f 2e       	mov	r3, r31
    2650:	2a e0       	ldi	r18, 0x0A	; 10
    2652:	30 e0       	ldi	r19, 0x00	; 0
    2654:	a3 01       	movw	r20, r6
    2656:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__ultoa_invert>
    265a:	88 2e       	mov	r8, r24
    265c:	86 18       	sub	r8, r6
    265e:	45 c0       	rjmp	.+138    	; 0x26ea <vfprintf+0x2ac>
    2660:	85 37       	cpi	r24, 0x75	; 117
    2662:	31 f4       	brne	.+12     	; 0x2670 <vfprintf+0x232>
    2664:	23 2d       	mov	r18, r3
    2666:	2f 7e       	andi	r18, 0xEF	; 239
    2668:	b2 2e       	mov	r11, r18
    266a:	2a e0       	ldi	r18, 0x0A	; 10
    266c:	30 e0       	ldi	r19, 0x00	; 0
    266e:	25 c0       	rjmp	.+74     	; 0x26ba <vfprintf+0x27c>
    2670:	93 2d       	mov	r25, r3
    2672:	99 7f       	andi	r25, 0xF9	; 249
    2674:	b9 2e       	mov	r11, r25
    2676:	8f 36       	cpi	r24, 0x6F	; 111
    2678:	c1 f0       	breq	.+48     	; 0x26aa <vfprintf+0x26c>
    267a:	18 f4       	brcc	.+6      	; 0x2682 <vfprintf+0x244>
    267c:	88 35       	cpi	r24, 0x58	; 88
    267e:	79 f0       	breq	.+30     	; 0x269e <vfprintf+0x260>
    2680:	b5 c0       	rjmp	.+362    	; 0x27ec <vfprintf+0x3ae>
    2682:	80 37       	cpi	r24, 0x70	; 112
    2684:	19 f0       	breq	.+6      	; 0x268c <vfprintf+0x24e>
    2686:	88 37       	cpi	r24, 0x78	; 120
    2688:	21 f0       	breq	.+8      	; 0x2692 <vfprintf+0x254>
    268a:	b0 c0       	rjmp	.+352    	; 0x27ec <vfprintf+0x3ae>
    268c:	e9 2f       	mov	r30, r25
    268e:	e0 61       	ori	r30, 0x10	; 16
    2690:	be 2e       	mov	r11, r30
    2692:	b4 fe       	sbrs	r11, 4
    2694:	0d c0       	rjmp	.+26     	; 0x26b0 <vfprintf+0x272>
    2696:	fb 2d       	mov	r31, r11
    2698:	f4 60       	ori	r31, 0x04	; 4
    269a:	bf 2e       	mov	r11, r31
    269c:	09 c0       	rjmp	.+18     	; 0x26b0 <vfprintf+0x272>
    269e:	34 fe       	sbrs	r3, 4
    26a0:	0a c0       	rjmp	.+20     	; 0x26b6 <vfprintf+0x278>
    26a2:	29 2f       	mov	r18, r25
    26a4:	26 60       	ori	r18, 0x06	; 6
    26a6:	b2 2e       	mov	r11, r18
    26a8:	06 c0       	rjmp	.+12     	; 0x26b6 <vfprintf+0x278>
    26aa:	28 e0       	ldi	r18, 0x08	; 8
    26ac:	30 e0       	ldi	r19, 0x00	; 0
    26ae:	05 c0       	rjmp	.+10     	; 0x26ba <vfprintf+0x27c>
    26b0:	20 e1       	ldi	r18, 0x10	; 16
    26b2:	30 e0       	ldi	r19, 0x00	; 0
    26b4:	02 c0       	rjmp	.+4      	; 0x26ba <vfprintf+0x27c>
    26b6:	20 e1       	ldi	r18, 0x10	; 16
    26b8:	32 e0       	ldi	r19, 0x02	; 2
    26ba:	f8 01       	movw	r30, r16
    26bc:	b7 fe       	sbrs	r11, 7
    26be:	07 c0       	rjmp	.+14     	; 0x26ce <vfprintf+0x290>
    26c0:	60 81       	ld	r22, Z
    26c2:	71 81       	ldd	r23, Z+1	; 0x01
    26c4:	82 81       	ldd	r24, Z+2	; 0x02
    26c6:	93 81       	ldd	r25, Z+3	; 0x03
    26c8:	0c 5f       	subi	r16, 0xFC	; 252
    26ca:	1f 4f       	sbci	r17, 0xFF	; 255
    26cc:	06 c0       	rjmp	.+12     	; 0x26da <vfprintf+0x29c>
    26ce:	60 81       	ld	r22, Z
    26d0:	71 81       	ldd	r23, Z+1	; 0x01
    26d2:	80 e0       	ldi	r24, 0x00	; 0
    26d4:	90 e0       	ldi	r25, 0x00	; 0
    26d6:	0e 5f       	subi	r16, 0xFE	; 254
    26d8:	1f 4f       	sbci	r17, 0xFF	; 255
    26da:	a3 01       	movw	r20, r6
    26dc:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__ultoa_invert>
    26e0:	88 2e       	mov	r8, r24
    26e2:	86 18       	sub	r8, r6
    26e4:	fb 2d       	mov	r31, r11
    26e6:	ff 77       	andi	r31, 0x7F	; 127
    26e8:	3f 2e       	mov	r3, r31
    26ea:	36 fe       	sbrs	r3, 6
    26ec:	0d c0       	rjmp	.+26     	; 0x2708 <vfprintf+0x2ca>
    26ee:	23 2d       	mov	r18, r3
    26f0:	2e 7f       	andi	r18, 0xFE	; 254
    26f2:	a2 2e       	mov	r10, r18
    26f4:	89 14       	cp	r8, r9
    26f6:	58 f4       	brcc	.+22     	; 0x270e <vfprintf+0x2d0>
    26f8:	34 fe       	sbrs	r3, 4
    26fa:	0b c0       	rjmp	.+22     	; 0x2712 <vfprintf+0x2d4>
    26fc:	32 fc       	sbrc	r3, 2
    26fe:	09 c0       	rjmp	.+18     	; 0x2712 <vfprintf+0x2d4>
    2700:	83 2d       	mov	r24, r3
    2702:	8e 7e       	andi	r24, 0xEE	; 238
    2704:	a8 2e       	mov	r10, r24
    2706:	05 c0       	rjmp	.+10     	; 0x2712 <vfprintf+0x2d4>
    2708:	b8 2c       	mov	r11, r8
    270a:	a3 2c       	mov	r10, r3
    270c:	03 c0       	rjmp	.+6      	; 0x2714 <vfprintf+0x2d6>
    270e:	b8 2c       	mov	r11, r8
    2710:	01 c0       	rjmp	.+2      	; 0x2714 <vfprintf+0x2d6>
    2712:	b9 2c       	mov	r11, r9
    2714:	a4 fe       	sbrs	r10, 4
    2716:	0f c0       	rjmp	.+30     	; 0x2736 <vfprintf+0x2f8>
    2718:	fe 01       	movw	r30, r28
    271a:	e8 0d       	add	r30, r8
    271c:	f1 1d       	adc	r31, r1
    271e:	80 81       	ld	r24, Z
    2720:	80 33       	cpi	r24, 0x30	; 48
    2722:	21 f4       	brne	.+8      	; 0x272c <vfprintf+0x2ee>
    2724:	9a 2d       	mov	r25, r10
    2726:	99 7e       	andi	r25, 0xE9	; 233
    2728:	a9 2e       	mov	r10, r25
    272a:	09 c0       	rjmp	.+18     	; 0x273e <vfprintf+0x300>
    272c:	a2 fe       	sbrs	r10, 2
    272e:	06 c0       	rjmp	.+12     	; 0x273c <vfprintf+0x2fe>
    2730:	b3 94       	inc	r11
    2732:	b3 94       	inc	r11
    2734:	04 c0       	rjmp	.+8      	; 0x273e <vfprintf+0x300>
    2736:	8a 2d       	mov	r24, r10
    2738:	86 78       	andi	r24, 0x86	; 134
    273a:	09 f0       	breq	.+2      	; 0x273e <vfprintf+0x300>
    273c:	b3 94       	inc	r11
    273e:	a3 fc       	sbrc	r10, 3
    2740:	11 c0       	rjmp	.+34     	; 0x2764 <vfprintf+0x326>
    2742:	a0 fe       	sbrs	r10, 0
    2744:	06 c0       	rjmp	.+12     	; 0x2752 <vfprintf+0x314>
    2746:	b2 14       	cp	r11, r2
    2748:	88 f4       	brcc	.+34     	; 0x276c <vfprintf+0x32e>
    274a:	28 0c       	add	r2, r8
    274c:	92 2c       	mov	r9, r2
    274e:	9b 18       	sub	r9, r11
    2750:	0e c0       	rjmp	.+28     	; 0x276e <vfprintf+0x330>
    2752:	b2 14       	cp	r11, r2
    2754:	60 f4       	brcc	.+24     	; 0x276e <vfprintf+0x330>
    2756:	b6 01       	movw	r22, r12
    2758:	80 e2       	ldi	r24, 0x20	; 32
    275a:	90 e0       	ldi	r25, 0x00	; 0
    275c:	0e 94 16 14 	call	0x282c	; 0x282c <fputc>
    2760:	b3 94       	inc	r11
    2762:	f7 cf       	rjmp	.-18     	; 0x2752 <vfprintf+0x314>
    2764:	b2 14       	cp	r11, r2
    2766:	18 f4       	brcc	.+6      	; 0x276e <vfprintf+0x330>
    2768:	2b 18       	sub	r2, r11
    276a:	02 c0       	rjmp	.+4      	; 0x2770 <vfprintf+0x332>
    276c:	98 2c       	mov	r9, r8
    276e:	21 2c       	mov	r2, r1
    2770:	a4 fe       	sbrs	r10, 4
    2772:	10 c0       	rjmp	.+32     	; 0x2794 <vfprintf+0x356>
    2774:	b6 01       	movw	r22, r12
    2776:	80 e3       	ldi	r24, 0x30	; 48
    2778:	90 e0       	ldi	r25, 0x00	; 0
    277a:	0e 94 16 14 	call	0x282c	; 0x282c <fputc>
    277e:	a2 fe       	sbrs	r10, 2
    2780:	17 c0       	rjmp	.+46     	; 0x27b0 <vfprintf+0x372>
    2782:	a1 fc       	sbrc	r10, 1
    2784:	03 c0       	rjmp	.+6      	; 0x278c <vfprintf+0x34e>
    2786:	88 e7       	ldi	r24, 0x78	; 120
    2788:	90 e0       	ldi	r25, 0x00	; 0
    278a:	02 c0       	rjmp	.+4      	; 0x2790 <vfprintf+0x352>
    278c:	88 e5       	ldi	r24, 0x58	; 88
    278e:	90 e0       	ldi	r25, 0x00	; 0
    2790:	b6 01       	movw	r22, r12
    2792:	0c c0       	rjmp	.+24     	; 0x27ac <vfprintf+0x36e>
    2794:	8a 2d       	mov	r24, r10
    2796:	86 78       	andi	r24, 0x86	; 134
    2798:	59 f0       	breq	.+22     	; 0x27b0 <vfprintf+0x372>
    279a:	a1 fe       	sbrs	r10, 1
    279c:	02 c0       	rjmp	.+4      	; 0x27a2 <vfprintf+0x364>
    279e:	8b e2       	ldi	r24, 0x2B	; 43
    27a0:	01 c0       	rjmp	.+2      	; 0x27a4 <vfprintf+0x366>
    27a2:	80 e2       	ldi	r24, 0x20	; 32
    27a4:	a7 fc       	sbrc	r10, 7
    27a6:	8d e2       	ldi	r24, 0x2D	; 45
    27a8:	b6 01       	movw	r22, r12
    27aa:	90 e0       	ldi	r25, 0x00	; 0
    27ac:	0e 94 16 14 	call	0x282c	; 0x282c <fputc>
    27b0:	89 14       	cp	r8, r9
    27b2:	38 f4       	brcc	.+14     	; 0x27c2 <vfprintf+0x384>
    27b4:	b6 01       	movw	r22, r12
    27b6:	80 e3       	ldi	r24, 0x30	; 48
    27b8:	90 e0       	ldi	r25, 0x00	; 0
    27ba:	0e 94 16 14 	call	0x282c	; 0x282c <fputc>
    27be:	9a 94       	dec	r9
    27c0:	f7 cf       	rjmp	.-18     	; 0x27b0 <vfprintf+0x372>
    27c2:	8a 94       	dec	r8
    27c4:	f3 01       	movw	r30, r6
    27c6:	e8 0d       	add	r30, r8
    27c8:	f1 1d       	adc	r31, r1
    27ca:	80 81       	ld	r24, Z
    27cc:	b6 01       	movw	r22, r12
    27ce:	90 e0       	ldi	r25, 0x00	; 0
    27d0:	0e 94 16 14 	call	0x282c	; 0x282c <fputc>
    27d4:	81 10       	cpse	r8, r1
    27d6:	f5 cf       	rjmp	.-22     	; 0x27c2 <vfprintf+0x384>
    27d8:	22 20       	and	r2, r2
    27da:	09 f4       	brne	.+2      	; 0x27de <vfprintf+0x3a0>
    27dc:	42 ce       	rjmp	.-892    	; 0x2462 <vfprintf+0x24>
    27de:	b6 01       	movw	r22, r12
    27e0:	80 e2       	ldi	r24, 0x20	; 32
    27e2:	90 e0       	ldi	r25, 0x00	; 0
    27e4:	0e 94 16 14 	call	0x282c	; 0x282c <fputc>
    27e8:	2a 94       	dec	r2
    27ea:	f6 cf       	rjmp	.-20     	; 0x27d8 <vfprintf+0x39a>
    27ec:	f6 01       	movw	r30, r12
    27ee:	86 81       	ldd	r24, Z+6	; 0x06
    27f0:	97 81       	ldd	r25, Z+7	; 0x07
    27f2:	02 c0       	rjmp	.+4      	; 0x27f8 <vfprintf+0x3ba>
    27f4:	8f ef       	ldi	r24, 0xFF	; 255
    27f6:	9f ef       	ldi	r25, 0xFF	; 255
    27f8:	2b 96       	adiw	r28, 0x0b	; 11
    27fa:	e2 e1       	ldi	r30, 0x12	; 18
    27fc:	0c 94 cc 14 	jmp	0x2998	; 0x2998 <__epilogue_restores__>

00002800 <strnlen_P>:
    2800:	fc 01       	movw	r30, r24
    2802:	05 90       	lpm	r0, Z+
    2804:	61 50       	subi	r22, 0x01	; 1
    2806:	70 40       	sbci	r23, 0x00	; 0
    2808:	01 10       	cpse	r0, r1
    280a:	d8 f7       	brcc	.-10     	; 0x2802 <strnlen_P+0x2>
    280c:	80 95       	com	r24
    280e:	90 95       	com	r25
    2810:	8e 0f       	add	r24, r30
    2812:	9f 1f       	adc	r25, r31
    2814:	08 95       	ret

00002816 <strnlen>:
    2816:	fc 01       	movw	r30, r24
    2818:	61 50       	subi	r22, 0x01	; 1
    281a:	70 40       	sbci	r23, 0x00	; 0
    281c:	01 90       	ld	r0, Z+
    281e:	01 10       	cpse	r0, r1
    2820:	d8 f7       	brcc	.-10     	; 0x2818 <strnlen+0x2>
    2822:	80 95       	com	r24
    2824:	90 95       	com	r25
    2826:	8e 0f       	add	r24, r30
    2828:	9f 1f       	adc	r25, r31
    282a:	08 95       	ret

0000282c <fputc>:
    282c:	0f 93       	push	r16
    282e:	1f 93       	push	r17
    2830:	cf 93       	push	r28
    2832:	df 93       	push	r29
    2834:	fb 01       	movw	r30, r22
    2836:	23 81       	ldd	r18, Z+3	; 0x03
    2838:	21 fd       	sbrc	r18, 1
    283a:	03 c0       	rjmp	.+6      	; 0x2842 <fputc+0x16>
    283c:	8f ef       	ldi	r24, 0xFF	; 255
    283e:	9f ef       	ldi	r25, 0xFF	; 255
    2840:	2c c0       	rjmp	.+88     	; 0x289a <fputc+0x6e>
    2842:	22 ff       	sbrs	r18, 2
    2844:	16 c0       	rjmp	.+44     	; 0x2872 <fputc+0x46>
    2846:	46 81       	ldd	r20, Z+6	; 0x06
    2848:	57 81       	ldd	r21, Z+7	; 0x07
    284a:	24 81       	ldd	r18, Z+4	; 0x04
    284c:	35 81       	ldd	r19, Z+5	; 0x05
    284e:	42 17       	cp	r20, r18
    2850:	53 07       	cpc	r21, r19
    2852:	44 f4       	brge	.+16     	; 0x2864 <fputc+0x38>
    2854:	a0 81       	ld	r26, Z
    2856:	b1 81       	ldd	r27, Z+1	; 0x01
    2858:	9d 01       	movw	r18, r26
    285a:	2f 5f       	subi	r18, 0xFF	; 255
    285c:	3f 4f       	sbci	r19, 0xFF	; 255
    285e:	31 83       	std	Z+1, r19	; 0x01
    2860:	20 83       	st	Z, r18
    2862:	8c 93       	st	X, r24
    2864:	26 81       	ldd	r18, Z+6	; 0x06
    2866:	37 81       	ldd	r19, Z+7	; 0x07
    2868:	2f 5f       	subi	r18, 0xFF	; 255
    286a:	3f 4f       	sbci	r19, 0xFF	; 255
    286c:	37 83       	std	Z+7, r19	; 0x07
    286e:	26 83       	std	Z+6, r18	; 0x06
    2870:	14 c0       	rjmp	.+40     	; 0x289a <fputc+0x6e>
    2872:	8b 01       	movw	r16, r22
    2874:	ec 01       	movw	r28, r24
    2876:	fb 01       	movw	r30, r22
    2878:	00 84       	ldd	r0, Z+8	; 0x08
    287a:	f1 85       	ldd	r31, Z+9	; 0x09
    287c:	e0 2d       	mov	r30, r0
    287e:	09 95       	icall
    2880:	89 2b       	or	r24, r25
    2882:	e1 f6       	brne	.-72     	; 0x283c <fputc+0x10>
    2884:	d8 01       	movw	r26, r16
    2886:	16 96       	adiw	r26, 0x06	; 6
    2888:	8d 91       	ld	r24, X+
    288a:	9c 91       	ld	r25, X
    288c:	17 97       	sbiw	r26, 0x07	; 7
    288e:	01 96       	adiw	r24, 0x01	; 1
    2890:	17 96       	adiw	r26, 0x07	; 7
    2892:	9c 93       	st	X, r25
    2894:	8e 93       	st	-X, r24
    2896:	16 97       	sbiw	r26, 0x06	; 6
    2898:	ce 01       	movw	r24, r28
    289a:	df 91       	pop	r29
    289c:	cf 91       	pop	r28
    289e:	1f 91       	pop	r17
    28a0:	0f 91       	pop	r16
    28a2:	08 95       	ret

000028a4 <__ultoa_invert>:
    28a4:	fa 01       	movw	r30, r20
    28a6:	aa 27       	eor	r26, r26
    28a8:	28 30       	cpi	r18, 0x08	; 8
    28aa:	51 f1       	breq	.+84     	; 0x2900 <__ultoa_invert+0x5c>
    28ac:	20 31       	cpi	r18, 0x10	; 16
    28ae:	81 f1       	breq	.+96     	; 0x2910 <__ultoa_invert+0x6c>
    28b0:	e8 94       	clt
    28b2:	6f 93       	push	r22
    28b4:	6e 7f       	andi	r22, 0xFE	; 254
    28b6:	6e 5f       	subi	r22, 0xFE	; 254
    28b8:	7f 4f       	sbci	r23, 0xFF	; 255
    28ba:	8f 4f       	sbci	r24, 0xFF	; 255
    28bc:	9f 4f       	sbci	r25, 0xFF	; 255
    28be:	af 4f       	sbci	r26, 0xFF	; 255
    28c0:	b1 e0       	ldi	r27, 0x01	; 1
    28c2:	3e d0       	rcall	.+124    	; 0x2940 <__ultoa_invert+0x9c>
    28c4:	b4 e0       	ldi	r27, 0x04	; 4
    28c6:	3c d0       	rcall	.+120    	; 0x2940 <__ultoa_invert+0x9c>
    28c8:	67 0f       	add	r22, r23
    28ca:	78 1f       	adc	r23, r24
    28cc:	89 1f       	adc	r24, r25
    28ce:	9a 1f       	adc	r25, r26
    28d0:	a1 1d       	adc	r26, r1
    28d2:	68 0f       	add	r22, r24
    28d4:	79 1f       	adc	r23, r25
    28d6:	8a 1f       	adc	r24, r26
    28d8:	91 1d       	adc	r25, r1
    28da:	a1 1d       	adc	r26, r1
    28dc:	6a 0f       	add	r22, r26
    28de:	71 1d       	adc	r23, r1
    28e0:	81 1d       	adc	r24, r1
    28e2:	91 1d       	adc	r25, r1
    28e4:	a1 1d       	adc	r26, r1
    28e6:	20 d0       	rcall	.+64     	; 0x2928 <__ultoa_invert+0x84>
    28e8:	09 f4       	brne	.+2      	; 0x28ec <__ultoa_invert+0x48>
    28ea:	68 94       	set
    28ec:	3f 91       	pop	r19
    28ee:	2a e0       	ldi	r18, 0x0A	; 10
    28f0:	26 9f       	mul	r18, r22
    28f2:	11 24       	eor	r1, r1
    28f4:	30 19       	sub	r19, r0
    28f6:	30 5d       	subi	r19, 0xD0	; 208
    28f8:	31 93       	st	Z+, r19
    28fa:	de f6       	brtc	.-74     	; 0x28b2 <__ultoa_invert+0xe>
    28fc:	cf 01       	movw	r24, r30
    28fe:	08 95       	ret
    2900:	46 2f       	mov	r20, r22
    2902:	47 70       	andi	r20, 0x07	; 7
    2904:	40 5d       	subi	r20, 0xD0	; 208
    2906:	41 93       	st	Z+, r20
    2908:	b3 e0       	ldi	r27, 0x03	; 3
    290a:	0f d0       	rcall	.+30     	; 0x292a <__ultoa_invert+0x86>
    290c:	c9 f7       	brne	.-14     	; 0x2900 <__ultoa_invert+0x5c>
    290e:	f6 cf       	rjmp	.-20     	; 0x28fc <__ultoa_invert+0x58>
    2910:	46 2f       	mov	r20, r22
    2912:	4f 70       	andi	r20, 0x0F	; 15
    2914:	40 5d       	subi	r20, 0xD0	; 208
    2916:	4a 33       	cpi	r20, 0x3A	; 58
    2918:	18 f0       	brcs	.+6      	; 0x2920 <__ultoa_invert+0x7c>
    291a:	49 5d       	subi	r20, 0xD9	; 217
    291c:	31 fd       	sbrc	r19, 1
    291e:	40 52       	subi	r20, 0x20	; 32
    2920:	41 93       	st	Z+, r20
    2922:	02 d0       	rcall	.+4      	; 0x2928 <__ultoa_invert+0x84>
    2924:	a9 f7       	brne	.-22     	; 0x2910 <__ultoa_invert+0x6c>
    2926:	ea cf       	rjmp	.-44     	; 0x28fc <__ultoa_invert+0x58>
    2928:	b4 e0       	ldi	r27, 0x04	; 4
    292a:	a6 95       	lsr	r26
    292c:	97 95       	ror	r25
    292e:	87 95       	ror	r24
    2930:	77 95       	ror	r23
    2932:	67 95       	ror	r22
    2934:	ba 95       	dec	r27
    2936:	c9 f7       	brne	.-14     	; 0x292a <__ultoa_invert+0x86>
    2938:	00 97       	sbiw	r24, 0x00	; 0
    293a:	61 05       	cpc	r22, r1
    293c:	71 05       	cpc	r23, r1
    293e:	08 95       	ret
    2940:	9b 01       	movw	r18, r22
    2942:	ac 01       	movw	r20, r24
    2944:	0a 2e       	mov	r0, r26
    2946:	06 94       	lsr	r0
    2948:	57 95       	ror	r21
    294a:	47 95       	ror	r20
    294c:	37 95       	ror	r19
    294e:	27 95       	ror	r18
    2950:	ba 95       	dec	r27
    2952:	c9 f7       	brne	.-14     	; 0x2946 <__ultoa_invert+0xa2>
    2954:	62 0f       	add	r22, r18
    2956:	73 1f       	adc	r23, r19
    2958:	84 1f       	adc	r24, r20
    295a:	95 1f       	adc	r25, r21
    295c:	a0 1d       	adc	r26, r0
    295e:	08 95       	ret

00002960 <__prologue_saves__>:
    2960:	2f 92       	push	r2
    2962:	3f 92       	push	r3
    2964:	4f 92       	push	r4
    2966:	5f 92       	push	r5
    2968:	6f 92       	push	r6
    296a:	7f 92       	push	r7
    296c:	8f 92       	push	r8
    296e:	9f 92       	push	r9
    2970:	af 92       	push	r10
    2972:	bf 92       	push	r11
    2974:	cf 92       	push	r12
    2976:	df 92       	push	r13
    2978:	ef 92       	push	r14
    297a:	ff 92       	push	r15
    297c:	0f 93       	push	r16
    297e:	1f 93       	push	r17
    2980:	cf 93       	push	r28
    2982:	df 93       	push	r29
    2984:	cd b7       	in	r28, 0x3d	; 61
    2986:	de b7       	in	r29, 0x3e	; 62
    2988:	ca 1b       	sub	r28, r26
    298a:	db 0b       	sbc	r29, r27
    298c:	0f b6       	in	r0, 0x3f	; 63
    298e:	f8 94       	cli
    2990:	de bf       	out	0x3e, r29	; 62
    2992:	0f be       	out	0x3f, r0	; 63
    2994:	cd bf       	out	0x3d, r28	; 61
    2996:	09 94       	ijmp

00002998 <__epilogue_restores__>:
    2998:	2a 88       	ldd	r2, Y+18	; 0x12
    299a:	39 88       	ldd	r3, Y+17	; 0x11
    299c:	48 88       	ldd	r4, Y+16	; 0x10
    299e:	5f 84       	ldd	r5, Y+15	; 0x0f
    29a0:	6e 84       	ldd	r6, Y+14	; 0x0e
    29a2:	7d 84       	ldd	r7, Y+13	; 0x0d
    29a4:	8c 84       	ldd	r8, Y+12	; 0x0c
    29a6:	9b 84       	ldd	r9, Y+11	; 0x0b
    29a8:	aa 84       	ldd	r10, Y+10	; 0x0a
    29aa:	b9 84       	ldd	r11, Y+9	; 0x09
    29ac:	c8 84       	ldd	r12, Y+8	; 0x08
    29ae:	df 80       	ldd	r13, Y+7	; 0x07
    29b0:	ee 80       	ldd	r14, Y+6	; 0x06
    29b2:	fd 80       	ldd	r15, Y+5	; 0x05
    29b4:	0c 81       	ldd	r16, Y+4	; 0x04
    29b6:	1b 81       	ldd	r17, Y+3	; 0x03
    29b8:	aa 81       	ldd	r26, Y+2	; 0x02
    29ba:	b9 81       	ldd	r27, Y+1	; 0x01
    29bc:	ce 0f       	add	r28, r30
    29be:	d1 1d       	adc	r29, r1
    29c0:	0f b6       	in	r0, 0x3f	; 63
    29c2:	f8 94       	cli
    29c4:	de bf       	out	0x3e, r29	; 62
    29c6:	0f be       	out	0x3f, r0	; 63
    29c8:	cd bf       	out	0x3d, r28	; 61
    29ca:	ed 01       	movw	r28, r26
    29cc:	08 95       	ret

000029ce <_exit>:
    29ce:	f8 94       	cli

000029d0 <__stop_program>:
    29d0:	ff cf       	rjmp	.-2      	; 0x29d0 <__stop_program>
